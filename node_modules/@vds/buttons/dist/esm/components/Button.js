import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { calculateRem } from '@uie/javascript-style-helpers';
import { Button as CoreButton } from '@vds-core/buttons';
import { BodyConfig, TypographyConfig } from '@vds/typography';
import { colors } from '@vds/theme';

var Button = function Button(props) {
  var width = props.width,
      size = props.size;

  function _calculateButtonHeight(size) {
    var height;

    if (size === 'small') {
      height = calculateRem(28);
    } else {
      height = calculateRem(44);
    }

    return height;
  }

  function _calculateSideMargin(size, width) {
    var sideMargin;

    if (size === 'small') {
      sideMargin = 16;
    } else {
      sideMargin = width === 'auto' ? 44 : 22;
    }

    return calculateRem(sideMargin);
  }

  return /*#__PURE__*/React.createElement(CoreButton, _extends({}, props, {
    width: size === 'small' ? 'auto' : width,
    hitArea: true,
    hoverState: true,
    focusState: true,
    activeState: true,
    overflowEllipsis: true,
    typescale: TypographyConfig.getTypescale(),
    smallButtonPadding: false,
    colorConfig: colors,
    bodyConfig: BodyConfig,
    calculateButtonHeight: _calculateButtonHeight,
    calculateSideMargin: _calculateSideMargin,
    calculateFontWeight: 700
  }));
};

export default Button;