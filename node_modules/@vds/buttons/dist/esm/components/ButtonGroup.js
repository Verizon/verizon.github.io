import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { ButtonGroup as CoreButtonGroup } from '@vds-core/buttons';
import Button from './Button';

var ButtonGroup = function ButtonGroup(props) {
  function _onClick(e, onClick) {
    if (e.detail !== 0) {
      onClick && onClick(e);
      e.target.blur();
    } else if (e.type === 'click') {
      onClick && onClick(e);
    }
  }

  function _renderButton(props) {
    var type = props.type,
        children = props.children,
        size = props.size,
        width = props.width,
        _onClick2 = props.onClick;

    if (type === 'primary') {
      return /*#__PURE__*/React.createElement(Button, _extends({}, props, {
        primary: true,
        style: {
          maxWidth: '100%'
        },
        ariaLabel: children,
        children: children,
        size: size,
        width: size !== 'small' && '100%',
        onClick: function onClick(e) {
          return _onClick(e, _onClick2);
        }
      }));
    } else if (type === 'secondary') {
      return /*#__PURE__*/React.createElement(Button, _extends({}, props, {
        secondary: true,
        style: {
          maxWidth: '100%'
        },
        ariaLabel: children,
        children: children,
        size: size,
        width: size !== 'small' && '100%',
        onClick: function onClick(e) {
          return _onClick(e, _onClick2);
        }
      }));
    }
  }

  return /*#__PURE__*/React.createElement(CoreButtonGroup, _extends({}, props, {
    renderButton: _renderButton,
    maxWidth: "596px",
    smallButtonSpacing: "4X"
  }));
};

export default ButtonGroup;