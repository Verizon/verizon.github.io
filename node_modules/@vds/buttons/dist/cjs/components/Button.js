"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _javascriptStyleHelpers = require("@uie/javascript-style-helpers");

var _buttons = require("@vds-core/buttons");

var _typography = require("@vds/typography");

var _theme = require("@vds/theme");

var Button = function Button(props) {
  var width = props.width,
      size = props.size;

  function _calculateButtonHeight(size) {
    var height;

    if (size === 'small') {
      height = (0, _javascriptStyleHelpers.calculateRem)(28);
    } else {
      height = (0, _javascriptStyleHelpers.calculateRem)(44);
    }

    return height;
  }

  function _calculateSideMargin(size, width) {
    var sideMargin;

    if (size === 'small') {
      sideMargin = 16;
    } else {
      sideMargin = width === 'auto' ? 44 : 22;
    }

    return (0, _javascriptStyleHelpers.calculateRem)(sideMargin);
  }

  return /*#__PURE__*/_react["default"].createElement(_buttons.Button, (0, _extends2["default"])({}, props, {
    width: size === 'small' ? 'auto' : width,
    hitArea: true,
    hoverState: true,
    focusState: true,
    activeState: true,
    overflowEllipsis: true,
    typescale: _typography.TypographyConfig.getTypescale(),
    smallButtonPadding: false,
    colorConfig: _theme.colors,
    bodyConfig: _typography.BodyConfig,
    calculateButtonHeight: _calculateButtonHeight,
    calculateSideMargin: _calculateSideMargin,
    calculateFontWeight: 700
  }));
};

var _default = Button;
exports["default"] = _default;