import WebFont from 'webfontloader';
import { Fonts as CoreFonts } from '@vds-core/typography';

//****** To-do, test loading in the families first asynchronously from check whether to load the url if necessary ******//

let FontConfig = {
  loaded: false,
};

//Turn on or off the font loader
function setFontLoaded(loaded) {
  FontConfig.loaded = loaded ? true : false;
  CoreFonts.setFontLoaded && CoreFonts.setFontLoaded(loaded);
}
function checkFontLoaded() {
  return FontConfig.loaded;
}

// Define and Load the fonts
let customConfig = {
  families: ['Verizon-NHG-eTX', 'Verizon-NHG-eDS'],
};

let fontUri1 =
  'https://respframework.verizon.com/fonts/eText/verizon-nhg-etx-update.css';
let fontUri2 = 'respframework.verizon.com/fonts/eText/verizon-nhg-etx.css';

function finishLoading(customConfig) {
  const WebFontConfig = {
    custom: customConfig,
    timeout: 10,
    inactive: function() {},
  };

  WebFont.load(WebFontConfig);
}

function checkIfLoaded() {
  const sheetRefs = document.styleSheets;
  const sheetsArray = sheetRefs && Object.values(sheetRefs);

  return sheetsArray.find(styleSheet => {
    return styleSheet.href === fontUri1 || styleSheet.href === fontUri2;
  });
}

function loadFonts(loaded) {
  const headTag =
    document.documentElement && document.documentElement.outerHTML;
  const fontActive =
    (headTag.indexOf('verizonnhgetx') > -1 ||
      headTag.indexOf('verizonnhgeds') > -1) &&
    headTag.indexOf('wf-active') > -1;

  if (!fontActive) {
    //Double check in case the head tag is being wiped programmatically
    let loaded = checkIfLoaded();
    if (!loaded) customConfig.urls = [fontUri1];
    finishLoading(customConfig);
  }
}

if (!FontConfig.loaded) {
  CoreFonts.setFontLoaded && CoreFonts.setFontLoaded(true);
  loadFonts();
}

export const Fonts = {
  VerizonNHGeDS: 'Verizon-NHG-eDS', // Display
  VerizonNHGeTX: 'Verizon-NHG-eTX', // Text
  checkFontLoaded: checkFontLoaded,
  setFontLoaded: setFontLoaded,
  loadFonts: loadFonts,
};
