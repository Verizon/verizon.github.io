const path = require('path');
const svgFolderPath = path.resolve(__dirname, '../src/assets/svgs');
const fs = require('fs');
const { parseSync } = require('svgson');
const svgFilePath = path.resolve(__dirname, '../src/Icon/data.json');

function run() {
  let svgFileJson = {};
  let svgs = fs.readdirSync(svgFolderPath);
  svgs.forEach(svgFile => {
    if (svgFile.indexOf('.svg') == -1) return;
    let svgFileNameWithoutSuffix = svgFile.split('.')[0];
    const svgFilePath = `${svgFolderPath}/${svgFile}`;
    let svgFileHtml = fs.readFileSync(svgFilePath, 'utf-8');
    const svgJson = parseSync(svgFileHtml);
    let svgObj = {
      viewBox: svgJson.attributes.viewBox,
      paths: [],
    };

    (svgJson.children || []).forEach(handleChild);

    function handleChild(child) {
      if (child.name === 'path') {
        if (svgObj.paths) {
          svgObj.paths.push(child.attributes);
        } else {
          svgObj.paths = [child.attributes];
        }
      }
      if (child.name === 'g') {
        child.children.forEach(handleChild);
      }
      if (child.name === 'rect') {
        if (svgObj['rect']) {
          svgObj['rect'].push(child.attributes);
        } else {
          svgObj['rect'] = [child.attributes];
        }
      }
      if (child.name === 'circle') {
        if (svgObj['circle']) {
          svgObj['circle'].push(child.attributes);
        } else {
          svgObj['circle'] = [child.attributes];
        }
      }
      if (child.name === 'polyline') {
        if (svgObj['polyline']) {
          svgObj['polyline'].push(child.attributes);
        } else {
          svgObj['polyline'] = [child.attributes];
        }
      }
      if (child.name === 'line') {
        if (svgObj['line']) {
          svgObj['line'].push(child.attributes);
        } else {
          svgObj['line'] = [child.attributes];
        }
      }
      if (child.name === 'polygon') {
        if (svgObj['polygon']) {
          svgObj['polygon'].push(child.attributes);
        } else {
          svgObj['polygon'] = [child.attributes];
        }
      }
    }

    svgFileJson[svgFileNameWithoutSuffix] = svgObj;
  });
  let stringifiedFileJson = JSON.stringify(svgFileJson, null, 4);
  fs.writeFileSync(svgFilePath, stringifiedFileJson);
}

run();
