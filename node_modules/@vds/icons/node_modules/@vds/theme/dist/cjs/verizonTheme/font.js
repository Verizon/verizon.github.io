"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _javascriptStyleHelpers = require("@uie/javascript-style-helpers");

var _colors = _interopRequireDefault(require("./colors"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var fontFamilies = {
  fontFamily: '"Verizon-NHG-eTX", Helvetica, Arial, sans-serif',
  monospace: '"SFMono-Regular", "RobotoMono-Regular", monospace',
  sans: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
  serif: 'serif',
  iconFontUrl: 'https://respframework.verizon.com/fonts/verizon-icons/fonts.css',
  iconFont: 'verizon-icons'
};
var fontStyles = {
  fontColor: _colors["default"].black,
  fontColorAlt: _colors["default"].white,
  fontSize: (0, _javascriptStyleHelpers.calculateRem)(16)
};
var fontWeights = {
  light: 300,
  normal: 400,
  medium: 500,
  bold: 700
};

var _default = _objectSpread(_objectSpread(_objectSpread({}, fontFamilies), fontStyles), {}, {
  fontWeights: fontWeights,
  fontHeader: fontFamilies.fontFamily,
  fontBody: fontFamilies.sans,
  fontWeight: fontWeights
});

exports["default"] = _default;