"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _javascriptStyleHelpers = require("@uie/javascript-style-helpers");

var _fonts = require("../../fonts");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  font-size: ", ";\n  font-weight: ", ";\n  line-height: ", ";\n  font-family: ", ";\n  letter-spacing: ", ";\n  color: ", ";\n  margin: 0;\n  text-decoration: none;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var propTypes = {
  primitive: _propTypes["default"].oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'span']),
  children: _propTypes["default"].node
};
var defaultProps = {
  children: null,
  primitive: 'p',
  fontsconfig: _fonts.Fonts
};
/**
 * @ignore
 */

var StyledTypography = /*#__PURE__*/(0, _styledComponents["default"])(function (props) {
  return /*#__PURE__*/_react["default"].createElement(props.primitive, props, props.children);
}).withConfig({
  displayName: "StyledTypography",
  componentId: "sc-5k55co-0"
})(_templateObject(), function (_ref) {
  var fontSize = _ref.fontSize;
  return (0, _javascriptStyleHelpers.calculateRem)(fontSize);
}, function (_ref2) {
  var fontWeight = _ref2.fontWeight;
  return fontWeight;
}, function (_ref3) {
  var lineheight = _ref3.lineheight;
  return (0, _javascriptStyleHelpers.calculateRem)(lineheight);
}, function (_ref4) {
  var fontFamily = _ref4.fontFamily;
  return fontFamily;
}, function (_ref5) {
  var letterSpacing = _ref5.letterSpacing;
  return letterSpacing && (0, _javascriptStyleHelpers.calculateRem)(letterSpacing);
}, function (_ref6) {
  var color = _ref6.color;
  return color;
});
/**
 * @ignore
 */

var Typography = function Typography(props) {
  var primitive = props.primitive,
      children = props.children,
      fontsconfig = props.fontsconfig;

  if (!_fonts.Fonts.checkFontLoaded) {
    fontsconfig.loadFonts();
  }

  return /*#__PURE__*/_react["default"].createElement(StyledTypography, (0, _extends2["default"])({}, props, {
    primitive: primitive
  }), children);
};

Typography.propTypes = propTypes;
Typography.defaultProps = defaultProps;
var _default = Typography;
exports["default"] = _default;