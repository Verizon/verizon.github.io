import _extends from "@babel/runtime/helpers/extends";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  font-size: ", ";\n  font-weight: ", ";\n  line-height: ", ";\n  font-family: ", ";\n  letter-spacing: ", ";\n  color: ", ";\n  margin: 0;\n  text-decoration: none;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { calculateRem } from '@uie/javascript-style-helpers';
import { Fonts } from '../../fonts';
var propTypes = {
  primitive: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'span']),
  children: PropTypes.node
};
var defaultProps = {
  children: null,
  primitive: 'p',
  fontsconfig: Fonts
};
/**
 * @ignore
 */

var StyledTypography = /*#__PURE__*/styled(function (props) {
  return /*#__PURE__*/React.createElement(props.primitive, props, props.children);
}).withConfig({
  displayName: "StyledTypography",
  componentId: "sc-5k55co-0"
})(_templateObject(), function (_ref) {
  var fontSize = _ref.fontSize;
  return calculateRem(fontSize);
}, function (_ref2) {
  var fontWeight = _ref2.fontWeight;
  return fontWeight;
}, function (_ref3) {
  var lineheight = _ref3.lineheight;
  return calculateRem(lineheight);
}, function (_ref4) {
  var fontFamily = _ref4.fontFamily;
  return fontFamily;
}, function (_ref5) {
  var letterSpacing = _ref5.letterSpacing;
  return letterSpacing && calculateRem(letterSpacing);
}, function (_ref6) {
  var color = _ref6.color;
  return color;
});
/**
 * @ignore
 */

var Typography = function Typography(props) {
  var primitive = props.primitive,
      children = props.children,
      fontsconfig = props.fontsconfig;

  if (!Fonts.checkFontLoaded) {
    fontsconfig.loadFonts();
  }

  return /*#__PURE__*/React.createElement(StyledTypography, _extends({}, props, {
    primitive: primitive
  }), children);
};

Typography.propTypes = propTypes;
Typography.defaultProps = defaultProps;
export default Typography;