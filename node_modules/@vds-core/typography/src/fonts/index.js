import WebFont from 'webfontloader';

//****** To-do, test loading in the families first asynchronously from check whether to load the url if necessary ******//

const familes = ['BrandFont-Text', 'BrandFont-Display'];

let FontConfig = {
  loaded: false,
  loadingFonts: [],
};

//Turn on or off the font loader
function setFontLoaded(loaded) {
  FontConfig.loaded = loaded ? true : false;
}

function checkFontLoaded() {
  return FontConfig.loaded;
}

// Define and Load the fonts
let customConfig = {
  families: familes,
};

const fontUri1 = 'https://respframework.verizon.com/fonts/v2/fonts-update.css';
const fontUri2 = 'https://respframework.verizon.com/fonts/v2/fonts.css';
const fontUri3 =
  'https://respframework.verizon.com/fonts/eText/verizon-nhg-etx-update.css';

function finishLoading() {
  const WebFontConfig = {
    custom: customConfig,
    timeout: 10, // default 3000
    active: function() {
      setFontLoaded(true);
    },
    inactive: function() {
      console.warn('fonts could not be loaded.');
    },
  };

  WebFont.load(WebFontConfig);
}

function checkIfLoaded() {
  const sheetRefs = document.styleSheets;
  const sheetsArray = sheetRefs && Object.values(sheetRefs);

  return sheetsArray.find(styleSheet => {
    return (
      styleSheet.href === fontUri1 ||
      styleSheet.href === fontUri2 ||
      styleSheet.href === fontUri3
    );
  });
}

function loadFonts() {
  if (checkFontLoaded()) return;
  let loaded = checkIfLoaded();

  if (!loaded) {
    customConfig.urls = [fontUri1];
    finishLoading(customConfig);
  }
}

function addMetaTags() {
  let link1 = document.createElement('meta');
  link1.setAttribute('http-equiv', 'Cache-Control');
  link1.content = 'no-cache, no-store, must-revalidate';

  let link2 = document.createElement('meta');
  link2.setAttribute('http-equiv', 'Pragma');
  link2.content = 'no-cache';

  let link3 = document.createElement('meta');
  link3.setAttribute('http-equiv', 'Expires');
  link3.content = '0';

  [(link1, link2, link3)].forEach(link =>
    document.getElementsByTagName('head')[0].appendChild(link)
  );
}

addMetaTags();
// loadFonts();

export const Fonts = {
  NeueHaasGroteskText: 'BrandFont-Text', // BAU - Text Normal
  NeueHaasGroteskDisplay: 'BrandFont-Display', // BAU - Text Display,
  checkFontLoaded: checkFontLoaded,
  setFontLoaded: setFontLoaded,
  loadFonts: loadFonts,
};
