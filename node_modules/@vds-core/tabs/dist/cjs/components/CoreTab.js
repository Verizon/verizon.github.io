"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.CoreTab = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _TabButton = _interopRequireDefault(require("./TabButton"));

var _javascriptStyleHelpers = require("@uie/javascript-style-helpers");

var _theme = require("@vds-core/theme");

var _typography = require("@vds-core/typography");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  position: relative;\n  display: inline-block;\n  outline: none;\n  margin: ", ";\n  min-width: ", ";\n  :last-child {\n    margin: 0;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var propTypes = {
  /**
   * The text label of the tab.
   */
  label: _propTypes["default"].string.isRequired,

  /**
   * An optional callback that is called when this Tab is clicked. Passes parameters (event, tabIndex).
   */
  onClick: _propTypes["default"].func,

  /**
   * If provided, it will set this Tab to the Active Tab on render.<br><br><strong>Note:</strong> <br>This will override whatever was set on the Tab <code>selectedIndex</code> Prop.<br>Also, it is "Last One Wins", ie: if this is set on multiple Tab elements, the last element with it set will be the Active Tab.
   */
  active: _propTypes["default"].bool,

  /**
   * @ignore
   */
  hide: _propTypes["default"].oneOf([true, false, 0, 1, 2]),

  /**
   * Minimum Width of this Tab.
   */
  minWidth: _propTypes["default"].string,

  /**
   * Option to make Accent Border 100% width of this Tab.
   */
  indicatorFillTab: _propTypes["default"].bool,

  /**
   * Sets the Position of the Active/Hover Border Accent on this Tab.
   */
  indicatorPosition: _propTypes["default"].oneOf(['bottom', 'top', 'none']),

  /**
   * If provided, this will be used instead of the random uniqueId generated by the Tabs Component that is used to associate the Tab <code>li</code> and <code>button</code> with the TabPanel <code>div</code> components.
   */
  uniqueId: _propTypes["default"].string,

  /**
   * @ignore
   */
  className: _propTypes["default"].string,

  /**
   * @ignore
   */
  handleVisibilityChange: _propTypes["default"].func,

  /**
   * @ignore
   */
  onVisibilityChange: _propTypes["default"].func,

  /**
   * Supplies a set height on the tab component.
   */
  tabHeight: _propTypes["default"].string,

  /**
   * @deprecated
   * Minimum Width of this Tab.
   */
  minTabWidth: _propTypes["default"].string,
  //DEPRECATED

  /**
   * @deprecated
   * Option to make Accent Border 100% width of this Tab.
   */
  accentFill: _propTypes["default"].bool,
  // DEPRECATED

  /**
   * @deprecated
   * Sets the Position of the Active/Hover Border Accent on this Tab.
   */
  accentPosition: _propTypes["default"].oneOf(['bottom', 'top', 'none']),
  //DEPRECATED

  /**
   * @deprecated
   * If provided, it will set this Tab to the Active Tab on render.<br><br><strong>Note:</strong> <br>This will override whatever was set on the Tab <code>activeTabIndex</code> Prop.<br>Also, it is "Last One Wins", ie: if this is set on multiple Tab elements, the last element with it set will be the Active Tab.
   */
  isActive: _propTypes["default"].bool,
  // DEPRECATED

  /**
   * @ignore
   */
  focusState: _propTypes["default"].bool,

  /**
   * @ignore
   */
  minHeight: _propTypes["default"].bool,

  /**
   * @ignore
   */
  typescale: _propTypes["default"].string,

  /**
   * @ignore
   */
  titleConfig: _propTypes["default"].object,

  /**
   * @ignore
   */
  tabSpacing: _propTypes["default"].string,

  /**
   * @ignore
   */
  colorConfig: _propTypes["default"].object,

  /**
   * Allows a string to be provided for analytics.
   */
  'data-analyticstrack': _propTypes["default"].string,

  /**
   * Allows a string to be provided for analytics.
   */
  'data-track': _propTypes["default"].string,

  /**
   * Allows a string to be provided for click stream.
   */
  'data-clickstream': _propTypes["default"].string
};
var defaultProps = {
  hide: false,
  minWidth: undefined,
  className: null,
  typescale: _typography.TypographyConfig.getTypescale(),
  titleConfig: _typography.TitleConfig,
  tabSpacing: (0, _javascriptStyleHelpers.calculateRem)(0, 40, 0, 0),
  colorConfig: _theme.colors
};

var StyledTab = /*#__PURE__*/_styledComponents["default"].li.withConfig({
  displayName: "StyledTab",
  componentId: "cgei1q-0"
})(_templateObject(), function (_ref) {
  var tabSpacing = _ref.tabSpacing;
  return tabSpacing;
}, function (_ref2) {
  var minWidth = _ref2.minWidth,
      minTabWidth = _ref2.minTabWidth;
  return minWidth ? minWidth : minTabWidth;
});

var CoreTab = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(CoreTab, _Component);

  var _super = _createSuper(CoreTab);

  function CoreTab(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, CoreTab);
    _this = _super.call(this, props);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_onClick", function (e) {
      if (e.detail === 0) e.preventDefault();

      _this.props.onClick(e);
    });
    _this.handleVisibilityChange = props.handleVisibilityChange || props.onVisibilityChange;
    _this.state = {
      selected: props.isActive || props.active
    };
    return _this;
  }

  (0, _createClass2["default"])(CoreTab, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(oldProps) {
      if (!this.props.handleVisibilityChange) {
        return;
      }

      if (this.props.isActive !== oldProps.isActive || this.props.selected !== oldProps.selected) {
        var active = this.props.isActive || this.props.selected;
        this.setState({
          selected: active
        });
        this.handleVisibilityChange('isActive', active);
      }

      if (this.props.hide !== oldProps.hide) {
        this.handleVisibilityChange('hide', this.props.hide);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          accentFill = _this$props.accentFill,
          indicatorFillTab = _this$props.indicatorFillTab,
          accentPosition = _this$props.accentPosition,
          indicatorPosition = _this$props.indicatorPosition,
          hide = _this$props.hide,
          label = _this$props.label,
          uniqueId = _this$props.uniqueId,
          minWidth = _this$props.minWidth,
          minTabWidth = _this$props.minTabWidth,
          onClick = _this$props.onClick,
          className = _this$props.className,
          tabHeight = _this$props.tabHeight,
          focusState = _this$props.focusState,
          minHeight = _this$props.minHeight,
          height = _this$props.height,
          typescale = _this$props.typescale,
          titleConfig = _this$props.titleConfig,
          tabSpacing = _this$props.tabSpacing,
          colorConfig = _this$props.colorConfig,
          analyticsTrack = _this$props.analyticsTrack,
          track = _this$props.track,
          clickStream = _this$props.clickStream;

      if (hide) {
        return null;
      }

      return /*#__PURE__*/_react["default"].createElement(StyledTab, {
        tabSpacing: tabSpacing,
        id: "tab_".concat(uniqueId),
        minWidth: minWidth,
        minTabWidth: minTabWidth,
        onClick: this._onClick,
        role: "presentation",
        className: className
      }, /*#__PURE__*/_react["default"].createElement(_TabButton["default"], {
        accentFill: accentFill,
        indicatorFillTab: indicatorFillTab,
        accentPosition: accentPosition,
        indicatorPosition: indicatorPosition,
        selected: this.state.selected,
        label: label,
        uniqueId: uniqueId,
        tabHeight: tabHeight,
        focusState: focusState,
        minHeight: minHeight,
        typescale: typescale,
        titleConfig: titleConfig,
        colorConfig: colorConfig,
        clickStream: clickStream,
        analyticsTrack: analyticsTrack,
        track: track
      }, label));
    }
  }]);
  return CoreTab;
}(_react.Component);

exports.CoreTab = CoreTab;
CoreTab.propTypes = propTypes;
CoreTab.defaultProps = defaultProps;
var _default = CoreTab;
exports["default"] = _default;