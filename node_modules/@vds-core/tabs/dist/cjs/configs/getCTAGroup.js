"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCTAGroup = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var getCTAGroup = function getCTAGroup(ctaGroupType, stacked) {
  return {
    desktop: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, ctaGroupType === 'button' && {
      CTAGroup: {
        alignment: 'center',
        data: [{
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          secondary: true,
          ctaType: 'button',
          width: '172px'
        }]
      }
    }), ctaGroupType === 'Button-Button' && {
      CTAGroup: {
        alignment: 'center',
        stacked: stacked,
        data: [{
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum ',
          type: 'secondary',
          ctaType: 'button'
        }, {
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          type: 'secondary',
          ctaType: 'button'
        }],
        buttonGroupWidth: stacked ? '172px' : '368px',
        rowQuantity: stacked ? {
          desktop: parseInt('1'),
          tablet: parseInt('1'),
          mobile: parseInt('1')
        } : {
          desktop: parseInt('2'),
          tablet: parseInt('2'),
          mobile: parseInt('2')
        }
      }
    }), ctaGroupType === 'link' && {
      CTAGroup: {
        data: [{
          children: 'Lorem ipsum',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          ctaType: 'textLinkCaret'
        }]
      }
    }), ctaGroupType === 'Link-Link' && {
      CTAGroup: {
        stacked: stacked,
        marginRight: stacked ? '0' : '12X',
        data: [{
          children: 'Lorem ipsum',
          rel: 'test_rel',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          type: 'caret',
          ctaType: 'textLinkCaret'
        }, {
          children: 'Lorem ipsum',
          rel: 'test_rel',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          type: 'caret',
          ctaType: 'textLinkCaret'
        }]
      }
    }), ctaGroupType === 'Button-TextLinkCaret' && {
      CTAGroup: {
        stacked: stacked,
        data: [{
          ctaType: 'button',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum',
          width: '172px',
          secondary: true
        }, (0, _defineProperty2["default"])({
          ctaType: 'textLinkCaret',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum'
        }, "ctaType", 'textLinkCaret')]
      }
    }), ctaGroupType === 'Button-Standalone' && {
      CTAGroup: {
        stacked: stacked,
        data: [{
          ctaType: 'button',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum',
          width: '172px',
          secondary: true
        }, {
          ctaType: 'standAlone',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Text link',
          size: 'large',
          type: 'standAlone'
        }]
      }
    }),
    desktopSmall: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, ctaGroupType === 'button' && {
      CTAGroup: {
        alignment: 'center',
        data: [{
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          secondary: true,
          ctaType: 'button',
          width: '172px'
        }]
      }
    }), ctaGroupType === 'Button-Button' && {
      CTAGroup: {
        stacked: stacked,
        alignment: 'center',
        data: [{
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum ',
          type: 'secondary',
          inverted: true,
          ctaType: 'button'
        }, {
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          type: 'secondary',
          inverted: true,
          ctaType: 'button'
        }],
        buttonGroupWidth: stacked ? '172px' : '368px',
        rowQuantity: stacked ? {
          desktop: parseInt('1'),
          tablet: parseInt('1'),
          mobile: parseInt('1')
        } : {
          desktop: parseInt('2'),
          tablet: parseInt('2'),
          mobile: parseInt('2')
        }
      }
    }), ctaGroupType === 'link' && {
      CTAGroup: {
        flexDirection: stacked ? 'column' : 'row',
        data: [{
          children: 'Lorem ipsum',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          ctaType: 'textLinkCaret'
        }]
      }
    }), ctaGroupType === 'Link-Link' && {
      CTAGroup: {
        stacked: stacked,
        marginRight: stacked ? '0' : '12X',
        data: [{
          children: 'Lorem ipsum',
          rel: 'test_rel',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          type: 'caret',
          ctaType: 'textLinkCaret'
        }, {
          children: 'Lorem ipsum',
          rel: 'test_rel',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          type: 'caret',
          ctaType: 'textLinkCaret'
        }]
      }
    }), ctaGroupType === 'Button-TextLinkCaret' && {
      CTAGroup: {
        stacked: stacked,
        data: [{
          ctaType: 'button',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum',
          width: '172px',
          secondary: true
        }, (0, _defineProperty2["default"])({
          ctaType: 'textLinkCaret',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum'
        }, "ctaType", 'textLinkCaret')]
      }
    }), ctaGroupType === 'Button-Standalone' && {
      CTAGroup: {
        stacked: stacked,
        data: [{
          ctaType: 'button',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum',
          width: '172px',
          secondary: true
        }, {
          ctaType: 'standAlone',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Text link',
          size: 'large',
          type: 'standAlone'
        }]
      }
    }),
    tablet: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, ctaGroupType === 'button' && {
      CTAGroup: {
        alignment: 'center',
        data: [{
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          secondary: true,
          ctaType: 'button',
          width: '172px'
        }]
      }
    }), ctaGroupType === 'Button-Button' && {
      CTAGroup: {
        stacked: stacked,
        alignment: 'center',
        data: [{
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          type: 'secondary',
          ctaType: 'button'
        }, {
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          type: 'secondary',
          ctaType: 'button'
        }],
        buttonGroupWidth: stacked ? '172px' : '368px',
        rowQuantity: stacked ? {
          desktop: parseInt('1'),
          tablet: parseInt('1'),
          mobile: parseInt('1')
        } : {
          desktop: parseInt('2'),
          tablet: parseInt('2'),
          mobile: parseInt('2')
        }
      }
    }), ctaGroupType === 'link' && {
      CTAGroup: {
        data: [{
          children: 'Lorem ipsum',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          ctaType: 'textLinkCaret'
        }]
      }
    }), ctaGroupType === 'Link-Link' && {
      CTAGroup: {
        stacked: stacked,
        marginRight: stacked ? '0' : '12X',
        data: [{
          children: 'Lorem ipsum',
          rel: 'test_rel',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          type: 'caret',
          ctaType: 'textLinkCaret'
        }, {
          children: 'Lorem ipsum',
          rel: 'test_rel',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          type: 'caret',
          ctaType: 'textLinkCaret'
        }]
      }
    }), ctaGroupType === 'Button-TextLinkCaret' && {
      CTAGroup: {
        stacked: stacked,
        data: [{
          ctaType: 'button',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum',
          width: '172px',
          secondary: true
        }, (0, _defineProperty2["default"])({
          ctaType: 'textLinkCaret',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum'
        }, "ctaType", 'textLinkCaret')]
      }
    }), ctaGroupType === 'Button-Standalone' && {
      CTAGroup: {
        stacked: stacked,
        data: [{
          ctaType: 'button',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum',
          width: '172px',
          secondary: true
        }, {
          ctaType: 'standAlone',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Text link',
          size: 'large',
          type: 'standAlone'
        }]
      }
    }),
    mobile: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, ctaGroupType === 'button' && {
      CTAGroup: {
        alignment: 'center',
        data: [{
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          secondary: true,
          ctaType: 'button',
          width: '172px'
        }]
      }
    }), ctaGroupType === 'Button-Button' && {
      CTAGroup: {
        alignment: 'center',
        data: [{
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum ',
          type: 'secondary',
          ctaType: 'button'
        }, {
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          type: 'secondary',
          ctaType: 'button'
        }],
        buttonGroupWidth: '172px',
        rowQuantity: {
          desktop: parseInt('1'),
          tablet: parseInt('1'),
          mobile: parseInt('1')
        }
      }
    }), ctaGroupType === 'link' && {
      CTAGroup: {
        data: [{
          children: 'Lorem ipsum',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          ctaType: 'textLinkCaret'
        }]
      }
    }), ctaGroupType === 'Link-Link' && {
      CTAGroup: {
        inverted: true,
        data: [{
          children: 'Lorem ipsum',
          rel: 'test_rel',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          type: 'caret',
          ctaType: 'textLinkCaret'
        }, {
          children: 'Lorem ipsum',
          rel: 'test_rel',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          type: 'caret',
          ctaType: 'textLinkCaret'
        }]
      }
    }), ctaGroupType === 'Button-TextLinkCaret' && {
      CTAGroup: {
        data: [{
          ctaType: 'button',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum',
          width: '172px',
          secondary: true
        }, (0, _defineProperty2["default"])({
          ctaType: 'textLinkCaret',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum'
        }, "ctaType", 'textLinkCaret')]
      }
    }), ctaGroupType === 'Button-Standalone' && {
      CTAGroup: {
        data: [{
          ctaType: 'button',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum',
          width: '172px',
          secondary: true
        }, {
          ctaType: 'standAlone',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Text link',
          size: 'large',
          type: 'standAlone'
        }]
      }
    }),
    mobileSmall: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, ctaGroupType === 'button' && {
      CTAGroup: {
        alignment: 'center',
        data: [{
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          secondary: true,
          ctaType: 'button',
          width: '172px'
        }]
      }
    }), ctaGroupType === 'Button-Button' && {
      CTAGroup: {
        alignment: 'center',
        data: [{
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum ',
          type: 'secondary',
          // inverted: backgroundStyle === "white" ? false : true,
          ctaType: 'button'
        }, {
          onClick: function onClick() {
            console.log('Clicked!');
          },
          children: 'Lorem ipsum',
          type: 'secondary',
          // inverted: backgroundStyle === "white" ? false : true,
          ctaType: 'button'
        }],
        buttonGroupWidth: '172px',
        rowQuantity: {
          desktop: parseInt('1'),
          tablet: parseInt('1'),
          mobile: parseInt('1')
        }
      }
    }), ctaGroupType === 'link' && {
      CTAGroup: {
        data: [{
          children: 'Lorem ipsum',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          ctaType: 'textLinkCaret'
        }]
      }
    }), ctaGroupType === 'Link-Link' && {
      CTAGroup: {
        data: [{
          children: 'Lorem ipsum',
          rel: 'test_rel',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          type: 'caret',
          ctaType: 'textLinkCaret'
        }, {
          children: 'Lorem ipsum',
          rel: 'test_rel',
          onClick: function onClick() {
            alert('clicked link 1');
          },
          type: 'caret',
          ctaType: 'textLinkCaret'
        }]
      }
    }), ctaGroupType === 'Button-TextLinkCaret' && {
      CTAGroup: {
        data: [{
          ctaType: 'button',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum',
          width: '172px',
          secondary: true
        }, (0, _defineProperty2["default"])({
          ctaType: 'textLinkCaret',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum'
        }, "ctaType", 'textLinkCaret')]
      }
    }), ctaGroupType === 'Button-Standalone' && {
      CTAGroup: {
        data: [{
          ctaType: 'button',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Lorem ipsum',
          width: '172px',
          secondary: true
        }, {
          ctaType: 'standAlone',
          onClick: function onClick() {
            alert('Clicked!');
          },
          children: 'Text link',
          size: 'large',
          type: 'standAlone'
        }]
      }
    })
  };
};

exports.getCTAGroup = getCTAGroup;