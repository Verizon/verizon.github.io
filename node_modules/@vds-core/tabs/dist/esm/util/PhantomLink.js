import _extends from "@babel/runtime/helpers/extends";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  margin: 32px 20px 0;\n  display: ", ";\n  opacity: 1;\n  position: absolute;\n  top: ", ";\n  left: ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from 'react';
import styled from 'styled-components';
import { TextLinkCaret } from '@vds-core/buttons';
var PhantomLinkWrapper = /*#__PURE__*/styled.div.withConfig({
  displayName: "PhantomLinkWrapper",
  componentId: "sc-1jkunwc-0"
})(_templateObject(), function (_ref) {
  var isActive = _ref.isActive;
  return isActive ? 'inherit' : 'none';
}, function (_ref2) {
  var position = _ref2.position;
  return position && "".concat(position.top, "px");
}, function (_ref3) {
  var position = _ref3.position;
  return position && "".concat(position.left, "px");
}); // Link used for accessibility purposes, will be active only on desktop
// and when the content is focused from the active tab item on the left.

var PhantomLink = function PhantomLink(_ref4) {
  var ctaLink = _ref4.ctaLink,
      isDesktop = _ref4.isDesktop,
      isActive = _ref4.isActive,
      getPosition = _ref4.getPosition,
      TextLinkCaret = _ref4.TextLinkCaret;
  var singleLinkPos = isActive && getPosition();
  return isDesktop && /*#__PURE__*/React.createElement(PhantomLinkWrapper, {
    position: singleLinkPos,
    isActive: isActive
  }, /*#__PURE__*/React.createElement(TextLinkCaret, _extends({
    ariaHidden: isActive,
    disabled: !isActive
  }, ctaLink)));
};

export default PhantomLink;