import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  position: relative;\n  ", ";\n\n  animation-play-state: ", ";\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    animation: ", " ", " ", " ", ";\n  "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["", ""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

// This polyfill prevents Intersection Observer from breaking IE
require('intersection-observer');

import React, { Component } from 'react';
import styled, { css, keyframes } from 'styled-components';
import ReactDOM from 'react-dom';
import PropTypes from 'prop-types';
import UNSAFE_SetEnvRef from '@uie/set-env-ref';
import animationConfig from './animationConfig';
import { withVDSManager } from '@vds/utilities';
var propTypes = {
  /**
   * @ignore
   * ref for component
   */
  // setAnimationRef: PropTypes.func,

  /**
  /**
   * Animation name
   */
  name: PropTypes.oneOf(['slideUp', 'fadeInUp']),

  /**
   * Pass a boolean value to start the animation, if set to true, animation starts when component mounts.
   */
  startAnimation: PropTypes.bool,

  /**
   *
   */
  animated: PropTypes.bool
};
var defaultProps = {
  // setAnimationRef: () => {},
  name: 'slideUp',
  startAnimation: false,
  animated: true
};

var buildAnimation = function buildAnimation(animation) {
  if (animation === {} || !animation) {
    return null;
  }

  var duration = animation.duration,
      delay = animation.delay,
      timingFunction = animation.timingFunction,
      keyFrame = animation.keyFrame;
  var animationKeyframe = /*#__PURE__*/keyframes(_templateObject(), keyFrame); // use css helper when using keyframes see https://styled-components.com/docs/basics#animations

  return css(_templateObject2(), duration, timingFunction, delay, animationKeyframe);
};

var AnimatorWrapper = /*#__PURE__*/styled.div.withConfig({
  displayName: "AnimatorWrapper",
  componentId: "sc-12xw7k2-0"
})(_templateObject3(), function (_ref) {
  var animation = _ref.animation,
      animated = _ref.animated;
  return animated && buildAnimation(animation);
}, function (_ref2) {
  var startAnimation = _ref2.startAnimation;
  return startAnimation ? 'running' : 'paused';
});

var Animator = /*#__PURE__*/function (_Component) {
  _inherits(Animator, _Component);

  var _super = _createSuper(Animator);

  function Animator(props) {
    var _this;

    _classCallCheck(this, Animator);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "componentDidMount", function () {
      // this.props.setAnimationRef(this.animationElem);
      if (_this.props.animated) _this._setupObserver();
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidUpdate", function (prevProps) {
      if (prevProps.animated !== _this.props.animated) {
        if (_this.props.animated) _this._setupObserver();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "_setupObserver", function () {
      var options = {
        // root: rootRef,
        rootMargin: '150px 0px 0px 0px',
        threshold: 0
      };
      _this.observer = new IntersectionObserver(_this._observationHandler, options);
      var elem = ReactDOM.findDOMNode(_this.animationElem);
      if (!_this.observer || !elem) return;

      _this.observer.observe(elem);
    });

    _defineProperty(_assertThisInitialized(_this), "_observationHandler", function (entries, observer) {
      entries.forEach(function (entry) {
        _this.shouldAnimate = entry.isIntersecting;

        if (_this.shouldAnimate) {
          _this.setState({
            startAnimation: true
          });

          _this.observer.disconnect();
        }
      });
    });

    _defineProperty(_assertThisInitialized(_this), "setAnimationRef", function (element) {
      _this.animationElem = element;
    });

    _defineProperty(_assertThisInitialized(_this), "refKey", UNSAFE_SetEnvRef());

    _this.state = {
      startAnimation: false
    };
    return _this;
  }

  _createClass(Animator, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          name = _this$props.name,
          animated = _this$props.animated;
      var startAnimation = this.state.startAnimation;
      var animation = animationConfig[name]; // uncomment bellow if custom keyframes are passed
      // if (keyFrames) {
      //   animation.keyFrame = `${keyFrames}`;
      // }

      return /*#__PURE__*/React.createElement(AnimatorWrapper, _extends({}, _defineProperty({}, this.refKey, function (ref) {
        return _this2.setAnimationRef(ref);
      }), {
        animated: animated,
        animation: animation,
        startAnimation: startAnimation
      }), this.props.children);
    }
  }]);

  return Animator;
}(Component);

Animator.propTypes = propTypes;
Animator.defaultProps = defaultProps;
export default withVDSManager(Animator);