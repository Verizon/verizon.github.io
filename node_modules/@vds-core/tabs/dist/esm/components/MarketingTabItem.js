import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  margin-top: ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { Fragment } from 'react';
import styled from 'styled-components';
import PropTypes from 'prop-types';
import { withVDSManager } from '@vds/utilities';
var propTypes = {
  /**
   * When passed in, will return rendered component.
   */
  children: PropTypes.node,

  /**
   * Viewport the TabItem will be rendered in.
    <br> PropTypes.oneOf([ "desktop", "desktopSmall", "tablet", "mobile", "mobileSmall" ])
   */
  viewport: PropTypes.oneOf(['desktop', 'desktopSmall', 'tablet', 'mobile', 'mobileSmall'])
};
var defaultProps = {
  renderMargin: false
};
var ContentWrapper = /*#__PURE__*/styled.div.withConfig({
  displayName: "ContentWrapper",
  componentId: "sc-1m9ibue-0"
})(_templateObject(), function (_ref) {
  var renderMargin = _ref.renderMargin;
  return renderMargin ? "32px" : 0;
});

var MarketingTabItem = function MarketingTabItem(props) {
  var children = props.children,
      viewport = props.viewport,
      renderMargin = props.renderMargin;

  function _cloneAndAddProps(children) {
    if (!children) return null;

    if (children && children.type && children.type.displayName && children.type.displayName.includes("TileNavigation")) {
      return /*#__PURE__*/React.createElement(ContentWrapper, {
        renderMargin: renderMargin
      }, /*#__PURE__*/React.cloneElement(children, _objectSpread(_objectSpread(_objectSpread({}, children.props[viewport]), children.props), {}, {
        tabsChild: true
      })));
    }

    return /*#__PURE__*/React.cloneElement(children, _objectSpread(_objectSpread(_objectSpread({}, children.props[viewport]), children.props), {}, {
      tabsChild: true
    }));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, _cloneAndAddProps(children));
};

MarketingTabItem.propTypes = propTypes;
MarketingTabItem.defaultProps = defaultProps;
export default withVDSManager(MarketingTabItem);