import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n  margin-left: ", ";\n  button {\n    width: max-content;\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: middle;\n  padding: 2px 2px 2px 2px;\n  width: auto;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  padding: 8px 0px;\n  box-sizing: border-box;\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  position: relative;\n  z-index: 1;\n  background-color: transparent;\n  text-decoration: none\n  outline: none;\n  &:focus > .tabContent {\n    outline: 1px dashed ", ";\n  }\n\n  ", "\n  ", ";\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  margin-bottom: 16px;\n  text-decoration: none;\n  &: last-child {\n    margin-bottom: 0px;\n  }\n  &:focus {\n    outline: none;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { Fragment } from 'react';
import styled from 'styled-components';
import PropTypes from 'prop-types';
import { Tabs as VDSTabs } from './CoreTabs';
import { Tab as VDSTab } from './CoreTab';
import { colors } from '@vds/theme';
import { Title } from '@vds/typography';
var propTypes = {
  /**
   * If provided, it will set this Tab to the Active Tab on render.<br><br><strong>Note:</strong> <br>This will override whatever was set on the Tab <code>selectedIndex</code> Prop.<br>Also, it is "Last One Wins", ie: if this is set on multiple Tab elements, the last element with it set will be the Active Tab.
   */
  active: PropTypes.bool,

  /**
   * Text to be display in the tab.
   */
  label: PropTypes.string,

  /**
   * @ignore
   */
  handleVisibilityChange: PropTypes.func,

  /**
   * This function will be called when the tab is clicked. It will return an event.
   */
  onClick: PropTypes.func,

  /**
   * When selected, it changes the state of the tab.
   */
  currentClicked: PropTypes.bool,

  /**
   * Allows a string to be provided for analytics.
   */
  'data-analyticstrack': PropTypes.string,

  /**
   * Allows a string to be provided for analytics.
   */
  'data-track': PropTypes.string,

  /**
   * Allows a string to be provided for click stream.
   */
  'data-clickstream': PropTypes.string,

  /**
   * The direction in which tabs will be displayed
   */
  orientation: PropTypes.oneOf(['horizontal', 'vertical']),

  /**
   * String to match the Tabs with the Panels
   */
  uniqueId: PropTypes.string
};
var defaultProps = {
  currentClicked: false
};
var ItemWrapper = /*#__PURE__*/styled.span.withConfig({
  displayName: "ItemWrapper",
  componentId: "s74fb6-0"
})(_templateObject());
var ContentWrapper = /*#__PURE__*/styled.a.withConfig({
  displayName: "ContentWrapper",
  componentId: "s74fb6-1"
})(_templateObject2(), colors.black, function (_ref) {
  var currentClicked = _ref.currentClicked;
  return "\n    &:hover {\n      &::before {\n        background:  ".concat(currentClicked ? colors.red : colors.coolGray6, ";\n        box-shadow: none;\n        content: '';\n        height: 100%;\n        left: -1px;\n        position: absolute;\n        top: 0;\n        width: 4px;\n        z-index: 1;\n      }\n    }\n  ");
}, function (_ref2) {
  var currentClicked = _ref2.currentClicked;
  return "\n    &::before {\n      background:  ".concat(currentClicked ? colors.red : "none", ";\n      box-shadow: none;\n      content: '';\n      height: 100%;\n      left: -1px;\n      position: absolute;\n      top: 0;\n      width: 4px;\n      z-index: 1;\n    }\n  ");
});
var TabContent = /*#__PURE__*/styled.span.withConfig({
  displayName: "TabContent",
  componentId: "s74fb6-2"
})(_templateObject3());
var StyledVDSTab = /*#__PURE__*/styled(VDSTab).withConfig({
  displayName: "StyledVDSTab",
  componentId: "s74fb6-3"
})(_templateObject4(), function (_ref3) {
  var viewport = _ref3.viewport,
      index = _ref3.index;
  return index === 0 && (viewport === "tablet" ? "20px" : "16px");
});
export var MarketingTab = /*#__PURE__*/function (_React$Component) {
  _inherits(MarketingTab, _React$Component);

  var _super = _createSuper(MarketingTab);

  function MarketingTab(props) {
    var _this;

    _classCallCheck(this, MarketingTab);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "_onKeyDown", function (e) {
      if (e.keyCode === 13) {
        _this._onClick(e);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "_onClick", function (evt) {
      var onClick = _this.props.onClick;
      if (evt.detail === 0) evt.preventDefault();
      onClick && onClick(evt);
    });

    _this.state = {
      selected: props.active
    };
    return _this;
  }

  _createClass(MarketingTab, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      var active = this.props.active;
      var selected = this.state.selected;
      if (!this.props.handleVisibilityChange) return;

      if (selected !== prevState.selected || active !== prevProps.active) {
        var newSelectedState = this.props.active || this.state.selected;
        this.setState({
          selected: newSelectedState
        });
        this.props.handleVisibilityChange("isActive", active);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          onClick = _this$props.onClick,
          uniqueId = _this$props.uniqueId,
          label = _this$props.label,
          data = _this$props.data,
          tabIndex = _this$props.tabIndex,
          index = _this$props.index,
          active = _this$props.active,
          currentClicked = _this$props.currentClicked,
          viewport = _this$props.viewport,
          orientation = _this$props.orientation,
          analyticsTrack = _this$props["data-analyticstrack"],
          track = _this$props["data-track"],
          clickStream = _this$props["data-clickstream"];
      var isDesktop = viewport === "desktop" || viewport === "desktopSmall";

      if (!isDesktop || orientation === "horizontal") {
        return /*#__PURE__*/React.createElement(StyledVDSTab, _extends({
          viewport: viewport,
          index: index,
          label: label
        }, this.props));
      }

      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemWrapper, {
        isDesktop: isDesktop,
        viewport: viewport,
        id: "tab_".concat(uniqueId),
        onClick: this._onClick,
        onMouseDown: function onMouseDown(e) {
          return e.preventDefault();
        },
        onKeyDown: this._onKeyDown
      }, /*#__PURE__*/React.createElement(ContentWrapper, {
        tabIndex: active ? 0 : -1 // focus on active element first, then focus others with arrows
        ,
        selected: this.state.selected,
        currentClicked: currentClicked // this should be selected
        ,
        viewport: viewport,
        isDesktop: isDesktop,
        role: "tab",
        "data-analyticstrack": analyticsTrack,
        "data-track": track,
        "data-clickstream": clickStream
      }, /*#__PURE__*/React.createElement(TabContent, {
        className: "tabContent",
        tabIndex: -1
      }, /*#__PURE__*/React.createElement(Title, {
        size: "extraSmall",
        color: currentClicked ? colors.black : colors.coolGray6
      }, label)))));
    }
  }]);

  return MarketingTab;
}(React.Component);
MarketingTab.propTypes = propTypes;
MarketingTab.defaultProps = defaultProps;
export default MarketingTab;