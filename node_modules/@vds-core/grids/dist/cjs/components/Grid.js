"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _javascriptStyleHelpers = require("@uie/javascript-style-helpers");

var _theme = require("@vds-core/theme");

var _reactStyledFlexboxgrid = require("react-styled-flexboxgrid");

var _utilities = require("@vds-core/utilities");

var _defaultProps;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  width: 100%;\n  max-width: 1272px;\n  margin: 0 auto;\n  ", ";\n  ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

// ---------------------------------------------
// Props
// ---------------------------------------------
var propTypes = {
  /**
   * Children for the grid. This should be the VDS Row components,
   * containing the VDS Col components. The page content should be inside the Col components.
   */
  children: _propTypes["default"].node.isRequired,

  /**
   * Set a class on the Grid container
   */
  className: _propTypes["default"].string,

  /**
   * Set a fixed height for the grid container
   */
  height: _propTypes["default"].string,

  /**
   * @Ignore
   */
  vertical: _propTypes["default"].bool,

  /**
   * @Ignore
   */
  align: _propTypes["default"].oneOf(['flex-start', 'space-between', 'space-around', 'flex-end', 'center', 'space-evenly']),

  /**
   * When provided, will set global sizes for all Col components for each viewport [mobile, tablet, desktop]
   */
  colSizes: _propTypes["default"].object,

  /**
   * Set the styling of the component to the desktop, tablet, or mobile size based on passed prop.
   * Desktop and tablet are the same size.
   */
  viewport: _propTypes["default"].oneOf(['desktop', 'tablet', 'mobile']),

  /**
   * @Ignore
   */
  colGutter: _propTypes["default"].bool,

  /**
   * When passed, will set the global spacing between all Row components inside the grid
   */
  rowGutter: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number])
};
var defaultProps = (_defaultProps = {
  className: null,
  colGutter: true,
  rowGutter: 0,
  height: '100%',
  vertical: false,
  colSizes: {
    mobile: 1,
    tablet: 1,
    desktop: 1
  },
  viewport: undefined
}, (0, _defineProperty2["default"])(_defaultProps, "rowGutter", undefined), (0, _defineProperty2["default"])(_defaultProps, "align", 'flex-start'), _defaultProps);
var baseEm = 16;
var MOBILE_GUTTER = 32;
var DESKTOP_GUTTER = 40;

function _emNumberFromBreakPoint(breakpoint) {
  var parsedBreak = Number(breakpoint.split('px', 1)),
      number = parsedBreak / baseEm;
  return number;
}

var StyledGridContainer = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  displayName: "StyledGridContainer",
  componentId: "sc-1q2jtss-0"
})(_templateObject(), function (_ref) {
  var height = _ref.height;
  return height && "\n    height: ".concat(height, ";\n  ");
}, function (_ref2) {
  var align = _ref2.align,
      vertical = _ref2.vertical;
  return vertical && "\n    justify-content: ".concat(align, ";\n    padding-top: ").concat(function (_ref3) {
    var gutterWidth = _ref3.gutterWidth;
    return (0, _javascriptStyleHelpers.calculateRem)(gutterWidth / 2);
  }, ";\n    flex-flow: column nowrap;\n  ");
});

function getColumnSizes(child, parentSizes, viewport) {
  var childSizes = child.props.colSizes && _mapColSizes(child.props.colSizes, viewport) || {}; // remove undefined sizes

  Object.keys(childSizes).forEach(function (key) {
    return childSizes[key] === undefined && delete childSizes[key];
  });
  if (Object.keys(childSizes).length === 4) return childSizes;else return _objectSpread(_objectSpread({}, parentSizes), childSizes);
}

function _mapColSizes(colSizes, viewport) {
  var xs = viewport ? colSizes[viewport] : colSizes.mobile,
      sm = viewport ? colSizes[viewport] : colSizes.mobile,
      md = viewport ? colSizes[viewport] : colSizes.tablet,
      lg = viewport ? colSizes[viewport] : colSizes.desktop;
  return {
    xs: xs,
    sm: sm,
    md: md,
    lg: lg
  };
}

var Grid = function Grid(props) {
  var children = props.children,
      colGutter = props.colGutter,
      rowGutter = props.rowGutter,
      vertical = props.vertical,
      viewport = props.viewport,
      colSizes = props.colSizes,
      align = props.align,
      className = props.className,
      height = props.height;
  var innerWidth = window.innerWidth;
  var gutterWidth = viewport === 'mobile' || innerWidth && innerWidth < 768 ? MOBILE_GUTTER : DESKTOP_GUTTER;
  var gutterWidthRem = (0, _javascriptStyleHelpers.calculateRem)(gutterWidth);

  var mappedColSizes = _mapColSizes(colSizes, viewport); // sm: '544px',
  // md: '768px',
  // lg: '991px',
  // xl: '1272px',
  // tablet is sm -> md
  // desktop is md+


  var theme = {
    flexboxgrid: {
      gridSize: viewport === 'mobile' ? 4 : 12,
      gutterWidth: colGutter ? gutterWidthRem.replace('rem', '') : 0,
      mediaQuery: 'only screen',
      breakpoints: {
        xs: _emNumberFromBreakPoint('0px'),
        //0
        sm: _emNumberFromBreakPoint(_theme.breakpoints.md),
        //0 -> 767px mobile
        md: _emNumberFromBreakPoint(_theme.breakpoints.lg),
        //768 px -> 1024px tablet
        lg: _emNumberFromBreakPoint(_theme.breakpoints.xl) //1024 - 1272 desktop

      }
    }
  };
  return /*#__PURE__*/_react["default"].createElement(_reactStyledFlexboxgrid.Grid, {
    theme: theme,
    fluid: true,
    style: {
      paddingRight: 0,
      paddingLeft: 0,
      marginRight: 0,
      marginLeft: 0,
      maxWidth: '100%',
      fontSize: '16px',
      flex: 1
    }
  }, /*#__PURE__*/_react["default"].createElement(StyledGridContainer, (0, _extends2["default"])({}, props, {
    theme: theme,
    gutterWidth: gutterWidth
  }), _react["default"].Children.map(children, function (child, index) {
    var styles = {
      flexDirection: vertical ? 'column' : 'row',
      justifyContent: align,
      marginRight: 0,
      marginLeft: 0,
      paddingRight: 0,
      paddingLeft: 0
    };
    var gutteredChildren = child && child.props && child.props.children ? _react["default"].Children.map(child.props.children, function (child, childIndex) {
      var sizes = getColumnSizes(child, mappedColSizes, viewport);
      var gutter = {
        marginBottom: rowGutter && children.length - 1 !== index ? rowGutter : 0
      };
      return /*#__PURE__*/_react["default"].cloneElement(child, _objectSpread({
        key: childIndex + 1,
        style: gutter,
        theme: theme
      }, sizes));
    }) : [];
    return /*#__PURE__*/_react["default"].cloneElement(child, {
      key: index + 1,
      style: styles,
      theme: theme
    }, gutteredChildren);
  })));
};

Grid.defaultProps = defaultProps;
Grid.propTypes = propTypes;

var _default = (0, _utilities.withVDSManager)(Grid);

exports["default"] = _default;