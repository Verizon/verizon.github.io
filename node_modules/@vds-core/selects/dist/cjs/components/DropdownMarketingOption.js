"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _theme = require("@vds-core/theme");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  cursor: pointer;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var propTypes = {
  /**
   * Content in the dropdown item.
   */
  children: _propTypes["default"].string,

  /**
   * Function run when option is selected.
   */
  onSelect: _propTypes["default"].func,

  /**
   * The id for the selected item.
   */
  selected: _propTypes["default"].string,

  /**
   * ignore
   */
  id: _propTypes["default"].string,

  /**
   * ignore
   */
  selectionCallback: _propTypes["default"].func
};
var defaultProps = {
  children: null,
  onSelect: function onSelect() {},
  selected: undefined
};

var Wrapper = /*#__PURE__*/_styledComponents["default"].li.withConfig({
  displayName: "Wrapper",
  componentId: "ll4m1m-0"
})(_templateObject());

var DropdownMarketingOption = function DropdownMarketingOption(_ref) {
  var children = _ref.children,
      onSelect = _ref.onSelect,
      selected = _ref.selected,
      id = _ref.id,
      selectionCallback = _ref.selectionCallback;

  function _clicked(e) {
    // Manually construct event here =>
    // because changing to a-tag doesn't pass the same event
    var event = {
      target: {
        value: children
      }
    };
    onSelect(event);
    selectionCallback(event);

    if (e.type === 'click' && e.clientX !== 0 && e.clientY !== 0) {
      // This is a real click. Do something here
      e.target.blur();
    }
  }

  function _onKeyDown(e) {
    var event = {
      target: {
        value: children
      }
    };

    if (e.keyCode === 13 || e.keyCode === 32) {
      onSelect(event);
      selectionCallback(event);
    }
  }

  return /*#__PURE__*/_react["default"].createElement(Wrapper, {
    tabIndex: 0,
    onKeyDown: _onKeyDown,
    id: id,
    value: children,
    onClick: _clicked,
    role: "none"
  }, children);
};

DropdownMarketingOption.defaultProps = defaultProps;
DropdownMarketingOption.propTypes = propTypes;
var _default = DropdownMarketingOption;
exports["default"] = _default;