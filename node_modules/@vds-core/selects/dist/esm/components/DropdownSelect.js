import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _templateObject13() {
  var data = _taggedTemplateLiteral(["\n  display: inline-flex;\n  vertical-align: text-bottom;\n"]);

  _templateObject13 = function _templateObject13() {
    return data;
  };

  return data;
}

function _templateObject12() {
  var data = _taggedTemplateLiteral(["\n  display: flex;\n  flex: 1 1 auto;\n  width: 100%;\n  box-sizing: border-box;\n  ", ";\n  ", ";\n"]);

  _templateObject12 = function _templateObject12() {
    return data;
  };

  return data;
}

function _templateObject11() {
  var data = _taggedTemplateLiteral(["\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  position: relative;\n  width: ", ";\n"]);

  _templateObject11 = function _templateObject11() {
    return data;
  };

  return data;
}

function _templateObject10() {
  var data = _taggedTemplateLiteral(["\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: row;\n  position: relative;\n"]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _taggedTemplateLiteral(["\n  white-space: nowrap;\n  padding: ", ";\n  &:focus {\n    outline: none;\n  }\n"]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteral(["\n  position: absolute;\n  z-index: 1;\n  margin-left: ", ";\n  right: ", ";\n  top: ", ";\n  pointer-events: none;\n  ", ";\n"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["\n  margin: 0;\n  outline: none;\n  ", ";\n"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  width: ", ";\n  position: relative;\n  width: ", ";\n  input[type='number'] {\n    -moz-appearance: textfield; /* Firefox */\n  }\n"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n  display: flex;\n  flex-direction: ", ";\n  width: ", ";\n  max-width: ", ";\n  min-width: ", ";\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n  border: none;\n  background: transparent;\n  width: 100%;\n  display: inline-flex;\n  appearance: none;\n  &::-ms-expand {\n    display: none;\n  }\n\n  :-moz-focusring {\n    color: transparent;\n    text-shadow: 0 0 0 #000;\n  }\n  outline: none;\n  color: ", ";\n  line-height: ", ";\n  font-size: ", ";\n  font-family: ", ";\n  letter-spacing: ", ";\n  padding: ", ";\n  padding-left: ", ";\n  padding-bottom: ", ";\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  box-sizing: border-box;\n  height: ", ";\n  width: 100%;\n  vertical-align: top;\n  margin: 0;\n  background-color: ", ";\n  color: ", ";\n  border-radius: 0;\n  border-top: ", " solid ", ";\n  border-right: ", " solid ", ";\n  border-left: ", " solid ", ";\n  border-bottom: ", " solid\n    ", ";\n\n  ", ";\n\n  ", ";\n\n  ", ";\n\n  ", ";\n\n  ", ";\n\n  ", ";\n\n  ", ";\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  margin-top: ", ";\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: inline-flex;\n  margin-bottom: ", ";\n  width: ", ";\n  > * {\n    white-space: ", ";\n    text-overflow: ", ";\n    overflow: ", ";\n  }\n\n  p {\n    line-height: ", ";\n  }\n\n  ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { calculateRem } from '@uie/javascript-style-helpers';
import Icon, { IconData } from '@vds-core/icons';
import { BodyConfig, MicroConfig, TypographyConfig, Micro, Body } from '@vds-core/typography';
import { withVDSManager } from '@vds-core/utilities';
import { colors, calculateSpacing } from '@vds-core/theme';
import cuid from 'cuid';
var propTypes = {
  /**
   * disables the Dropdown
   */
  disabled: PropTypes.bool,

  /**
   * @deprecated
   * Locks the input from user interaction.
   */
  locked: PropTypes.bool,

  /**
   * Notify the user if there is an error
   */
  error: PropTypes.bool,

  /**
   * Locks the input from user interaction.
   */
  readOnly: PropTypes.bool,

  /**
   * Items for the Dropdown List.
   */
  children: PropTypes.node,

  /**
   * Message displayed when there is an error
   */
  errorText: PropTypes.string,

  /**
   * This is a label for the select input
   */
  label: PropTypes.string,

  /**
   * This is the width of the select box. Any string can be passed such as 100% or a pixel value.
   */
  width: PropTypes.string,

  /**
   * @deprecated
   * Will render borderless if set to true.
   */
  borderless: PropTypes.bool,

  /**
   * @ignore defines height of the select field
   */
  height: PropTypes.string,

  /**
   * @ignore defines padding inside of the select field
   */
  selectPadding: PropTypes.string,

  /**
   * @ignore defines the space between the label and the dropdown input
   */
  labelMarginBottom: PropTypes.string,

  /**
   * @ignore defines whether text trancates with ellipsis or not
   */
  overflowEllipsis: PropTypes.bool,

  /**
   * @ignore defines the space between the select and the error text below
   */
  errorLabelSpacing: PropTypes.string,

  /**
   * @ignore adds the ability to use borders when in ready only state (default is borderless)
   */
  readOnlyBorders: PropTypes.bool,

  /**
   * @ignore adds hover state to select field
   */
  hoverState: PropTypes.bool,

  /**
   * @ignore adds or removes focus states
   */
  focusState: PropTypes.bool,

  /**
   * @ignore adds max-width to select field
   */
  maxWidth: PropTypes.string,

  /**
   * @ignore adds min-width to select field
   */
  minWidth: PropTypes.string,

  /**
   * @ignore used to define colors throught component
   */
  color: PropTypes.object,

  /**
   * @ignore passes through typescale via string if there's more than one option [example 'VDS' instead of 'MVP']
   */
  typescale: PropTypes.string,

  /**
   * @ignore config for passing though typography
   */
  bodyConfig: PropTypes.object,

  /**
   * If false, puts a string of 'Optional' next to the label
   */
  required: PropTypes.bool,

  /**
   * @ignore passes through data for Icons
   */
  iconConfig: PropTypes.object,

  /**
   * Allows a string to be provided for analytics.
   */
  'data-analyticstrack': PropTypes.string,

  /**
   * Allows a string to be provided for analytics.
   */
  'data-track': PropTypes.string,

  /**
   * Allows a string to be provided for click stream.
   */
  'data-clickstream': PropTypes.string,

  /**
   * Allows a unique ID to be passed to the component.
   */
  id: PropTypes.string,

  /**
   * @ignore If passed, the Tooltip will render
   */
  Tooltip: PropTypes.func,

  /**
   * @ignore If passed, new Body component will render
   */
  Body: PropTypes.func,

  /**
   * @ignore If passed, new Micro component will render
   */
  Micro: PropTypes.func
};
var defaultProps = {
  disabled: false,
  locked: false,
  error: false,
  readOnly: false,
  width: '100%',
  borderless: false,
  label: '',
  height: calculateRem(42),
  selectPadding: calculateRem(12, 40, 12, 16),
  labelMarginBottom: calculateRem(1),
  overflowEllipsis: false,
  errorLabelSpacing: calculateRem(4),
  readOnlyBorders: false,
  hoverState: false,
  focusState: false,
  maxWidth: undefined,
  minWidth: undefined,
  required: true,
  color: colors,
  typescale: TypographyConfig.getTypescale(),
  bodyConfig: BodyConfig,
  iconConfig: IconData,
  Body: Body,
  Micro: Micro
};
/* Line height of p tag is 15px but because it contains a tooltip it maintains the 16px line height.*/

var LabelWrapper = /*#__PURE__*/styled.label.withConfig({
  displayName: "LabelWrapper",
  componentId: "h8azzi-0"
})(_templateObject(), function (_ref) {
  var labelMarginBottom = _ref.labelMarginBottom;
  return labelMarginBottom;
}, function (_ref2) {
  var helperText = _ref2.helperText,
      helperTextPlacement = _ref2.helperTextPlacement;
  return helperText && helperTextPlacement === 'right' ? '50%' : '100%';
}, function (_ref3) {
  var overflowEllipsis = _ref3.overflowEllipsis;
  return overflowEllipsis ? 'normal' : 'nowrap';
}, function (_ref4) {
  var overflowEllipsis = _ref4.overflowEllipsis;
  return overflowEllipsis ? null : 'ellipsis';
}, function (_ref5) {
  var overflowEllipsis = _ref5.overflowEllipsis;
  return overflowEllipsis ? null : 'hidden';
}, function (_ref6) {
  var hasTooltip = _ref6.hasTooltip;
  return hasTooltip ? calculateRem(15) : calculateRem(16);
}, function (_ref7) {
  var focusState = _ref7.focusState;
  return focusState && "\n    &:focus,\n    &:active {\n      outline: none;\n    }\n  ";
});
var ErrorTextWrapper = /*#__PURE__*/styled.div.withConfig({
  displayName: "ErrorTextWrapper",
  componentId: "h8azzi-1"
})(_templateObject2(), function (_ref8) {
  var errorLabelSpacing = _ref8.errorLabelSpacing;
  return errorLabelSpacing;
});
var SelectContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "SelectContainer",
  componentId: "h8azzi-2"
})(_templateObject3(), function (_ref9) {
  var height = _ref9.height;
  return height;
}, function (_ref10) {
  var color = _ref10.color;
  return color.white;
}, function (_ref11) {
  var color = _ref11.color,
      disabled = _ref11.disabled,
      readOnly = _ref11.readOnly;
  return disabled && !readOnly ? color.coolGray3 : color.primary;
}, calculateRem(1), function (_ref12) {
  var color = _ref12.color;
  return color.coolGray3;
}, calculateRem(1), function (_ref13) {
  var color = _ref13.color;
  return color.coolGray3;
}, calculateRem(1), function (_ref14) {
  var color = _ref14.color;
  return color.coolGray3;
}, calculateRem(1), function (_ref15) {
  var color = _ref15.color,
      disabled = _ref15.disabled;
  return disabled ? color.coolGray3 : color.black;
}, function (_ref16) {
  var error = _ref16.error,
      color = _ref16.color;
  return error && "border-left: ".concat(calculateRem(1), " solid ").concat(color.error, ";\n    border-top: ").concat(calculateRem(1), " solid ").concat(color.error, ";\n    border-right: ").concat(calculateRem(1), " solid ").concat(color.error, ";\n    border-bottom: ").concat(calculateRem(4), " solid ").concat(color.error, ";\n  ");
}, function (_ref17) {
  var disabled = _ref17.disabled,
      color = _ref17.color,
      readOnly = _ref17.readOnly;
  return disabled && !readOnly && "color: ".concat(color.coolGray3, ";\n     border-color: ").concat(color.coolGray3, ";\n  ");
}, function (_ref18) {
  var readOnly = _ref18.readOnly,
      color = _ref18.color;
  return readOnly && "border-color: ".concat(color.coolGray3, ";\n  ");
}, function (_ref19) {
  var locked = _ref19.locked,
      readOnly = _ref19.readOnly,
      readOnlyBorders = _ref19.readOnlyBorders,
      color = _ref19.color;
  return (locked || readOnly) && "border: ".concat(readOnlyBorders ? "".concat(calculateRem(1), " solid ").concat(color.coolGray3) : 'none', ";\n  ");
}, function (_ref20) {
  var borderless = _ref20.borderless;
  return borderless && "border: none;\n  ";
}, function (_ref21) {
  var hoverState = _ref21.hoverState,
      readOnly = _ref21.readOnly,
      disabled = _ref21.disabled,
      error = _ref21.error,
      color = _ref21.color;
  return hoverState && "\n    &:hover {\n      border-left: ".concat(calculateRem(1), " solid ").concat(readOnly || disabled ? color.coolGray3 : color.black, ";\n      border-top: ").concat(calculateRem(1), " solid ").concat(readOnly || disabled ? color.coolGray3 : color.black, ";\n      border-right: ").concat(calculateRem(1), " solid ").concat(readOnly || disabled ? color.coolGray3 : color.black, ";\n      }\n");
}, function (_ref22) {
  var focused = _ref22.focused,
      color = _ref22.color,
      error = _ref22.error,
      readOnly = _ref22.readOnly,
      disabled = _ref22.disabled,
      locked = _ref22.locked;
  return focused && !readOnly && !locked && !disabled && "\n    outline: none;\n    border-left: ".concat(calculateRem(1), " solid ").concat(color.black, ";\n    border-top: ").concat(calculateRem(1), " solid ").concat(color.black, ";\n    border-right: ").concat(calculateRem(1), " solid ").concat(color.black, ";\n    border-bottom: ").concat(error ? calculateRem(4) : calculateRem(1), "\n      solid ").concat(error ? color.error : color.black, ";\n\n  ");
});
var SelectEl = /*#__PURE__*/styled.select.withConfig({
  displayName: "SelectEl",
  componentId: "h8azzi-3"
})(_templateObject4(), function (_ref23) {
  var color = _ref23.color,
      disabled = _ref23.disabled,
      readOnly = _ref23.readOnly;
  return disabled && !readOnly ? color.coolGray3 : color.primary;
}, function (_ref24) {
  var body = _ref24.body;
  return calculateRem(body.lineHeight);
}, function (_ref25) {
  var body = _ref25.body;
  return calculateRem(body.fontSize);
}, function (_ref26) {
  var body = _ref26.body;
  return body.fontFamily;
}, function (_ref27) {
  var body = _ref27.body;
  return calculateRem(body.letterSpacing);
}, function (_ref28) {
  var selectPadding = _ref28.selectPadding,
      inlineLabel = _ref28.inlineLabel,
      error = _ref28.error;
  return inlineLabel ? error ? calculateRem(12, 44, 9, 0) : calculateRem(12, 44, 12, 0) : selectPadding;
}, function (_ref29) {
  var readOnly = _ref29.readOnly,
      locked = _ref29.locked,
      readOnlyBorders = _ref29.readOnlyBorders;
  return (readOnly || locked) && !readOnlyBorders ? 0 : null;
}, function (_ref30) {
  var error = _ref30.error;
  return error ? calculateRem(9) : calculateRem(12);
});
var ComponentContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "ComponentContainer",
  componentId: "h8azzi-4"
})(_templateObject5(), function (_ref31) {
  var helperTextPlacement = _ref31.helperTextPlacement;
  return helperTextPlacement === 'right' ? 'row' : 'column';
}, function (_ref32) {
  var width = _ref32.width;
  return width;
}, function (_ref33) {
  var maxWidth = _ref33.maxWidth;
  return maxWidth;
}, function (_ref34) {
  var minWidth = _ref34.minWidth;
  return minWidth;
});
var StyledContainer = /*#__PURE__*/styled.div.withConfig({
  displayName: "StyledContainer",
  componentId: "h8azzi-5"
})(_templateObject6(), function (_ref35) {
  var helperText = _ref35.helperText,
      helperTextPlacement = _ref35.helperTextPlacement;
  return helperText && helperTextPlacement === 'right' ? '50%' : '100%';
}, function (_ref36) {
  var width = _ref36.width;
  return width;
});
var OptionalLabel = /*#__PURE__*/styled.span.withConfig({
  displayName: "OptionalLabel",
  componentId: "h8azzi-6"
})(_templateObject7(), function (_ref37) {
  var required = _ref37.required,
      disabled = _ref37.disabled,
      color = _ref37.color;
  return !required && ":after {\n        color: ".concat(disabled ? color.coolGray3 : color.coolGray6, ";\n        content: ' Optional';\n        display: inline;\n      }");
});
var IconContainer = /*#__PURE__*/styled.span.withConfig({
  displayName: "IconContainer",
  componentId: "h8azzi-7"
})(_templateObject8(), calculateRem(12), function (_ref38) {
  var typescale = _ref38.typescale;
  return typescale === 'VDS' ? calculateRem(12) : calculateRem(16);
}, function (_ref39) {
  var typescale = _ref39.typescale;
  return typescale === 'VDS' ? calculateRem(12) : calculateRem(13);
}, function (_ref40) {
  var disabled = _ref40.disabled,
      color = _ref40.color;
  return disabled && "\n    color: ".concat(color.grayLight, ";\n    border-color: ").concat(color.grayLight, ";\n  ");
});
var InlineLabel = /*#__PURE__*/styled.label.withConfig({
  displayName: "InlineLabel",
  componentId: "h8azzi-8"
})(_templateObject9(), function (_ref41) {
  var error = _ref41.error;
  return error ? calculateRem(12, 4, 9, 12) : calculateRem(12, 4, 12, 12);
});
var FlexedRowContainer = /*#__PURE__*/styled.span.withConfig({
  displayName: "FlexedRowContainer",
  componentId: "h8azzi-9"
})(_templateObject10());
var FlexedColContainer = /*#__PURE__*/styled.span.withConfig({
  displayName: "FlexedColContainer",
  componentId: "h8azzi-10"
})(_templateObject11(), function (_ref42) {
  var helperText = _ref42.helperText,
      helperTextPlacement = _ref42.helperTextPlacement;
  return helperText && helperTextPlacement === 'right' ? '50%' : '100%';
});
var HelperText = /*#__PURE__*/styled.div.withConfig({
  displayName: "HelperText",
  componentId: "h8azzi-11"
})(_templateObject12(), function (_ref43) {
  var helperTextPlacement = _ref43.helperTextPlacement,
      label = _ref43.label;
  return helperTextPlacement === 'right' && "\n    position: relative;\n    width: 50%;\n    padding-top: 0px;\n    padding-left: ".concat(calculateSpacing('3X'), ";\n  ");
}, function (_ref44) {
  var helperTextPlacement = _ref44.helperTextPlacement;
  return helperTextPlacement === 'bottom' && "\n    padding-top: ".concat(calculateSpacing('2X'), ";\n  ");
});
var AlignTooltip = /*#__PURE__*/styled.span.withConfig({
  displayName: "AlignTooltip",
  componentId: "h8azzi-12"
})(_templateObject13());

var Select = /*#__PURE__*/function (_React$Component) {
  _inherits(Select, _React$Component);

  var _super = _createSuper(Select);

  function Select(props) {
    var _this;

    _classCallCheck(this, Select);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "_hideIcon", function () {
      _this.setState({
        iconFocused: false,
        selectFocus: true
      });
    });

    _defineProperty(_assertThisInitialized(_this), "_showIcon", function () {
      _this.setState({
        iconFocused: true,
        selectFocus: false
      });
    });

    _defineProperty(_assertThisInitialized(_this), "_renderHelperText", function () {
      var _this$props = _this.props,
          inlineLabel = _this$props.inlineLabel,
          helperTextPlacement = _this$props.helperTextPlacement,
          color = _this$props.color,
          bodyConfig = _this$props.bodyConfig,
          disabled = _this$props.disabled,
          typescale = _this$props.typescale,
          helperText = _this$props.helperText;
      return /*#__PURE__*/React.createElement(HelperText, {
        inlineLabel: inlineLabel,
        helperTextPlacement: helperTextPlacement,
        "aria-hidden": "true"
      }, /*#__PURE__*/React.createElement(Body, {
        config: bodyConfig,
        color: disabled ? color.coolGray3 : color.coolGray6,
        typescale: typescale
      }, helperText));
    });

    _defineProperty(_assertThisInitialized(_this), "renderIcon", function (_ref45) {
      var disabled = _ref45.disabled,
          error = _ref45.error,
          readOnly = _ref45.readOnly,
          color = _ref45.color,
          typescale = _ref45.typescale,
          height = _ref45.height,
          iconConfig = _ref45.iconConfig,
          inlineLabel = _ref45.inlineLabel;
      return /*#__PURE__*/React.createElement(IconContainer, {
        tabIndex: -1,
        height: height,
        error: error,
        disabled: disabled,
        color: color,
        "aria-hidden": true,
        inlineLabel: inlineLabel,
        typescale: typescale
      }, !readOnly && /*#__PURE__*/React.createElement(Icon, {
        tabIndex: -1,
        data: iconConfig,
        size: typescale === 'VDS' ? 'medium' : 'small',
        name: error && _this.state.iconFocused && typescale === 'VDS' ? 'error' : 'caret-down',
        color: disabled ? color.coolGray3 : color.black,
        "aria-hidden": true
      }));
    });

    _defineProperty(_assertThisInitialized(_this), "_labelOnClick", function (e) {
      if (e.target.id !== 'labelId') {
        e.preventDefault();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "_onChange", function (e) {
      _this.props.onChange && _this.props.onChange(e);

      _this.setState({
        selectedValue: e.target.value
      });
    });

    _defineProperty(_assertThisInitialized(_this), "_renderChildren", function () {
      var children = _this.props.children;
      if (!children) return null;
      return React.Children.map(children, function (child, index) {
        return /*#__PURE__*/React.cloneElement(child, {
          'aria-label': "".concat(child.props.children, " item ").concat(index + 1, " of ").concat(children.length > 1 ? children.length : 1, " ").concat(child.props.children === _this.state.selectedValue ? 'selected' : '')
        });
      });
    });

    _this.state = {
      iconFocused: true,
      selectFocus: false,
      selectedValue: undefined
      /* selectedValue is used to give the aria label 'selected' */

    };
    return _this;
  }

  _createClass(Select, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var children = this.props.children;
      /* Check if an option has been passed a selected prop, if so set selected state to that item */

      if (children && children.length > 1) {
        children.map(function (child) {
          if (child && child.props && child.props.children && child.props.selected) {
            _this2.setState({
              selectedValue: child.props.children
            });
          }
        });
        /* If there was no selected value passed, then default the selectedValue to the first child */

        if (!this.state.selectedValue && children[0] && children[0].props && children[0].props.children) {
          this.setState({
            selectedValue: children[0].props.children
          });
        }
        /* if there is only one child passed */

      } else if (children && children.props && children.props.children) {
        this.setState({
          selectedValue: children.props.children
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          disabled = _this$props2.disabled,
          locked = _this$props2.locked,
          error = _this$props2.error,
          readOnly = _this$props2.readOnly,
          label = _this$props2.label,
          errorText = _this$props2.errorText,
          width = _this$props2.width,
          children = _this$props2.children,
          borderless = _this$props2.borderless,
          bodyConfig = _this$props2.bodyConfig,
          typescale = _this$props2.typescale,
          color = _this$props2.color,
          required = _this$props2.required,
          labelMarginBottom = _this$props2.labelMarginBottom,
          overflowEllipsis = _this$props2.overflowEllipsis,
          errorLabelSpacing = _this$props2.errorLabelSpacing,
          readOnlyBorders = _this$props2.readOnlyBorders,
          selectPadding = _this$props2.selectPadding,
          height = _this$props2.height,
          hoverState = _this$props2.hoverState,
          focusState = _this$props2.focusState,
          maxWidth = _this$props2.maxWidth,
          minWidth = _this$props2.minWidth,
          id = _this$props2.id,
          inlineLabel = _this$props2.inlineLabel,
          Tooltip = _this$props2.Tooltip,
          tooltipContent = _this$props2.tooltipContent,
          tooltipTitle = _this$props2.tooltipTitle,
          helperText = _this$props2.helperText,
          helperTextPlacement = _this$props2.helperTextPlacement,
          Body = _this$props2.Body,
          Micro = _this$props2.Micro,
          ariaLabel = _this$props2.ariaLabel,
          className = _this$props2.className;
      var unique_id = cuid();
      var fontSize, LabelType;

      if (typescale === 'VDS') {
        fontSize = 'large';
        LabelType = Body;
      } else {
        fontSize = 'medium';
        LabelType = Micro;
      }

      var labelId = 'labelId';
      var body = bodyConfig.getStyles(typescale, 'desktop', fontSize);

      function _onKeyDown(e) {
        if (e.type !== 'click' && e.detail === 0) e.target.focus();
      }

      var accessLabel = label ? !required ? label + ' Optional' : label : ariaLabel;
      error && !errorText && console.error('Error Text for DropdownSelect MUST be provided');
      return /*#__PURE__*/React.createElement(ComponentContainer, {
        width: width,
        maxWidth: maxWidth,
        minWidth: minWidth,
        helperTextPlacement: helperTextPlacement,
        className: className
      }, /*#__PURE__*/React.createElement(StyledContainer, {
        id: id,
        helperTextPlacement: helperTextPlacement,
        helperText: helperText
      }, label && !inlineLabel && /*#__PURE__*/React.createElement(LabelWrapper, {
        id: labelId,
        width: width,
        onKeyDown: _onKeyDown,
        focusState: focusState,
        overflowEllipsis: overflowEllipsis,
        "aria-label": label,
        htmlFor: unique_id,
        labelMarginBottom: labelMarginBottom,
        helperText: helperText,
        helperTextPlacement: helperTextPlacement,
        onClick: this._labelOnClick,
        hasTooltip: tooltipTitle || tooltipContent
      }, /*#__PURE__*/React.createElement(LabelType, {
        id: labelId,
        config: typescale === 'VDS' ? bodyConfig : MicroConfig,
        primitive: 'p',
        typescale: typescale,
        color: disabled ? color.coolGray3 : typescale === 'VDS' ? color.black : color.coolGray6
      }, label, /*#__PURE__*/React.createElement(OptionalLabel, {
        id: labelId,
        disabled: disabled,
        "aria-label": label,
        color: color,
        required: required
      }), (tooltipTitle || tooltipContent) && label && /*#__PURE__*/React.createElement(AlignTooltip, null, /*#__PURE__*/React.createElement(Tooltip, {
        size: "small",
        disabled: disabled,
        title: tooltipTitle
      }, tooltipContent)))), /*#__PURE__*/React.createElement(FlexedRowContainer, null, /*#__PURE__*/React.createElement(FlexedColContainer, {
        helperText: helperText,
        helperTextPlacement: helperTextPlacement
      }, /*#__PURE__*/React.createElement(SelectContainer, {
        color: color,
        selectPadding: selectPadding,
        readOnlyBorders: readOnlyBorders,
        height: height,
        typescale: typescale,
        hoverState: hoverState,
        bodyConfig: bodyConfig,
        body: body,
        borderless: borderless,
        disabled: disabled,
        readOnly: locked || readOnly,
        error: error,
        width: width,
        focused: this.state.selectFocus
      }, inlineLabel && label && /*#__PURE__*/React.createElement(InlineLabel, {
        error: error,
        tabIndex: -1,
        htmlFor: unique_id
      }, /*#__PURE__*/React.createElement(Body, {
        typescale: typescale,
        size: "large",
        config: bodyConfig,
        bold: true,
        color: disabled ? color.coolGray3 : color.black
      }, label)), /*#__PURE__*/React.createElement(SelectEl, _extends({
        "aria-label": helperText ? "".concat(accessLabel, " ").concat(helperText) : accessLabel
      }, this.props, {
        readOnlyBorders: readOnlyBorders,
        disabled: disabled || readOnly || locked,
        typescale: typescale,
        bodyConfig: bodyConfig,
        id: unique_id,
        body: body,
        tabIndex: 0,
        onKeyDown: _onKeyDown,
        onFocus: this._hideIcon,
        onBlur: this._showIcon,
        onChange: this._onChange
      }), this._renderChildren()), this.renderIcon(this.props)), error && errorText && /*#__PURE__*/React.createElement(ErrorTextWrapper, {
        errorLabelSpacing: errorLabelSpacing,
        width: width
      }, /*#__PURE__*/React.createElement(LabelType, {
        config: typescale === 'VDS' ? bodyConfig : MicroConfig,
        typescale: typescale
      }, errorText))), helperText && helperTextPlacement === 'right' && this._renderHelperText()), helperText && helperTextPlacement === 'bottom' && this._renderHelperText()));
    }
  }]);

  return Select;
}(React.Component);

Select.propTypes = propTypes;
Select.defaultProps = defaultProps;
export default withVDSManager(Select);