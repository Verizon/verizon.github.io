"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _javascriptStyleHelpers = require("@uie/javascript-style-helpers");

var _typography = require("@vds-core/typography");

var _theme = require("@vds-core/theme");

var _utilities = require("@vds-core/utilities");

function _templateObject4() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  width: auto;\n  display: inline-block;\n  position: relative;\n  border: 0;\n  cursor: pointer;\n  background-image: none;\n  background-color: transparent;\n  text-decoration: none;\n  font-size: ", ";\n  font-family: ", ";\n  font-weight: ", ";\n  line-height: ", ";\n  height: ", ";\n  letter-spacing: ", ";\n  color: ", ";\n  border-bottom: ", " solid;\n  border-color: ", ";\n  box-sizing: border-box;\n  transition: opacity 0.15s ease-in;\n  touch-action: manipulation;\n  ", ";\n\n  ", ";\n\n  ", ";\n\n  ", ";\n\n  ", ";\n\n  ", ";\n\n  ", ";\n\n  ", "\n  &:focus {\n    outline: none;\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  height: ", ";\n  width: 100%;\n  position: relative;\n  &:focus {\n    outline: none;\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  ", "\n  height: ", ";\n  cursor: pointer;\n  display: inline;\n  width: 100%;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  left: 50%;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  box-sizing: content-box;\n  &:hover {\n    cursor: pointer;\n  }\n  top: 50%;\n  outline: none;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var propTypes = {
  /**
   * Determines display layout of button.
   */
  type: _propTypes["default"].oneOf(['inline', 'standAlone']),

  /**
   * Determines <strong>viewport</strong> of button. Desktop and tablet are the same size.
   */
  viewport: _propTypes["default"].oneOf(['mobile', 'tablet', 'desktop']),

  /**
   * Item to render as text link.
   */
  children: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].string]),

  /**
   * Button will be disabled if <code>disabled</code> prop is passed.
   */
  disabled: _propTypes["default"].bool,

  /**
   * Button will be displayed in Inverted colors if <code>inverted</code> prop is passed.
   */
  inverted: _propTypes["default"].bool,

  /**
   *	This function will be called when the Button is clicked. It will return an event.
   */
  onClick: _propTypes["default"].func,

  /**
   * This string will be applied to the href attribute.
   */
  href: _propTypes["default"].string,

  /**
   * Determines color of <code>TextLink</code> text.
   */
  color: _propTypes["default"].oneOf([_theme.colors.blue, _theme.colors.black]),

  /**
   * Button text will be <strong>bold</strong> if <code>bold</code> is set to true.
   */
  bold: _propTypes["default"].bool,

  /**
   *	If provided, used as string that labels the element for accessibility.
   */
  ariaLabel: _propTypes["default"].string,

  /**
   * @ignore
   */
  focusState: _propTypes["default"].bool,

  /**
   * @ignore
   */
  activeState: _propTypes["default"].bool,

  /**
   * @ignore
   */
  hitArea: _propTypes["default"].bool,
  //turns hit area on or off

  /**
   * @ignore
   */
  bodyConfig: _propTypes["default"].object,

  /**
   * @ignore
   */
  colorConfig: _propTypes["default"].object,

  /**
   * @ignore
   */
  typescale: _propTypes["default"].string,

  /**
   * @ignore
   */
  size: _propTypes["default"].oneOf(['small', 'large']),

  /**
   * Allows a string to be provided for analytics.
   */
  'data-analyticstrack': _propTypes["default"].string,

  /**
   * Allows a string to be provided for analytics.
   */
  'data-track': _propTypes["default"].string,

  /**
   * Allows a string to be provided for click stream.
   */
  'data-clickstream': _propTypes["default"].string,

  /**
   * @ignore
   */
  dataLoc: _propTypes["default"].string,

  /**
   * Allows a unique ID to be passed to the component.
   */
  id: _propTypes["default"].string
};
var defaultProps = {
  size: undefined,
  viewport: 'desktop',
  type: 'inline',
  disabled: false,
  inverted: false,
  onClick: undefined,
  bold: false,
  color: _theme.colors.primary,
  colorConfig: _theme.colors,
  typescale: _typography.TypographyConfig.getTypescale(),
  focusState: false,
  hitArea: false,
  bodyConfig: _typography.BodyConfig,
  tabIndex: 0,
  activeState: false
};
var sharedHitAreaStyles = /*#__PURE__*/(0, _styledComponents.css)(_templateObject());

var HitArea = /*#__PURE__*/_styledComponents["default"].span.withConfig({
  displayName: "HitArea",
  componentId: "sc-9x52p1-0"
})(_templateObject2(), sharedHitAreaStyles, function (_ref) {
  var type = _ref.type;
  return type === 'inline' ? (0, _javascriptStyleHelpers.calculateRem)(24) : (0, _javascriptStyleHelpers.calculateRem)(44);
});

var Wrapper = /*#__PURE__*/_styledComponents["default"].span.withConfig({
  displayName: "Wrapper",
  componentId: "sc-9x52p1-1"
})(_templateObject3(), function (_ref2) {
  var type = _ref2.type,
      bodyLarge = _ref2.bodyLarge;
  return type === 'inline' ? 'inherit' : (0, _javascriptStyleHelpers.calculateRem)(bodyLarge.lineHeight);
});

var StyledAnchor = /*#__PURE__*/_styledComponents["default"].a.withConfig({
  displayName: "StyledAnchor",
  componentId: "sc-9x52p1-2"
})(_templateObject4(), function (_ref3) {
  var type = _ref3.type,
      bodyLarge = _ref3.bodyLarge;
  return type === 'inline' ? 'inherit' : (0, _javascriptStyleHelpers.calculateRem)(bodyLarge.fontSize);
}, function (_ref4) {
  var type = _ref4.type,
      bodyLarge = _ref4.bodyLarge;
  return type === 'inline' ? 'inherit' : bodyLarge.fontFamily;
}, function (_ref5) {
  var type = _ref5.type,
      bold = _ref5.bold,
      bodyLarge = _ref5.bodyLarge;
  return bold ? '750' : type === 'inline' ? 'inherit' : bodyLarge.fontWeight;
}, function (_ref6) {
  var type = _ref6.type,
      bodyLarge = _ref6.bodyLarge;
  return type === 'inline' ? 'inherit' : (0, _javascriptStyleHelpers.calculateRem)(bodyLarge.lineHeight);
}, function (_ref7) {
  var type = _ref7.type,
      bodyLarge = _ref7.bodyLarge;
  return type === 'inline' ? 'inherit' : (0, _javascriptStyleHelpers.calculateRem)(bodyLarge.lineHeight);
}, function (_ref8) {
  var type = _ref8.type,
      bodyLarge = _ref8.bodyLarge;
  return type === 'inline' ? 'inherit' : bodyLarge.letterSpacing && (0, _javascriptStyleHelpers.calculateRem)(bodyLarge.letterSpacing);
}, function (_ref9) {
  var color = _ref9.color;
  return color;
}, (0, _javascriptStyleHelpers.calculateRem)(1), function (_ref10) {
  var color = _ref10.color;
  return color;
}, function (_ref11) {
  var focusState = _ref11.focusState,
      colors = _ref11.colors;
  return focusState && "\n     &:focus:not(:hover) {\n      outline: none;\n      &::after {\n        box-sizing: border-box;\n        border: ".concat((0, _javascriptStyleHelpers.calculateRem)(1), " dashed ").concat(colors.black, ";\n        content: '';\n        left: 50%;\n        position: absolute;\n        top: calc(50% + ").concat((0, _javascriptStyleHelpers.calculateRem)(1), ");\n        transform: translate(-50%, -50%);\n        height: calc(100% + ").concat((0, _javascriptStyleHelpers.calculateRem)(6), ");\n        width: calc(100% + ").concat((0, _javascriptStyleHelpers.calculateRem)(6), ");\n      }\n    }\n    &:hover {\n      color: ").concat(colors.blue, ";\n      border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(colors.blue, ";\n    }\n    &:active {\n      color: ").concat(colors.coolGray6, ";\n      border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(colors.coolGray6, ";\n    }\n    &:visited {\n      outline: none;\n    }\n  ");
}, function (_ref12) {
  var focusState = _ref12.focusState,
      colors = _ref12.colors;
  return !focusState && "\n      padding: ".concat((0, _javascriptStyleHelpers.calculateRem)(0, 0, 1, 0), ";\n      &:hover,\n      &:active,\n      &:visited {\n        outline: none;\n      }\n\n      &:active {\n        opacity: 0.77;\n        transition: opacity 0.15s ease-out;\n      }\n\n      &:hover {\n        color: ").concat(colors.blue, ";\n        border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(colors.blue, ";\n      }\n    ");
}, function (_ref13) {
  var viewport = _ref13.viewport,
      type = _ref13.type,
      bodySmall = _ref13.bodySmall,
      size = _ref13.size;
  return (viewport === 'mobile' || size === 'small') && type !== 'inline' && "\n      font-size: ".concat((0, _javascriptStyleHelpers.calculateRem)(bodySmall.fontSize), ";\n      font-family: ").concat(bodySmall.fontFamily, ";\n      font-weight: ").concat(bodySmall.fontWeight, ";\n      line-height: ").concat((0, _javascriptStyleHelpers.calculateRem)(bodySmall.lineHeight), "\n      letter-spacing: normal;\n    ");
}, function (_ref14) {
  var inverted = _ref14.inverted,
      color = _ref14.color,
      colors = _ref14.colors,
      focusState = _ref14.focusState;
  return inverted && !focusState && "\n      color: ".concat(color && color !== colors.black ? color : colors.white, ";\n      border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(color && color !== colors.black ? color : colors.white, ";\n      &:active {\n        opacity: 0.77;\n        transition: opacity .15s ease-out;\n      }");
}, function (_ref15) {
  var inverted = _ref15.inverted,
      color = _ref15.color,
      colors = _ref15.colors,
      focusState = _ref15.focusState;
  return inverted && focusState && "\n      color: ".concat(color && color !== colors.black ? color : colors.white, ";\n      border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(color && color !== colors.black ? color : colors.white, ";\n     &:focus:not(:hover) {\n      outline: none;\n      &::after {\n        box-sizing: border-box;\n        border: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " dashed ").concat(colors.white, ";\n        content: '';\n        left: 50%;\n        position: absolute;\n        top: calc(50% + ").concat((0, _javascriptStyleHelpers.calculateRem)(1), ");\n        transform: translate(-50%, -50%);\n        height: calc(100% + ").concat((0, _javascriptStyleHelpers.calculateRem)(6), ");\n        width: calc(100% + ").concat((0, _javascriptStyleHelpers.calculateRem)(6), ");\n      }\n    }\n      &:hover {\n        color: ").concat(colors.blueInverted, ";\n        outline: none;\n        border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(colors.blueInverted, ";\n      }\n      &:hover {\n        color: ").concat(colors.blueInverted, ";\n        border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(colors.blueInverted, ";\n      }\n      &:active {\n        color: ").concat(colors.coolGray6, ";\n        border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(colors.coolGray6, ";\n      }\n      ");
}, function (_ref16) {
  var disabled = _ref16.disabled,
      colors = _ref16.colors;
  return disabled && "\n    pointer-events: none;\n    cursor: not-allowed;\n    color: ".concat(colors.coolGray3, ";\n    border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(colors.coolGray3, ";\n    &:hover {\n      background-color: transparent;\n      color: ").concat(colors.coolGray3, ";\n      border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(colors.coolGray3, ";\n    }\n    &: focus{\n      outline: none;\n    }\n  ");
}, function (_ref17) {
  var disabled = _ref17.disabled,
      inverted = _ref17.inverted;
  return disabled && inverted && "\n    border-bottom: ".concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(_theme.colors.coolGray10, ";\n    color: ").concat(_theme.colors.coolGray10, ";\n    \n  ");
}, function (_ref18) {
  var activeState = _ref18.activeState,
      color = _ref18.color;
  return activeState && "\n    color: ".concat(_theme.colors.coolGray6, " !important;\n    border-bottom: ").concat((0, _javascriptStyleHelpers.calculateRem)(1), " solid ").concat(_theme.colors.coolGray6, " !important;\n  ");
});

var TextLink = function TextLink(props) {
  var focusState = props.focusState,
      hitArea = props.hitArea,
      bodyConfig = props.bodyConfig,
      colorConfig = props.colorConfig,
      typescale = props.typescale,
      activeState = props.activeState,
      id = props.id,
      disabled = props.disabled,
      dataLoc = props.dataLoc;
  var newAriaLabel = props.ariaLabel ? props.ariaLabel : props.children && typeof props.children === 'string' ? props.children : 'Text Link';
  var smallFontSize = typescale === 'VDS' ? 'small' : 'medium';
  var largeFontSize = typescale === 'VDS' ? 'large' : 'medium';
  var bodyLarge = bodyConfig.getStyles(typescale, 'desktop', largeFontSize);
  var bodySmall = bodyConfig.getStyles(typescale, 'mobile', smallFontSize);
  return /*#__PURE__*/_react["default"].createElement(StyledAnchor, (0, _extends2["default"])({}, props, {
    id: id,
    size: props.size,
    colors: colorConfig,
    type: props.type,
    viewport: props.viewport,
    disabled: props.disabled,
    inverted: props.inverted,
    href: props.href,
    color: props.color,
    bold: props.bold,
    "aria-label": newAriaLabel,
    role: "link",
    "aria-disabled": props.disabled,
    tabIndex: props.disabled ? -1 : 0,
    focusState: focusState,
    bodySmall: bodySmall,
    bodyLarge: bodyLarge,
    activeState: activeState,
    "data-loc": dataLoc
  }), hitArea && /*#__PURE__*/_react["default"].createElement(HitArea, {
    type: props.type,
    tabIndex: -1
  }), /*#__PURE__*/_react["default"].createElement(Wrapper, {
    colors: props.color,
    tabIndex: -1,
    type: props.type,
    bodyLarge: bodyLarge
  }, props.children));
};

TextLink.defaultProps = defaultProps;
TextLink.propTypes = propTypes;

var _default = (0, _utilities.withVDSManager)(TextLink);

exports["default"] = _default;