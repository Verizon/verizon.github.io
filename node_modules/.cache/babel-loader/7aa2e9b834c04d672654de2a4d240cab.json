{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { calculateRem } from '@uie/javascript-style-helpers';\nimport { Button as CoreButton } from '@vds-core/buttons';\nimport { BodyConfig, TypographyConfig } from '@vds/typography';\nimport { colors } from '@vds/theme';\n\nvar Button = function Button(props) {\n  var width = props.width,\n      size = props.size;\n\n  function _calculateButtonHeight(size) {\n    var height;\n\n    if (size === 'small') {\n      height = calculateRem(28);\n    } else {\n      height = calculateRem(44);\n    }\n\n    return height;\n  }\n\n  function _calculateSideMargin(size, width) {\n    var sideMargin;\n\n    if (size === 'small') {\n      sideMargin = 16;\n    } else {\n      sideMargin = width === 'auto' ? 44 : 22;\n    }\n\n    return calculateRem(sideMargin);\n  }\n\n  return /*#__PURE__*/React.createElement(CoreButton, _extends({}, props, {\n    width: size === 'small' ? 'auto' : width,\n    hitArea: true,\n    hoverState: true,\n    focusState: true,\n    activeState: true,\n    overflowEllipsis: true,\n    typescale: TypographyConfig.getTypescale(),\n    smallButtonPadding: false,\n    colorConfig: colors,\n    bodyConfig: BodyConfig,\n    calculateButtonHeight: _calculateButtonHeight,\n    calculateSideMargin: _calculateSideMargin,\n    calculateFontWeight: 700\n  }));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/vamsi/verizon.github.io/node_modules/@vds/buttons/dist/esm/components/Button.js"],"names":["_extends","React","calculateRem","Button","CoreButton","BodyConfig","TypographyConfig","colors","props","width","size","_calculateButtonHeight","height","_calculateSideMargin","sideMargin","createElement","hitArea","hoverState","focusState","activeState","overflowEllipsis","typescale","getTypescale","smallButtonPadding","colorConfig","bodyConfig","calculateButtonHeight","calculateSideMargin","calculateFontWeight"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,MAAM,IAAIC,UAAnB,QAAqC,mBAArC;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,iBAA7C;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,IAAIJ,MAAM,GAAG,SAASA,MAAT,CAAgBK,KAAhB,EAAuB;AAClC,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AAAA,MACIC,IAAI,GAAGF,KAAK,CAACE,IADjB;;AAGA,WAASC,sBAAT,CAAgCD,IAAhC,EAAsC;AACpC,QAAIE,MAAJ;;AAEA,QAAIF,IAAI,KAAK,OAAb,EAAsB;AACpBE,MAAAA,MAAM,GAAGV,YAAY,CAAC,EAAD,CAArB;AACD,KAFD,MAEO;AACLU,MAAAA,MAAM,GAAGV,YAAY,CAAC,EAAD,CAArB;AACD;;AAED,WAAOU,MAAP;AACD;;AAED,WAASC,oBAAT,CAA8BH,IAA9B,EAAoCD,KAApC,EAA2C;AACzC,QAAIK,UAAJ;;AAEA,QAAIJ,IAAI,KAAK,OAAb,EAAsB;AACpBI,MAAAA,UAAU,GAAG,EAAb;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,GAAGL,KAAK,KAAK,MAAV,GAAmB,EAAnB,GAAwB,EAArC;AACD;;AAED,WAAOP,YAAY,CAACY,UAAD,CAAnB;AACD;;AAED,SAAO,aAAab,KAAK,CAACc,aAAN,CAAoBX,UAApB,EAAgCJ,QAAQ,CAAC,EAAD,EAAKQ,KAAL,EAAY;AACtEC,IAAAA,KAAK,EAAEC,IAAI,KAAK,OAAT,GAAmB,MAAnB,GAA4BD,KADmC;AAEtEO,IAAAA,OAAO,EAAE,IAF6D;AAGtEC,IAAAA,UAAU,EAAE,IAH0D;AAItEC,IAAAA,UAAU,EAAE,IAJ0D;AAKtEC,IAAAA,WAAW,EAAE,IALyD;AAMtEC,IAAAA,gBAAgB,EAAE,IANoD;AAOtEC,IAAAA,SAAS,EAAEf,gBAAgB,CAACgB,YAAjB,EAP2D;AAQtEC,IAAAA,kBAAkB,EAAE,KARkD;AAStEC,IAAAA,WAAW,EAAEjB,MATyD;AAUtEkB,IAAAA,UAAU,EAAEpB,UAV0D;AAWtEqB,IAAAA,qBAAqB,EAAEf,sBAX+C;AAYtEgB,IAAAA,mBAAmB,EAAEd,oBAZiD;AAatEe,IAAAA,mBAAmB,EAAE;AAbiD,GAAZ,CAAxC,CAApB;AAeD,CA3CD;;AA6CA,eAAezB,MAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { calculateRem } from '@uie/javascript-style-helpers';\nimport { Button as CoreButton } from '@vds-core/buttons';\nimport { BodyConfig, TypographyConfig } from '@vds/typography';\nimport { colors } from '@vds/theme';\n\nvar Button = function Button(props) {\n  var width = props.width,\n      size = props.size;\n\n  function _calculateButtonHeight(size) {\n    var height;\n\n    if (size === 'small') {\n      height = calculateRem(28);\n    } else {\n      height = calculateRem(44);\n    }\n\n    return height;\n  }\n\n  function _calculateSideMargin(size, width) {\n    var sideMargin;\n\n    if (size === 'small') {\n      sideMargin = 16;\n    } else {\n      sideMargin = width === 'auto' ? 44 : 22;\n    }\n\n    return calculateRem(sideMargin);\n  }\n\n  return /*#__PURE__*/React.createElement(CoreButton, _extends({}, props, {\n    width: size === 'small' ? 'auto' : width,\n    hitArea: true,\n    hoverState: true,\n    focusState: true,\n    activeState: true,\n    overflowEllipsis: true,\n    typescale: TypographyConfig.getTypescale(),\n    smallButtonPadding: false,\n    colorConfig: colors,\n    bodyConfig: BodyConfig,\n    calculateButtonHeight: _calculateButtonHeight,\n    calculateSideMargin: _calculateSideMargin,\n    calculateFontWeight: 700\n  }));\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}