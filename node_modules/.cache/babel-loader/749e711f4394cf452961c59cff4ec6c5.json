{"ast":null,"code":"var brandColors = ['#000000', // Black\n'#FFFFFF', // White\n'#ffffff', '#F6F6F6', // GrayFaded\n'#f6f6f6', '#D8DADA', // GrayLight\n'#d8dada', '#747676', // Gray\n'#333333', // GrayDark\n'#0088CE', // Blue\n'#0088ce'];\n\nvar colorExists = function colorExists(color) {\n  if (!color) {\n    return console.error('Need a color passed through');\n  }\n\n  return brandColors.indexOf(color) > -1;\n};\n\nvar fontColorChecker = function fontColorChecker(props, propName, componentName) {\n  if (props && props[propName]) {\n    var ColorExists = colorExists(props[propName]);\n\n    if (!ColorExists) {\n      return console.warn(\"The color, \".concat(props[propName], \" is not a defined prop for \").concat(componentName, \" \"));\n    }\n  }\n\n  return null;\n};\n\nvar createChainableTypeChecker = function createChainableTypeChecker(validate) {\n  function checkType(props, propName, componentName) {\n    componentName = componentName || 'ANONYMOUS';\n\n    if (props[propName] == null) {\n      return null;\n    } else {\n      return validate(props, propName, componentName);\n    }\n  }\n\n  function checkReqType(props, propName, componentName) {\n    componentName = componentName || 'ANONYMOUS';\n\n    if (props[propName] == null) {\n      return console.warn(\"Required \".concat(propName, \" was not specified in \").concat(componentName));\n    } else {\n      return validate(props, propName, componentName);\n    }\n  } // const chainedCheckType = checkType.bind(null, false);\n  // chainedCheckType.isRequired = checkType.bind(null, true);\n\n\n  var chainedCheckType = checkType.bind();\n  chainedCheckType.isRequired = checkReqType.bind();\n  return chainedCheckType;\n};\n\nvar fontColorPropType = createChainableTypeChecker(fontColorChecker);\nexport default fontColorPropType;","map":{"version":3,"sources":["/Users/vamsi/verizon-os-react/node_modules/@vds-core/typography/dist/esm/util/fontColorPropType.js"],"names":["brandColors","colorExists","color","console","error","indexOf","fontColorChecker","props","propName","componentName","ColorExists","warn","concat","createChainableTypeChecker","validate","checkType","checkReqType","chainedCheckType","bind","isRequired","fontColorPropType"],"mappings":"AAAA,IAAIA,WAAW,GAAG,CAAC,SAAD,EAAY;AAC9B,SADkB,EACP;AACX,SAFkB,EAEP,SAFO,EAEI;AACtB,SAHkB,EAGP,SAHO,EAGI;AACtB,SAJkB,EAIP,SAJO,EAII;AACtB,SALkB,EAKP;AACX,SANkB,EAMP;AACX,SAPkB,CAAlB;;AASA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC5C,MAAI,CAACA,KAAL,EAAY;AACV,WAAOC,OAAO,CAACC,KAAR,CAAc,6BAAd,CAAP;AACD;;AAED,SAAOJ,WAAW,CAACK,OAAZ,CAAoBH,KAApB,IAA6B,CAAC,CAArC;AACD,CAND;;AAQA,IAAII,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,aAA3C,EAA0D;AAC/E,MAAIF,KAAK,IAAIA,KAAK,CAACC,QAAD,CAAlB,EAA8B;AAC5B,QAAIE,WAAW,GAAGT,WAAW,CAACM,KAAK,CAACC,QAAD,CAAN,CAA7B;;AAEA,QAAI,CAACE,WAAL,EAAkB;AAChB,aAAOP,OAAO,CAACQ,IAAR,CAAa,cAAcC,MAAd,CAAqBL,KAAK,CAACC,QAAD,CAA1B,EAAsC,6BAAtC,EAAqEI,MAArE,CAA4EH,aAA5E,EAA2F,GAA3F,CAAb,CAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAVD;;AAYA,IAAII,0BAA0B,GAAG,SAASA,0BAAT,CAAoCC,QAApC,EAA8C;AAC7E,WAASC,SAAT,CAAmBR,KAAnB,EAA0BC,QAA1B,EAAoCC,aAApC,EAAmD;AACjDA,IAAAA,aAAa,GAAGA,aAAa,IAAI,WAAjC;;AAEA,QAAIF,KAAK,CAACC,QAAD,CAAL,IAAmB,IAAvB,EAA6B;AAC3B,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAOM,QAAQ,CAACP,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,CAAf;AACD;AACF;;AAED,WAASO,YAAT,CAAsBT,KAAtB,EAA6BC,QAA7B,EAAuCC,aAAvC,EAAsD;AACpDA,IAAAA,aAAa,GAAGA,aAAa,IAAI,WAAjC;;AAEA,QAAIF,KAAK,CAACC,QAAD,CAAL,IAAmB,IAAvB,EAA6B;AAC3B,aAAOL,OAAO,CAACQ,IAAR,CAAa,YAAYC,MAAZ,CAAmBJ,QAAnB,EAA6B,wBAA7B,EAAuDI,MAAvD,CAA8DH,aAA9D,CAAb,CAAP;AACD,KAFD,MAEO;AACL,aAAOK,QAAQ,CAACP,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,CAAf;AACD;AACF,GAnB4E,CAmB3E;AACF;;;AAGA,MAAIQ,gBAAgB,GAAGF,SAAS,CAACG,IAAV,EAAvB;AACAD,EAAAA,gBAAgB,CAACE,UAAjB,GAA8BH,YAAY,CAACE,IAAb,EAA9B;AACA,SAAOD,gBAAP;AACD,CA1BD;;AA4BA,IAAIG,iBAAiB,GAAGP,0BAA0B,CAACP,gBAAD,CAAlD;AACA,eAAec,iBAAf","sourcesContent":["var brandColors = ['#000000', // Black\n'#FFFFFF', // White\n'#ffffff', '#F6F6F6', // GrayFaded\n'#f6f6f6', '#D8DADA', // GrayLight\n'#d8dada', '#747676', // Gray\n'#333333', // GrayDark\n'#0088CE', // Blue\n'#0088ce'];\n\nvar colorExists = function colorExists(color) {\n  if (!color) {\n    return console.error('Need a color passed through');\n  }\n\n  return brandColors.indexOf(color) > -1;\n};\n\nvar fontColorChecker = function fontColorChecker(props, propName, componentName) {\n  if (props && props[propName]) {\n    var ColorExists = colorExists(props[propName]);\n\n    if (!ColorExists) {\n      return console.warn(\"The color, \".concat(props[propName], \" is not a defined prop for \").concat(componentName, \" \"));\n    }\n  }\n\n  return null;\n};\n\nvar createChainableTypeChecker = function createChainableTypeChecker(validate) {\n  function checkType(props, propName, componentName) {\n    componentName = componentName || 'ANONYMOUS';\n\n    if (props[propName] == null) {\n      return null;\n    } else {\n      return validate(props, propName, componentName);\n    }\n  }\n\n  function checkReqType(props, propName, componentName) {\n    componentName = componentName || 'ANONYMOUS';\n\n    if (props[propName] == null) {\n      return console.warn(\"Required \".concat(propName, \" was not specified in \").concat(componentName));\n    } else {\n      return validate(props, propName, componentName);\n    }\n  } // const chainedCheckType = checkType.bind(null, false);\n  // chainedCheckType.isRequired = checkType.bind(null, true);\n\n\n  var chainedCheckType = checkType.bind();\n  chainedCheckType.isRequired = checkReqType.bind();\n  return chainedCheckType;\n};\n\nvar fontColorPropType = createChainableTypeChecker(fontColorChecker);\nexport default fontColorPropType;"]},"metadata":{},"sourceType":"module"}