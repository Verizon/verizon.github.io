{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  &:active,\\n  &:focus,\\n  &:hover {\\n    outline: none;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { colors } from '@vds-core/theme';\nimport TypographyConfig from '../../typographyConfig';\nimport defaultConfig from './config';\nimport fontColorPropType from '../../util/fontColorPropType';\nimport { Typography } from '../Typography';\nimport { withVDSManager } from '@vds-core/utilities';\nvar propTypes = {\n  /**\n   * Primitive used for the component.\n   */\n  primitive: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'span', 'p']),\n\n  /**\n   * Viewport the font styling is based on. Desktop and tablet are the same size.\n   */\n  viewport: PropTypes.oneOf(['desktop', 'mobile', 'tablet']),\n\n  /**\n   * Size of the typescale that will be used.\n   */\n  size: PropTypes.oneOf(['XSmall', 'extraSmall', 'small', 'medium', 'large', 'extraLarge', 'extraExtraLarge', 'XLarge', '2XLarge']),\n\n  /**\n   * Content that will be passed to the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Color of the text.\n   */\n  color: fontColorPropType,\n\n  /**\n   * @ignore\n   */\n  bold: PropTypes.bool,\n\n  /**\n   * Allows for specific typescale to be passed to override global config.\n   */\n  typescale: PropTypes.oneOf(['VDS', 'MVP', 'Marketing']),\n\n  /**\n   * If the theme object contains the `typescale` key and no typescale prop was passed global typescale is overriden by theme.\n   */\n  theme: PropTypes.object,\n\n  /**\n   * The tabIndex of the text.\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  config: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  getFontWeight: PropTypes.func,\n\n  /**\n   * Assigns an Id to the component\n   */\n  id: PropTypes.string,\n\n  /**\n   * Adds an aria-labelledby attribute to the component\n   */\n  ariaLabelledBy: PropTypes.string\n};\nvar defaultProps = {\n  config: defaultConfig,\n  viewport: 'desktop',\n  size: 'small',\n  children: null,\n  color: colors.black,\n  bold: true,\n  getFontWeight: getTitleFontWeight\n};\nvar primitiveMap = {\n  extraSmall: 'span',\n  small: 'h5',\n  medium: 'h4',\n  large: 'h3',\n  extraLarge: 'h2',\n  extraExtraLarge: 'h1'\n};\nvar StyledTitle = /*#__PURE__*/styled(Typography).withConfig({\n  displayName: \"StyledTitle\",\n  componentId: \"sc-155xzr0-0\"\n})(_templateObject());\n\nfunction getTitleFontWeight(typescale, bold, size) {\n  !bold && size !== 'medium' && console.warn('Warning: `bold` prop can only be false when `size` = `medium`');\n\n  switch (typescale) {\n    case 'MVP':\n      return !bold && size === 'medium' ? '400' : '750';\n\n    case 'VDS' || 'Marketing':\n    default:\n      return !bold && size === 'medium' ? 'normal' : 'bold';\n  }\n}\n\nvar Title = function Title(props) {\n  var children = props.children,\n      primitiveProp = props.primitive,\n      viewport = props.viewport,\n      size = props.size,\n      color = props.color,\n      bold = props.bold,\n      typescale = props.typescale,\n      theme = props.theme,\n      tabIndex = props.tabIndex,\n      config = props.config,\n      getFontWeight = props.getFontWeight,\n      fontsConfigProp = props.fontsConfig,\n      ariaLabel = props.ariaLabel,\n      id = props.id,\n      ariaLabelledBy = props.ariaLabelledBy;\n  var // What typescale is being used for configuration\n  typescaleToUse = typescale ? typescale : theme && theme.typescale ? theme.typescale : TypographyConfig.getTypescale(),\n      viewportToUse = viewport === 'mobile' ? 'mobile' : 'desktop',\n      // What is the specific font configuration we are using\n  fontConfig = config[typescaleToUse][viewportToUse][size],\n      fontWeight = getFontWeight(typescaleToUse, bold, size);\n\n  function _setPrimitive() {\n    if (size) {\n      return primitiveMap[size];\n    } else {\n      return 'h5';\n    }\n  }\n\n  var primitive = primitiveProp ? primitiveProp : _setPrimitive();\n  return /*#__PURE__*/React.createElement(StyledTitle, {\n    fontSize: fontConfig.fontSize,\n    fontWeight: fontWeight,\n    fontFamily: fontConfig.fontFamily,\n    lineheight: fontConfig.lineHeight,\n    primitive: primitive,\n    color: color,\n    tabIndex: tabIndex,\n    \"aria-hidden\": tabIndex < 0,\n    fontsconfig: fontsConfigProp,\n    \"aria-label\": ariaLabel,\n    id: id,\n    \"aria-labelledby\": ariaLabelledBy\n  }, children);\n};\n\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\nexport default withVDSManager(Title);","map":{"version":3,"sources":["/Users/vamsi/verizon-os-react/node_modules/@vds-core/typography/dist/esm/components/Title/Title.js"],"names":["_taggedTemplateLiteral","_templateObject","data","React","PropTypes","styled","colors","TypographyConfig","defaultConfig","fontColorPropType","Typography","withVDSManager","propTypes","primitive","oneOf","viewport","size","children","node","color","bold","bool","typescale","theme","object","tabIndex","number","config","getFontWeight","func","id","string","ariaLabelledBy","defaultProps","black","getTitleFontWeight","primitiveMap","extraSmall","small","medium","large","extraLarge","extraExtraLarge","StyledTitle","withConfig","displayName","componentId","console","warn","Title","props","primitiveProp","fontsConfigProp","fontsConfig","ariaLabel","typescaleToUse","getTypescale","viewportToUse","fontConfig","fontWeight","_setPrimitive","createElement","fontSize","fontFamily","lineheight","lineHeight","fontsconfig"],"mappings":"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","sourcesContent":["import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  &:active,\\n  &:focus,\\n  &:hover {\\n    outline: none;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { colors } from '@vds-core/theme';\nimport TypographyConfig from '../../typographyConfig';\nimport defaultConfig from './config';\nimport fontColorPropType from '../../util/fontColorPropType';\nimport { Typography } from '../Typography';\nimport { withVDSManager } from '@vds-core/utilities';\nvar propTypes = {\n  /**\n   * Primitive used for the component.\n   */\n  primitive: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'span', 'p']),\n\n  /**\n   * Viewport the font styling is based on. Desktop and tablet are the same size.\n   */\n  viewport: PropTypes.oneOf(['desktop', 'mobile', 'tablet']),\n\n  /**\n   * Size of the typescale that will be used.\n   */\n  size: PropTypes.oneOf(['XSmall', 'extraSmall', 'small', 'medium', 'large', 'extraLarge', 'extraExtraLarge', 'XLarge', '2XLarge']),\n\n  /**\n   * Content that will be passed to the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Color of the text.\n   */\n  color: fontColorPropType,\n\n  /**\n   * @ignore\n   */\n  bold: PropTypes.bool,\n\n  /**\n   * Allows for specific typescale to be passed to override global config.\n   */\n  typescale: PropTypes.oneOf(['VDS', 'MVP', 'Marketing']),\n\n  /**\n   * If the theme object contains the `typescale` key and no typescale prop was passed global typescale is overriden by theme.\n   */\n  theme: PropTypes.object,\n\n  /**\n   * The tabIndex of the text.\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  config: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  getFontWeight: PropTypes.func,\n\n  /**\n   * Assigns an Id to the component\n   */\n  id: PropTypes.string,\n\n  /**\n   * Adds an aria-labelledby attribute to the component\n   */\n  ariaLabelledBy: PropTypes.string\n};\nvar defaultProps = {\n  config: defaultConfig,\n  viewport: 'desktop',\n  size: 'small',\n  children: null,\n  color: colors.black,\n  bold: true,\n  getFontWeight: getTitleFontWeight\n};\nvar primitiveMap = {\n  extraSmall: 'span',\n  small: 'h5',\n  medium: 'h4',\n  large: 'h3',\n  extraLarge: 'h2',\n  extraExtraLarge: 'h1'\n};\nvar StyledTitle = /*#__PURE__*/styled(Typography).withConfig({\n  displayName: \"StyledTitle\",\n  componentId: \"sc-155xzr0-0\"\n})(_templateObject());\n\nfunction getTitleFontWeight(typescale, bold, size) {\n  !bold && size !== 'medium' && console.warn('Warning: `bold` prop can only be false when `size` = `medium`');\n\n  switch (typescale) {\n    case 'MVP':\n      return !bold && size === 'medium' ? '400' : '750';\n\n    case 'VDS' || 'Marketing':\n    default:\n      return !bold && size === 'medium' ? 'normal' : 'bold';\n  }\n}\n\nvar Title = function Title(props) {\n  var children = props.children,\n      primitiveProp = props.primitive,\n      viewport = props.viewport,\n      size = props.size,\n      color = props.color,\n      bold = props.bold,\n      typescale = props.typescale,\n      theme = props.theme,\n      tabIndex = props.tabIndex,\n      config = props.config,\n      getFontWeight = props.getFontWeight,\n      fontsConfigProp = props.fontsConfig,\n      ariaLabel = props.ariaLabel,\n      id = props.id,\n      ariaLabelledBy = props.ariaLabelledBy;\n  var // What typescale is being used for configuration\n  typescaleToUse = typescale ? typescale : theme && theme.typescale ? theme.typescale : TypographyConfig.getTypescale(),\n      viewportToUse = viewport === 'mobile' ? 'mobile' : 'desktop',\n      // What is the specific font configuration we are using\n  fontConfig = config[typescaleToUse][viewportToUse][size],\n      fontWeight = getFontWeight(typescaleToUse, bold, size);\n\n  function _setPrimitive() {\n    if (size) {\n      return primitiveMap[size];\n    } else {\n      return 'h5';\n    }\n  }\n\n  var primitive = primitiveProp ? primitiveProp : _setPrimitive();\n  return /*#__PURE__*/React.createElement(StyledTitle, {\n    fontSize: fontConfig.fontSize,\n    fontWeight: fontWeight,\n    fontFamily: fontConfig.fontFamily,\n    lineheight: fontConfig.lineHeight,\n    primitive: primitive,\n    color: color,\n    tabIndex: tabIndex,\n    \"aria-hidden\": tabIndex < 0,\n    fontsconfig: fontsConfigProp,\n    \"aria-label\": ariaLabel,\n    id: id,\n    \"aria-labelledby\": ariaLabelledBy\n  }, children);\n};\n\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\nexport default withVDSManager(Title);"]},"metadata":{},"sourceType":"module"}