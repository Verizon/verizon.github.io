{"ast":null,"code":"/*\n *          __        ___\n *    _____/ /___  __/ (_)____\n *   / ___/ __/ / / / / / ___/\n *  (__  ) /_/ /_/ / / (__  )\n * /____/\\__/\\__, /_/_/____/\n *          /____/\n *\n * light - weight css preprocessor @licence MIT\n */\n(function (factory) {\n  /* eslint-disable */\n  typeof exports === 'object' && typeof module !== 'undefined' ? module['exports'] = factory(null) : typeof define === 'function' && define['amd'] ? define(factory(null)) : window['stylis'] = factory(null);\n})(\n/** @param {*=} options */\nfunction factory(options) {\n  /* eslint-disable */\n  'use strict';\n  /**\n   * Notes\n   *\n   * The ['<method name>'] pattern is used to support closure compiler\n   * the jsdoc signatures are also used to the same effect\n   *\n   * ----\n   *\n   * int + int + int === n4 [faster]\n   *\n   * vs\n   *\n   * int === n1 && int === n2 && int === n3\n   *\n   * ----\n   *\n   * switch (int) { case ints...} [faster]\n   *\n   * vs\n   *\n   * if (int == 1 && int === 2 ...)\n   *\n   * ----\n   *\n   * The (first*n1 + second*n2 + third*n3) format used in the property parser\n   * is a simple way to hash the sequence of characters\n   * taking into account the index they occur in\n   * since any number of 3 character sequences could produce duplicates.\n   *\n   * On the other hand sequences that are directly tied to the index of the character\n   * resolve a far more accurate measure, it's also faster\n   * to evaluate one condition in a switch statement\n   * than three in an if statement regardless of the added math.\n   *\n   * This allows the vendor prefixer to be both small and fast.\n   */\n\n  var nullptn = /^\\0+/g;\n  /* matches leading null characters */\n\n  var formatptn = /[\\0\\r\\f]/g;\n  /* matches new line, null and formfeed characters */\n\n  var colonptn = /: */g;\n  /* splits animation rules */\n\n  var cursorptn = /zoo|gra/;\n  /* assert cursor varient */\n\n  var transformptn = /([,: ])(transform)/g;\n  /* vendor prefix transform, older webkit */\n\n  var animationptn = /,+\\s*(?![^(]*[)])/g;\n  /* splits multiple shorthand notation animations */\n\n  var propertiesptn = / +\\s*(?![^(]*[)])/g;\n  /* animation properties */\n\n  var elementptn = / *[\\0] */g;\n  /* selector elements */\n\n  var selectorptn = /,\\r+?/g;\n  /* splits selectors */\n\n  var andptn = /([\\t\\r\\n ])*\\f?&/g;\n  /* match & */\n\n  var escapeptn = /:global\\(((?:[^\\(\\)\\[\\]]*|\\[.*\\]|\\([^\\(\\)]*\\))*)\\)/g;\n  /* matches :global(.*) */\n\n  var invalidptn = /\\W+/g;\n  /* removes invalid characters from keyframes */\n\n  var keyframeptn = /@(k\\w+)\\s*(\\S*)\\s*/;\n  /* matches @keyframes $1 */\n\n  var plcholdrptn = /::(place)/g;\n  /* match ::placeholder varient */\n\n  var readonlyptn = /:(read-only)/g;\n  /* match :read-only varient */\n\n  var beforeptn = /\\s+(?=[{\\];=:>])/g;\n  /* matches \\s before ] ; = : */\n\n  var afterptn = /([[}=:>])\\s+/g;\n  /* matches \\s after characters [ } = : */\n\n  var tailptn = /(\\{[^{]+?);(?=\\})/g;\n  /* matches tail semi-colons ;} */\n\n  var whiteptn = /\\s{2,}/g;\n  /* matches repeating whitespace */\n\n  var pseudoptn = /([^\\(])(:+) */g;\n  /* pseudo element */\n\n  var writingptn = /[svh]\\w+-[tblr]{2}/;\n  /* match writing mode property values */\n\n  var gradientptn = /([\\w-]+t\\()/g;\n  /* match *gradient property */\n\n  var supportsptn = /\\(\\s*(.*)\\s*\\)/g;\n  /* match supports (groups) */\n\n  var propertyptn = /([\\s\\S]*?);/g;\n  /* match properties leading semicolon */\n\n  var selfptn = /-self|flex-/g;\n  /* match flex- and -self in align-self: flex-*; */\n\n  var pseudofmt = /[^]*?(:[rp][el]a[\\w-]+)[^]*/;\n  /* extrats :readonly or :placholder from selector */\n\n  var trimptn = /[ \\t]+$/;\n  /* match tail whitspace */\n\n  var dimensionptn = /stretch|:\\s*\\w+\\-(?:conte|avail)/;\n  /* match max/min/fit-content, fill-available */\n\n  var imgsrcptn = /([^-])(image-set\\()/;\n  /* vendors */\n\n  var webkit = '-webkit-';\n  var moz = '-moz-';\n  var ms = '-ms-';\n  /* character codes */\n\n  var SEMICOLON = 59;\n  /* ; */\n\n  var CLOSEBRACES = 125;\n  /* } */\n\n  var OPENBRACES = 123;\n  /* { */\n\n  var OPENPARENTHESES = 40;\n  /* ( */\n\n  var CLOSEPARENTHESES = 41;\n  /* ) */\n\n  var OPENBRACKET = 91;\n  /* [ */\n\n  var CLOSEBRACKET = 93;\n  /* ] */\n\n  var NEWLINE = 10;\n  /* \\n */\n\n  var CARRIAGE = 13;\n  /* \\r */\n\n  var TAB = 9;\n  /* \\t */\n\n  var AT = 64;\n  /* @ */\n\n  var SPACE = 32;\n  /*   */\n\n  var AND = 38;\n  /* & */\n\n  var DASH = 45;\n  /* - */\n\n  var UNDERSCORE = 95;\n  /* _ */\n\n  var STAR = 42;\n  /* * */\n\n  var COMMA = 44;\n  /* , */\n\n  var COLON = 58;\n  /* : */\n\n  var SINGLEQUOTE = 39;\n  /* ' */\n\n  var DOUBLEQUOTE = 34;\n  /* \" */\n\n  var FOWARDSLASH = 47;\n  /* / */\n\n  var GREATERTHAN = 62;\n  /* > */\n\n  var PLUS = 43;\n  /* + */\n\n  var TILDE = 126;\n  /* ~ */\n\n  var NULL = 0;\n  /* \\0 */\n\n  var FORMFEED = 12;\n  /* \\f */\n\n  var VERTICALTAB = 11;\n  /* \\v */\n\n  /* special identifiers */\n\n  var KEYFRAME = 107;\n  /* k */\n\n  var MEDIA = 109;\n  /* m */\n\n  var SUPPORTS = 115;\n  /* s */\n\n  var PLACEHOLDER = 112;\n  /* p */\n\n  var READONLY = 111;\n  /* o */\n\n  var IMPORT = 105;\n  /* <at>i */\n\n  var CHARSET = 99;\n  /* <at>c */\n\n  var DOCUMENT = 100;\n  /* <at>d */\n\n  var PAGE = 112;\n  /* <at>p */\n\n  var column = 1;\n  /* current column */\n\n  var line = 1;\n  /* current line numebr */\n\n  var pattern = 0;\n  /* :pattern */\n\n  var cascade = 1;\n  /* #id h1 h2 vs h1#id h2#id  */\n\n  var prefix = 1;\n  /* vendor prefix */\n\n  var escape = 1;\n  /* escape :global() pattern */\n\n  var compress = 0;\n  /* compress output */\n\n  var semicolon = 0;\n  /* no/semicolon option */\n\n  var preserve = 0;\n  /* preserve empty selectors */\n\n  /* empty reference */\n\n  var array = [];\n  /* plugins */\n\n  var plugins = [];\n  var plugged = 0;\n  var should = null;\n  /* plugin context */\n\n  var POSTS = -2;\n  var PREPS = -1;\n  var UNKWN = 0;\n  var PROPS = 1;\n  var BLCKS = 2;\n  var ATRUL = 3;\n  /* plugin newline context */\n\n  var unkwn = 0;\n  /* keyframe animation */\n\n  var keyed = 1;\n  var key = '';\n  /* selector namespace */\n\n  var nscopealt = '';\n  var nscope = '';\n  /**\n   * Compile\n   *\n   * @param {Array<string>} parent\n   * @param {Array<string>} current\n   * @param {string} body\n   * @param {number} id\n   * @param {number} depth\n   * @return {string}\n   */\n\n  function compile(parent, current, body, id, depth) {\n    var bracket = 0;\n    /* brackets [] */\n\n    var comment = 0;\n    /* comments /* // or /* */\n\n    var parentheses = 0;\n    /* functions () */\n\n    var quote = 0;\n    /* quotes '', \"\" */\n\n    var first = 0;\n    /* first character code */\n\n    var second = 0;\n    /* second character code */\n\n    var code = 0;\n    /* current character code */\n\n    var tail = 0;\n    /* previous character code */\n\n    var trail = 0;\n    /* character before previous code */\n\n    var peak = 0;\n    /* previous non-whitespace code */\n\n    var counter = 0;\n    /* count sequence termination */\n\n    var context = 0;\n    /* track current context */\n\n    var atrule = 0;\n    /* track @at-rule context */\n\n    var pseudo = 0;\n    /* track pseudo token index */\n\n    var caret = 0;\n    /* current character index */\n\n    var format = 0;\n    /* control character formating context */\n\n    var insert = 0;\n    /* auto semicolon insertion */\n\n    var invert = 0;\n    /* inverted selector pattern */\n\n    var length = 0;\n    /* generic length address */\n\n    var eof = body.length;\n    /* end of file(length) */\n\n    var eol = eof - 1;\n    /* end of file(characters) */\n\n    var char = '';\n    /* current character */\n\n    var chars = '';\n    /* current buffer of characters */\n\n    var child = '';\n    /* next buffer of characters */\n\n    var out = '';\n    /* compiled body */\n\n    var children = '';\n    /* compiled children */\n\n    var flat = '';\n    /* compiled leafs */\n\n    var selector;\n    /* generic selector address */\n\n    var result;\n    /* generic address */\n    // ...build body\n\n    while (caret < eof) {\n      code = body.charCodeAt(caret); // eof varient\n\n      if (caret === eol) {\n        // last character + noop context, add synthetic padding for noop context to terminate\n        if (comment + quote + parentheses + bracket !== 0) {\n          if (comment !== 0) {\n            code = comment === FOWARDSLASH ? NEWLINE : FOWARDSLASH;\n          }\n\n          quote = parentheses = bracket = 0;\n          eof++;\n          eol++;\n        }\n      }\n\n      if (comment + quote + parentheses + bracket === 0) {\n        // eof varient\n        if (caret === eol) {\n          if (format > 0) {\n            chars = chars.replace(formatptn, '');\n          }\n\n          if (chars.trim().length > 0) {\n            switch (code) {\n              case SPACE:\n              case TAB:\n              case SEMICOLON:\n              case CARRIAGE:\n              case NEWLINE:\n                {\n                  break;\n                }\n\n              default:\n                {\n                  chars += body.charAt(caret);\n                }\n            }\n\n            code = SEMICOLON;\n          }\n        } // auto semicolon insertion\n\n\n        if (insert === 1) {\n          switch (code) {\n            // false flags\n            case OPENBRACES:\n            case CLOSEBRACES:\n            case SEMICOLON:\n            case DOUBLEQUOTE:\n            case SINGLEQUOTE:\n            case OPENPARENTHESES:\n            case CLOSEPARENTHESES:\n            case COMMA:\n              {\n                insert = 0;\n              }\n            // ignore\n\n            case TAB:\n            case CARRIAGE:\n            case NEWLINE:\n            case SPACE:\n              {\n                break;\n              }\n            // valid\n\n            default:\n              {\n                insert = 0;\n                length = caret;\n                first = code;\n                caret--;\n                code = SEMICOLON;\n\n                while (length < eof) {\n                  switch (body.charCodeAt(length++)) {\n                    case NEWLINE:\n                    case CARRIAGE:\n                    case SEMICOLON:\n                      {\n                        ++caret;\n                        code = first;\n                        length = eof;\n                        break;\n                      }\n\n                    case COLON:\n                      {\n                        if (format > 0) {\n                          ++caret;\n                          code = first;\n                        }\n                      }\n\n                    case OPENBRACES:\n                      {\n                        length = eof;\n                      }\n                  }\n                }\n              }\n          }\n        } // token varient\n\n\n        switch (code) {\n          case OPENBRACES:\n            {\n              chars = chars.trim();\n              first = chars.charCodeAt(0);\n              counter = 1;\n              length = ++caret;\n\n              while (caret < eof) {\n                switch (code = body.charCodeAt(caret)) {\n                  case OPENBRACES:\n                    {\n                      counter++;\n                      break;\n                    }\n\n                  case CLOSEBRACES:\n                    {\n                      counter--;\n                      break;\n                    }\n\n                  case FOWARDSLASH:\n                    {\n                      switch (second = body.charCodeAt(caret + 1)) {\n                        // /*, //\n                        case STAR:\n                        case FOWARDSLASH:\n                          {\n                            caret = delimited(second, caret, eol, body);\n                          }\n                      }\n\n                      break;\n                    }\n                  // given \"[\" === 91 & \"]\" === 93 hence forth 91 + 1 + 1 === 93\n\n                  case OPENBRACKET:\n                    {\n                      code++;\n                    }\n                  // given \"(\" === 40 & \")\" === 41 hence forth 40 + 1 === 41\n\n                  case OPENPARENTHESES:\n                    {\n                      code++;\n                    }\n                  // quote tail delimiter is identical to the head delimiter hence noop,\n                  // fallthrough clauses have been shifted to the correct tail delimiter\n\n                  case DOUBLEQUOTE:\n                  case SINGLEQUOTE:\n                    {\n                      while (caret++ < eol) {\n                        if (body.charCodeAt(caret) === code) {\n                          break;\n                        }\n                      }\n                    }\n                }\n\n                if (counter === 0) {\n                  break;\n                }\n\n                caret++;\n              }\n\n              child = body.substring(length, caret);\n\n              if (first === NULL) {\n                first = (chars = chars.replace(nullptn, '').trim()).charCodeAt(0);\n              }\n\n              switch (first) {\n                // @at-rule\n                case AT:\n                  {\n                    if (format > 0) {\n                      chars = chars.replace(formatptn, '');\n                    }\n\n                    second = chars.charCodeAt(1);\n\n                    switch (second) {\n                      case DOCUMENT:\n                      case MEDIA:\n                      case SUPPORTS:\n                      case DASH:\n                        {\n                          selector = current;\n                          break;\n                        }\n\n                      default:\n                        {\n                          selector = array;\n                        }\n                    }\n\n                    child = compile(current, selector, child, second, depth + 1);\n                    length = child.length; // preserve empty @at-rule\n\n                    if (preserve > 0 && length === 0) {\n                      length = chars.length;\n                    } // execute plugins, @at-rule context\n\n\n                    if (plugged > 0) {\n                      selector = select(array, chars, invert);\n                      result = proxy(ATRUL, child, selector, current, line, column, length, second, depth, id);\n                      chars = selector.join('');\n\n                      if (result !== void 0) {\n                        if ((length = (child = result.trim()).length) === 0) {\n                          second = 0;\n                          child = '';\n                        }\n                      }\n                    }\n\n                    if (length > 0) {\n                      switch (second) {\n                        case SUPPORTS:\n                          {\n                            chars = chars.replace(supportsptn, supports);\n                          }\n\n                        case DOCUMENT:\n                        case MEDIA:\n                        case DASH:\n                          {\n                            child = chars + '{' + child + '}';\n                            break;\n                          }\n\n                        case KEYFRAME:\n                          {\n                            chars = chars.replace(keyframeptn, '$1 $2' + (keyed > 0 ? key : ''));\n                            child = chars + '{' + child + '}';\n\n                            if (prefix === 1 || prefix === 2 && vendor('@' + child, 3)) {\n                              child = '@' + webkit + child + '@' + child;\n                            } else {\n                              child = '@' + child;\n                            }\n\n                            break;\n                          }\n\n                        default:\n                          {\n                            child = chars + child;\n\n                            if (id === PAGE) {\n                              child = (out += child, '');\n                            }\n                          }\n                      }\n                    } else {\n                      child = '';\n                    }\n\n                    break;\n                  }\n                // selector\n\n                default:\n                  {\n                    child = compile(current, select(current, chars, invert), child, id, depth + 1);\n                  }\n              }\n\n              children += child; // reset\n\n              context = 0;\n              insert = 0;\n              pseudo = 0;\n              format = 0;\n              invert = 0;\n              atrule = 0;\n              chars = '';\n              child = '';\n              code = body.charCodeAt(++caret);\n              break;\n            }\n\n          case CLOSEBRACES:\n          case SEMICOLON:\n            {\n              chars = (format > 0 ? chars.replace(formatptn, '') : chars).trim();\n\n              if ((length = chars.length) > 1) {\n                // monkey-patch missing colon\n                if (pseudo === 0) {\n                  first = chars.charCodeAt(0); // first character is a letter or dash, buffer has a space character\n\n                  if (first === DASH || first > 96 && first < 123) {\n                    length = (chars = chars.replace(' ', ':')).length;\n                  }\n                } // execute plugins, property context\n\n\n                if (plugged > 0) {\n                  if ((result = proxy(PROPS, chars, current, parent, line, column, out.length, id, depth, id)) !== void 0) {\n                    if ((length = (chars = result.trim()).length) === 0) {\n                      chars = '\\0\\0';\n                    }\n                  }\n                }\n\n                first = chars.charCodeAt(0);\n                second = chars.charCodeAt(1);\n\n                switch (first) {\n                  case NULL:\n                    {\n                      break;\n                    }\n\n                  case AT:\n                    {\n                      if (second === IMPORT || second === CHARSET) {\n                        flat += chars + body.charAt(caret);\n                        break;\n                      }\n                    }\n\n                  default:\n                    {\n                      if (chars.charCodeAt(length - 1) === COLON) {\n                        break;\n                      }\n\n                      out += property(chars, first, second, chars.charCodeAt(2));\n                    }\n                }\n              } // reset\n\n\n              context = 0;\n              insert = 0;\n              pseudo = 0;\n              format = 0;\n              invert = 0;\n              chars = '';\n              code = body.charCodeAt(++caret);\n              break;\n            }\n        }\n      } // parse characters\n\n\n      switch (code) {\n        case CARRIAGE:\n        case NEWLINE:\n          {\n            // auto insert semicolon\n            if (comment + quote + parentheses + bracket + semicolon === 0) {\n              // valid non-whitespace characters that\n              // may precede a newline\n              switch (peak) {\n                case CLOSEPARENTHESES:\n                case SINGLEQUOTE:\n                case DOUBLEQUOTE:\n                case AT:\n                case TILDE:\n                case GREATERTHAN:\n                case STAR:\n                case PLUS:\n                case FOWARDSLASH:\n                case DASH:\n                case COLON:\n                case COMMA:\n                case SEMICOLON:\n                case OPENBRACES:\n                case CLOSEBRACES:\n                  {\n                    break;\n                  }\n\n                default:\n                  {\n                    // current buffer has a colon\n                    if (pseudo > 0) {\n                      insert = 1;\n                    }\n                  }\n              }\n            } // terminate line comment\n\n\n            if (comment === FOWARDSLASH) {\n              comment = 0;\n            } else if (cascade + context === 0 && id !== KEYFRAME && chars.length > 0) {\n              format = 1;\n              chars += '\\0';\n            } // execute plugins, newline context\n\n\n            if (plugged * unkwn > 0) {\n              proxy(UNKWN, chars, current, parent, line, column, out.length, id, depth, id);\n            } // next line, reset column position\n\n\n            column = 1;\n            line++;\n            break;\n          }\n\n        case SEMICOLON:\n        case CLOSEBRACES:\n          {\n            if (comment + quote + parentheses + bracket === 0) {\n              column++;\n              break;\n            }\n          }\n\n        default:\n          {\n            // increment column position\n            column++; // current character\n\n            char = body.charAt(caret); // remove comments, escape functions, strings, attributes and prepare selectors\n\n            switch (code) {\n              case TAB:\n              case SPACE:\n                {\n                  if (quote + bracket + comment === 0) {\n                    switch (tail) {\n                      case COMMA:\n                      case COLON:\n                      case TAB:\n                      case SPACE:\n                        {\n                          char = '';\n                          break;\n                        }\n\n                      default:\n                        {\n                          if (code !== SPACE) {\n                            char = ' ';\n                          }\n                        }\n                    }\n                  }\n\n                  break;\n                }\n              // escape breaking control characters\n\n              case NULL:\n                {\n                  char = '\\\\0';\n                  break;\n                }\n\n              case FORMFEED:\n                {\n                  char = '\\\\f';\n                  break;\n                }\n\n              case VERTICALTAB:\n                {\n                  char = '\\\\v';\n                  break;\n                }\n              // &\n\n              case AND:\n                {\n                  // inverted selector pattern i.e html &\n                  if (quote + comment + bracket === 0 && cascade > 0) {\n                    invert = 1;\n                    format = 1;\n                    char = '\\f' + char;\n                  }\n\n                  break;\n                }\n              // ::p<l>aceholder, l\n              // :read-on<l>y, l\n\n              case 108:\n                {\n                  if (quote + comment + bracket + pattern === 0 && pseudo > 0) {\n                    switch (caret - pseudo) {\n                      // ::placeholder\n                      case 2:\n                        {\n                          if (tail === PLACEHOLDER && body.charCodeAt(caret - 3) === COLON) {\n                            pattern = tail;\n                          }\n                        }\n                      // :read-only\n\n                      case 8:\n                        {\n                          if (trail === READONLY) {\n                            pattern = trail;\n                          }\n                        }\n                    }\n                  }\n\n                  break;\n                }\n              // :<pattern>\n\n              case COLON:\n                {\n                  if (quote + comment + bracket === 0) {\n                    pseudo = caret;\n                  }\n\n                  break;\n                }\n              // selectors\n\n              case COMMA:\n                {\n                  if (comment + parentheses + quote + bracket === 0) {\n                    format = 1;\n                    char += '\\r';\n                  }\n\n                  break;\n                }\n              // quotes\n\n              case DOUBLEQUOTE:\n              case SINGLEQUOTE:\n                {\n                  if (comment === 0) {\n                    quote = quote === code ? 0 : quote === 0 ? code : quote;\n                  }\n\n                  break;\n                }\n              // attributes\n\n              case OPENBRACKET:\n                {\n                  if (quote + comment + parentheses === 0) {\n                    bracket++;\n                  }\n\n                  break;\n                }\n\n              case CLOSEBRACKET:\n                {\n                  if (quote + comment + parentheses === 0) {\n                    bracket--;\n                  }\n\n                  break;\n                }\n              // functions\n\n              case CLOSEPARENTHESES:\n                {\n                  if (quote + comment + bracket === 0) {\n                    parentheses--;\n                  }\n\n                  break;\n                }\n\n              case OPENPARENTHESES:\n                {\n                  if (quote + comment + bracket === 0) {\n                    if (context === 0) {\n                      switch (tail * 2 + trail * 3) {\n                        // :matches\n                        case 533:\n                          {\n                            break;\n                          }\n                        // :global, :not, :nth-child etc...\n\n                        default:\n                          {\n                            counter = 0;\n                            context = 1;\n                          }\n                      }\n                    }\n\n                    parentheses++;\n                  }\n\n                  break;\n                }\n\n              case AT:\n                {\n                  if (comment + parentheses + quote + bracket + pseudo + atrule === 0) {\n                    atrule = 1;\n                  }\n\n                  break;\n                }\n              // block/line comments\n\n              case STAR:\n              case FOWARDSLASH:\n                {\n                  if (quote + bracket + parentheses > 0) {\n                    break;\n                  }\n\n                  switch (comment) {\n                    // initialize line/block comment context\n                    case 0:\n                      {\n                        switch (code * 2 + body.charCodeAt(caret + 1) * 3) {\n                          // //\n                          case 235:\n                            {\n                              comment = FOWARDSLASH;\n                              break;\n                            }\n                          // /*\n\n                          case 220:\n                            {\n                              length = caret;\n                              comment = STAR;\n                              break;\n                            }\n                        }\n\n                        break;\n                      }\n                    // end block comment context\n\n                    case STAR:\n                      {\n                        if (code === FOWARDSLASH && tail === STAR && length + 2 !== caret) {\n                          // /*<!> ... */, !\n                          if (body.charCodeAt(length + 2) === 33) {\n                            out += body.substring(length, caret + 1);\n                          }\n\n                          char = '';\n                          comment = 0;\n                        }\n                      }\n                  }\n                }\n            } // ignore comment blocks\n\n\n            if (comment === 0) {\n              // aggressive isolation mode, divide each individual selector\n              // including selectors in :not function but excluding selectors in :global function\n              if (cascade + quote + bracket + atrule === 0 && id !== KEYFRAME && code !== SEMICOLON) {\n                switch (code) {\n                  case COMMA:\n                  case TILDE:\n                  case GREATERTHAN:\n                  case PLUS:\n                  case CLOSEPARENTHESES:\n                  case OPENPARENTHESES:\n                    {\n                      if (context === 0) {\n                        // outside of an isolated context i.e nth-child(<...>)\n                        switch (tail) {\n                          case TAB:\n                          case SPACE:\n                          case NEWLINE:\n                          case CARRIAGE:\n                            {\n                              char = char + '\\0';\n                              break;\n                            }\n\n                          default:\n                            {\n                              char = '\\0' + char + (code === COMMA ? '' : '\\0');\n                            }\n                        }\n\n                        format = 1;\n                      } else {\n                        // within an isolated context, sleep untill it's terminated\n                        switch (code) {\n                          case OPENPARENTHESES:\n                            {\n                              // :globa<l>(\n                              if (pseudo + 7 === caret && tail === 108) {\n                                pseudo = 0;\n                              }\n\n                              context = ++counter;\n                              break;\n                            }\n\n                          case CLOSEPARENTHESES:\n                            {\n                              if ((context = --counter) === 0) {\n                                format = 1;\n                                char += '\\0';\n                              }\n\n                              break;\n                            }\n                        }\n                      }\n\n                      break;\n                    }\n\n                  case TAB:\n                  case SPACE:\n                    {\n                      switch (tail) {\n                        case NULL:\n                        case OPENBRACES:\n                        case CLOSEBRACES:\n                        case SEMICOLON:\n                        case COMMA:\n                        case FORMFEED:\n                        case TAB:\n                        case SPACE:\n                        case NEWLINE:\n                        case CARRIAGE:\n                          {\n                            break;\n                          }\n\n                        default:\n                          {\n                            // ignore in isolated contexts\n                            if (context === 0) {\n                              format = 1;\n                              char += '\\0';\n                            }\n                          }\n                      }\n                    }\n                }\n              } // concat buffer of characters\n\n\n              chars += char; // previous non-whitespace character code\n\n              if (code !== SPACE && code !== TAB) {\n                peak = code;\n              }\n            }\n          }\n      } // tail character codes\n\n\n      trail = tail;\n      tail = code; // visit every character\n\n      caret++;\n    }\n\n    length = out.length; // preserve empty selector\n\n    if (preserve > 0) {\n      if (length === 0 && children.length === 0 && current[0].length === 0 === false) {\n        if (id !== MEDIA || current.length === 1 && (cascade > 0 ? nscopealt : nscope) === current[0]) {\n          length = current.join(',').length + 2;\n        }\n      }\n    }\n\n    if (length > 0) {\n      // cascade isolation mode?\n      selector = cascade === 0 && id !== KEYFRAME ? isolate(current) : current; // execute plugins, block context\n\n      if (plugged > 0) {\n        result = proxy(BLCKS, out, selector, parent, line, column, length, id, depth, id);\n\n        if (result !== void 0 && (out = result).length === 0) {\n          return flat + out + children;\n        }\n      }\n\n      out = selector.join(',') + '{' + out + '}';\n\n      if (prefix * pattern !== 0) {\n        if (prefix === 2 && !vendor(out, 2)) pattern = 0;\n\n        switch (pattern) {\n          // ::read-only\n          case READONLY:\n            {\n              out = out.replace(readonlyptn, ':' + moz + '$1') + out;\n              break;\n            }\n          // ::placeholder\n\n          case PLACEHOLDER:\n            {\n              out = out.replace(plcholdrptn, '::' + webkit + 'input-$1') + out.replace(plcholdrptn, '::' + moz + '$1') + out.replace(plcholdrptn, ':' + ms + 'input-$1') + out;\n              break;\n            }\n        }\n\n        pattern = 0;\n      }\n    }\n\n    return flat + out + children;\n  }\n  /**\n   * Select\n   *\n   * @param {Array<string>} parent\n   * @param {string} current\n   * @param {number} invert\n   * @return {Array<string>}\n   */\n\n\n  function select(parent, current, invert) {\n    var selectors = current.trim().split(selectorptn);\n    var out = selectors;\n    var length = selectors.length;\n    var l = parent.length;\n\n    switch (l) {\n      // 0-1 parent selectors\n      case 0:\n      case 1:\n        {\n          for (var i = 0, selector = l === 0 ? '' : parent[0] + ' '; i < length; ++i) {\n            out[i] = scope(selector, out[i], invert, l).trim();\n          }\n\n          break;\n        }\n      // >2 parent selectors, nested\n\n      default:\n        {\n          for (var i = 0, j = 0, out = []; i < length; ++i) {\n            for (var k = 0; k < l; ++k) {\n              out[j++] = scope(parent[k] + ' ', selectors[i], invert, l).trim();\n            }\n          }\n        }\n    }\n\n    return out;\n  }\n  /**\n   * Scope\n   *\n   * @param {string} parent\n   * @param {string} current\n   * @param {number} invert\n   * @param {number} level\n   * @return {string}\n   */\n\n\n  function scope(parent, current, invert, level) {\n    var selector = current;\n    var code = selector.charCodeAt(0); // trim leading whitespace\n\n    if (code < 33) {\n      code = (selector = selector.trim()).charCodeAt(0);\n    }\n\n    switch (code) {\n      // &\n      case AND:\n        {\n          switch (cascade + level) {\n            case 0:\n            case 1:\n              {\n                if (parent.trim().length === 0) {\n                  break;\n                }\n              }\n\n            default:\n              {\n                return selector.replace(andptn, '$1' + parent.trim());\n              }\n          }\n\n          break;\n        }\n      // :\n\n      case COLON:\n        {\n          switch (selector.charCodeAt(1)) {\n            // g in :global\n            case 103:\n              {\n                if (escape > 0 && cascade > 0) {\n                  return selector.replace(escapeptn, '$1').replace(andptn, '$1' + nscope);\n                }\n\n                break;\n              }\n\n            default:\n              {\n                // :hover\n                return parent.trim() + selector.replace(andptn, '$1' + parent.trim());\n              }\n          }\n        }\n\n      default:\n        {\n          // html &\n          if (invert * cascade > 0 && selector.indexOf('\\f') > 0) {\n            return selector.replace(andptn, (parent.charCodeAt(0) === COLON ? '' : '$1') + parent.trim());\n          }\n        }\n    }\n\n    return parent + selector;\n  }\n  /**\n   * Property\n   *\n   * @param {string} input\n   * @param {number} first\n   * @param {number} second\n   * @param {number} third\n   * @return {string}\n   */\n\n\n  function property(input, first, second, third) {\n    var index = 0;\n    var out = input + ';';\n    var hash = first * 2 + second * 3 + third * 4;\n    var cache; // animation: a, n, i characters\n\n    if (hash === 944) {\n      return animation(out);\n    } else if (prefix === 0 || prefix === 2 && !vendor(out, 1)) {\n      return out;\n    } // vendor prefix\n\n\n    switch (hash) {\n      // text-decoration/text-size-adjust/text-shadow/text-align/text-transform: t, e, x\n      case 1015:\n        {\n          // text-shadow/text-align/text-transform, a\n          return out.charCodeAt(10) === 97 ? webkit + out + out : out;\n        }\n      // filter/fill f, i, l\n\n      case 951:\n        {\n          // filter, t\n          return out.charCodeAt(3) === 116 ? webkit + out + out : out;\n        }\n      // color/column, c, o, l\n\n      case 963:\n        {\n          // column, n\n          return out.charCodeAt(5) === 110 ? webkit + out + out : out;\n        }\n      // box-decoration-break, b, o, x\n\n      case 1009:\n        {\n          if (out.charCodeAt(4) !== 100) {\n            break;\n          }\n        }\n      // mask, m, a, s\n      // clip-path, c, l, i\n\n      case 969:\n      case 942:\n        {\n          return webkit + out + out;\n        }\n      // appearance: a, p, p\n\n      case 978:\n        {\n          return webkit + out + moz + out + out;\n        }\n      // hyphens: h, y, p\n      // user-select: u, s, e\n\n      case 1019:\n      case 983:\n        {\n          return webkit + out + moz + out + ms + out + out;\n        }\n      // background/backface-visibility, b, a, c\n\n      case 883:\n        {\n          // backface-visibility, -\n          if (out.charCodeAt(8) === DASH) {\n            return webkit + out + out;\n          } // image-set(...)\n\n\n          if (out.indexOf('image-set(', 11) > 0) {\n            return out.replace(imgsrcptn, '$1' + webkit + '$2') + out;\n          }\n\n          return out;\n        }\n      // flex: f, l, e\n\n      case 932:\n        {\n          if (out.charCodeAt(4) === DASH) {\n            switch (out.charCodeAt(5)) {\n              // flex-grow, g\n              case 103:\n                {\n                  return webkit + 'box-' + out.replace('-grow', '') + webkit + out + ms + out.replace('grow', 'positive') + out;\n                }\n              // flex-shrink, s\n\n              case 115:\n                {\n                  return webkit + out + ms + out.replace('shrink', 'negative') + out;\n                }\n              // flex-basis, b\n\n              case 98:\n                {\n                  return webkit + out + ms + out.replace('basis', 'preferred-size') + out;\n                }\n            }\n          }\n\n          return webkit + out + ms + out + out;\n        }\n      // order: o, r, d\n\n      case 964:\n        {\n          return webkit + out + ms + 'flex' + '-' + out + out;\n        }\n      // justify-items/justify-content, j, u, s\n\n      case 1023:\n        {\n          // justify-content, c\n          if (out.charCodeAt(8) !== 99) {\n            break;\n          }\n\n          cache = out.substring(out.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n          return webkit + 'box-pack' + cache + webkit + out + ms + 'flex-pack' + cache + out;\n        }\n      // cursor, c, u, r\n\n      case 1005:\n        {\n          return cursorptn.test(out) ? out.replace(colonptn, ':' + webkit) + out.replace(colonptn, ':' + moz) + out : out;\n        }\n      // writing-mode, w, r, i\n\n      case 1000:\n        {\n          cache = out.substring(13).trim();\n          index = cache.indexOf('-') + 1;\n\n          switch (cache.charCodeAt(0) + cache.charCodeAt(index)) {\n            // vertical-lr\n            case 226:\n              {\n                cache = out.replace(writingptn, 'tb');\n                break;\n              }\n            // vertical-rl\n\n            case 232:\n              {\n                cache = out.replace(writingptn, 'tb-rl');\n                break;\n              }\n            // horizontal-tb\n\n            case 220:\n              {\n                cache = out.replace(writingptn, 'lr');\n                break;\n              }\n\n            default:\n              {\n                return out;\n              }\n          }\n\n          return webkit + out + ms + cache + out;\n        }\n      // position: sticky\n\n      case 1017:\n        {\n          if (out.indexOf('sticky', 9) === -1) {\n            return out;\n          }\n        }\n      // display(flex/inline-flex/inline-box): d, i, s\n\n      case 975:\n        {\n          index = (out = input).length - 10;\n          cache = (out.charCodeAt(index) === 33 ? out.substring(0, index) : out).substring(input.indexOf(':', 7) + 1).trim();\n\n          switch (hash = cache.charCodeAt(0) + (cache.charCodeAt(7) | 0)) {\n            // inline-\n            case 203:\n              {\n                // inline-box\n                if (cache.charCodeAt(8) < 111) {\n                  break;\n                }\n              }\n            // inline-box/sticky\n\n            case 115:\n              {\n                out = out.replace(cache, webkit + cache) + ';' + out;\n                break;\n              }\n            // inline-flex\n            // flex\n\n            case 207:\n            case 102:\n              {\n                out = out.replace(cache, webkit + (hash > 102 ? 'inline-' : '') + 'box') + ';' + out.replace(cache, webkit + cache) + ';' + out.replace(cache, ms + cache + 'box') + ';' + out;\n              }\n          }\n\n          return out + ';';\n        }\n      // align-items, align-center, align-self: a, l, i, -\n\n      case 938:\n        {\n          if (out.charCodeAt(5) === DASH) {\n            switch (out.charCodeAt(6)) {\n              // align-items, i\n              case 105:\n                {\n                  cache = out.replace('-items', '');\n                  return webkit + out + webkit + 'box-' + cache + ms + 'flex-' + cache + out;\n                }\n              // align-self, s\n\n              case 115:\n                {\n                  return webkit + out + ms + 'flex-item-' + out.replace(selfptn, '') + out;\n                }\n              // align-content\n\n              default:\n                {\n                  return webkit + out + ms + 'flex-line-pack' + out.replace('align-content', '').replace(selfptn, '') + out;\n                }\n            }\n          }\n\n          break;\n        }\n      // min/max\n\n      case 973:\n      case 989:\n        {\n          // min-/max- height/width/block-size/inline-size\n          if (out.charCodeAt(3) !== DASH || out.charCodeAt(4) === 122) {\n            break;\n          }\n        }\n      // height/width: min-content / width: max-content\n\n      case 931:\n      case 953:\n        {\n          if (dimensionptn.test(input) === true) {\n            // stretch\n            if ((cache = input.substring(input.indexOf(':') + 1)).charCodeAt(0) === 115) return property(input.replace('stretch', 'fill-available'), first, second, third).replace(':fill-available', ':stretch');else return out.replace(cache, webkit + cache) + out.replace(cache, moz + cache.replace('fill-', '')) + out;\n          }\n\n          break;\n        }\n      // transform, transition: t, r, a\n\n      case 962:\n        {\n          out = webkit + out + (out.charCodeAt(5) === 102 ? ms + out : '') + out; // transitions\n\n          if (second + third === 211 && out.charCodeAt(13) === 105 && out.indexOf('transform', 10) > 0) {\n            return out.substring(0, out.indexOf(';', 27) + 1).replace(transformptn, '$1' + webkit + '$2') + out;\n          }\n\n          break;\n        }\n    }\n\n    return out;\n  }\n  /**\n   * Vendor\n   *\n   * @param {string} content\n   * @param {number} context\n   * @return {boolean}\n   */\n\n\n  function vendor(content, context) {\n    var index = content.indexOf(context === 1 ? ':' : '{');\n    var key = content.substring(0, context !== 3 ? index : 10);\n    var value = content.substring(index + 1, content.length - 1);\n    return should(context !== 2 ? key : key.replace(pseudofmt, '$1'), value, context);\n  }\n  /**\n   * Supports\n   *\n   * @param {string} match\n   * @param {string} group\n   * @return {string}\n   */\n\n\n  function supports(match, group) {\n    var out = property(group, group.charCodeAt(0), group.charCodeAt(1), group.charCodeAt(2));\n    return out !== group + ';' ? out.replace(propertyptn, ' or ($1)').substring(4) : '(' + group + ')';\n  }\n  /**\n   * Animation\n   *\n   * @param {string} input\n   * @return {string}\n   */\n\n\n  function animation(input) {\n    var length = input.length;\n    var index = input.indexOf(':', 9) + 1;\n    var declare = input.substring(0, index).trim();\n    var out = input.substring(index, length - 1).trim();\n\n    switch (input.charCodeAt(9) * keyed) {\n      case 0:\n        {\n          break;\n        }\n      // animation-*, -\n\n      case DASH:\n        {\n          // animation-name, n\n          if (input.charCodeAt(10) !== 110) {\n            break;\n          }\n        }\n      // animation/animation-name\n\n      default:\n        {\n          // split in case of multiple animations\n          var list = out.split((out = '', animationptn));\n\n          for (var i = 0, index = 0, length = list.length; i < length; index = 0, ++i) {\n            var value = list[i];\n            var items = value.split(propertiesptn);\n\n            while (value = items[index]) {\n              var peak = value.charCodeAt(0);\n\n              if (keyed === 1 && ( // letters\n              peak > AT && peak < 90 || peak > 96 && peak < 123 || peak === UNDERSCORE || // dash but not in sequence i.e --\n              peak === DASH && value.charCodeAt(1) !== DASH)) {\n                // not a number/function\n                switch (isNaN(parseFloat(value)) + (value.indexOf('(') !== -1)) {\n                  case 1:\n                    {\n                      switch (value) {\n                        // not a valid reserved keyword\n                        case 'infinite':\n                        case 'alternate':\n                        case 'backwards':\n                        case 'running':\n                        case 'normal':\n                        case 'forwards':\n                        case 'both':\n                        case 'none':\n                        case 'linear':\n                        case 'ease':\n                        case 'ease-in':\n                        case 'ease-out':\n                        case 'ease-in-out':\n                        case 'paused':\n                        case 'reverse':\n                        case 'alternate-reverse':\n                        case 'inherit':\n                        case 'initial':\n                        case 'unset':\n                        case 'step-start':\n                        case 'step-end':\n                          {\n                            break;\n                          }\n\n                        default:\n                          {\n                            value += key;\n                          }\n                      }\n                    }\n                }\n              }\n\n              items[index++] = value;\n            }\n\n            out += (i === 0 ? '' : ',') + items.join(' ');\n          }\n        }\n    }\n\n    out = declare + out + ';';\n    if (prefix === 1 || prefix === 2 && vendor(out, 1)) return webkit + out + out;\n    return out;\n  }\n  /**\n   * Isolate\n   *\n   * @param {Array<string>} current\n   */\n\n\n  function isolate(current) {\n    for (var i = 0, length = current.length, selector = Array(length), padding, element; i < length; ++i) {\n      // split individual elements in a selector i.e h1 h2 === [h1, h2]\n      var elements = current[i].split(elementptn);\n      var out = '';\n\n      for (var j = 0, size = 0, tail = 0, code = 0, l = elements.length; j < l; ++j) {\n        // empty element\n        if ((size = (element = elements[j]).length) === 0 && l > 1) {\n          continue;\n        }\n\n        tail = out.charCodeAt(out.length - 1);\n        code = element.charCodeAt(0);\n        padding = '';\n\n        if (j !== 0) {\n          // determine if we need padding\n          switch (tail) {\n            case STAR:\n            case TILDE:\n            case GREATERTHAN:\n            case PLUS:\n            case SPACE:\n            case OPENPARENTHESES:\n              {\n                break;\n              }\n\n            default:\n              {\n                padding = ' ';\n              }\n          }\n        }\n\n        switch (code) {\n          case AND:\n            {\n              element = padding + nscopealt;\n            }\n\n          case TILDE:\n          case GREATERTHAN:\n          case PLUS:\n          case SPACE:\n          case CLOSEPARENTHESES:\n          case OPENPARENTHESES:\n            {\n              break;\n            }\n\n          case OPENBRACKET:\n            {\n              element = padding + element + nscopealt;\n              break;\n            }\n\n          case COLON:\n            {\n              switch (element.charCodeAt(1) * 2 + element.charCodeAt(2) * 3) {\n                // :global\n                case 530:\n                  {\n                    if (escape > 0) {\n                      element = padding + element.substring(8, size - 1);\n                      break;\n                    }\n                  }\n                // :hover, :nth-child(), ...\n\n                default:\n                  {\n                    if (j < 1 || elements[j - 1].length < 1) {\n                      element = padding + nscopealt + element;\n                    }\n                  }\n              }\n\n              break;\n            }\n\n          case COMMA:\n            {\n              padding = '';\n            }\n\n          default:\n            {\n              if (size > 1 && element.indexOf(':') > 0) {\n                element = padding + element.replace(pseudoptn, '$1' + nscopealt + '$2');\n              } else {\n                element = padding + element + nscopealt;\n              }\n            }\n        }\n\n        out += element;\n      }\n\n      selector[i] = out.replace(formatptn, '').trim();\n    }\n\n    return selector;\n  }\n  /**\n   * Proxy\n   *\n   * @param {number} context\n   * @param {string} content\n   * @param {Array<string>} selectors\n   * @param {Array<string>} parents\n   * @param {number} line\n   * @param {number} column\n   * @param {number} length\n   * @param {number} id\n   * @param {number} depth\n   * @param {number} at\n   * @return {(string|void|*)}\n   */\n\n\n  function proxy(context, content, selectors, parents, line, column, length, id, depth, at) {\n    for (var i = 0, out = content, next; i < plugged; ++i) {\n      switch (next = plugins[i].call(stylis, context, out, selectors, parents, line, column, length, id, depth, at)) {\n        case void 0:\n        case false:\n        case true:\n        case null:\n          {\n            break;\n          }\n\n        default:\n          {\n            out = next;\n          }\n      }\n    }\n\n    if (out !== content) {\n      return out;\n    }\n  }\n  /**\n   * @param {number} code\n   * @param {number} index\n   * @param {number} length\n   * @param {string} body\n   * @return {number}\n   */\n\n\n  function delimited(code, index, length, body) {\n    for (var i = index + 1; i < length; ++i) {\n      switch (body.charCodeAt(i)) {\n        // /*\n        case FOWARDSLASH:\n          {\n            if (code === STAR) {\n              if (body.charCodeAt(i - 1) === STAR && index + 2 !== i) {\n                return i + 1;\n              }\n            }\n\n            break;\n          }\n        // //\n\n        case NEWLINE:\n          {\n            if (code === FOWARDSLASH) {\n              return i + 1;\n            }\n          }\n      }\n    }\n\n    return i;\n  }\n  /**\n   * @param {number} type\n   * @param {number} index\n   * @param {number} length\n   * @param {number} find\n   * @param {string} body\n   * @return {number}\n   */\n\n\n  function match(type, index, length, body) {\n    for (var i = index + 1; i < length; ++i) {\n      switch (body.charCodeAt(i)) {\n        case type:\n          {\n            return i;\n          }\n      }\n    }\n\n    return i;\n  }\n  /**\n   * Minify\n   *\n   * @param {(string|*)} output\n   * @return {string}\n   */\n\n\n  function minify(output) {\n    return output.replace(formatptn, '').replace(beforeptn, '').replace(afterptn, '$1').replace(tailptn, '$1').replace(whiteptn, ' ');\n  }\n  /**\n   * Use\n   *\n   * @param {(Array<function(...?)>|function(...?)|number|void)?} plugin\n   */\n\n\n  function use(plugin) {\n    switch (plugin) {\n      case void 0:\n      case null:\n        {\n          plugged = plugins.length = 0;\n          break;\n        }\n\n      default:\n        {\n          if (typeof plugin === 'function') {\n            plugins[plugged++] = plugin;\n          } else if (typeof plugin === 'object') {\n            for (var i = 0, length = plugin.length; i < length; ++i) {\n              use(plugin[i]);\n            }\n          } else {\n            unkwn = !!plugin | 0;\n          }\n        }\n    }\n\n    return use;\n  }\n  /**\n   * Set\n   *\n   * @param {*} options\n   */\n\n\n  function set(options) {\n    for (var name in options) {\n      var value = options[name];\n\n      switch (name) {\n        case 'keyframe':\n          keyed = value | 0;\n          break;\n\n        case 'global':\n          escape = value | 0;\n          break;\n\n        case 'cascade':\n          cascade = value | 0;\n          break;\n\n        case 'compress':\n          compress = value | 0;\n          break;\n\n        case 'semicolon':\n          semicolon = value | 0;\n          break;\n\n        case 'preserve':\n          preserve = value | 0;\n          break;\n\n        case 'prefix':\n          should = null;\n\n          if (!value) {\n            prefix = 0;\n          } else if (typeof value !== 'function') {\n            prefix = 1;\n          } else {\n            prefix = 2;\n            should = value;\n          }\n\n      }\n    }\n\n    return set;\n  }\n  /**\n   * Stylis\n   *\n   * @param {string} selector\n   * @param {string} input\n   * @return {*}\n   */\n\n\n  function stylis(selector, input) {\n    if (this !== void 0 && this.constructor === stylis) {\n      return factory(selector);\n    } // setup\n\n\n    var ns = selector;\n    var code = ns.charCodeAt(0); // trim leading whitespace\n\n    if (code < 33) {\n      code = (ns = ns.trim()).charCodeAt(0);\n    } // keyframe/animation namespace\n\n\n    if (keyed > 0) {\n      key = ns.replace(invalidptn, code === OPENBRACKET ? '' : '-');\n    } // reset, used to assert if a plugin is moneky-patching the return value\n\n\n    code = 1; // cascade/isolate\n\n    if (cascade === 1) {\n      nscope = ns;\n    } else {\n      nscopealt = ns;\n    }\n\n    var selectors = [nscope];\n    var result; // execute plugins, pre-process context\n\n    if (plugged > 0) {\n      result = proxy(PREPS, input, selectors, selectors, line, column, 0, 0, 0, 0);\n\n      if (result !== void 0 && typeof result === 'string') {\n        input = result;\n      }\n    } // build\n\n\n    var output = compile(array, selectors, input, 0, 0); // execute plugins, post-process context\n\n    if (plugged > 0) {\n      result = proxy(POSTS, output, selectors, selectors, line, column, output.length, 0, 0, 0); // bypass minification\n\n      if (result !== void 0 && typeof (output = result) !== 'string') {\n        code = 0;\n      }\n    } // reset\n\n\n    key = '';\n    nscope = '';\n    nscopealt = '';\n    pattern = 0;\n    line = 1;\n    column = 1;\n    return compress * code === 0 ? output : minify(output);\n  }\n\n  stylis['use'] = use;\n  stylis['set'] = set;\n\n  if (options !== void 0) {\n    set(options);\n  }\n\n  return stylis;\n});","map":{"version":3,"sources":["/Users/vamsi/verizon.github.io/node_modules/stylis/stylis.js"],"names":["factory","exports","module","define","window","options","nullptn","formatptn","colonptn","cursorptn","transformptn","animationptn","propertiesptn","elementptn","selectorptn","andptn","escapeptn","invalidptn","keyframeptn","plcholdrptn","readonlyptn","beforeptn","afterptn","tailptn","whiteptn","pseudoptn","writingptn","gradientptn","supportsptn","propertyptn","selfptn","pseudofmt","trimptn","dimensionptn","imgsrcptn","webkit","moz","ms","SEMICOLON","CLOSEBRACES","OPENBRACES","OPENPARENTHESES","CLOSEPARENTHESES","OPENBRACKET","CLOSEBRACKET","NEWLINE","CARRIAGE","TAB","AT","SPACE","AND","DASH","UNDERSCORE","STAR","COMMA","COLON","SINGLEQUOTE","DOUBLEQUOTE","FOWARDSLASH","GREATERTHAN","PLUS","TILDE","NULL","FORMFEED","VERTICALTAB","KEYFRAME","MEDIA","SUPPORTS","PLACEHOLDER","READONLY","IMPORT","CHARSET","DOCUMENT","PAGE","column","line","pattern","cascade","prefix","escape","compress","semicolon","preserve","array","plugins","plugged","should","POSTS","PREPS","UNKWN","PROPS","BLCKS","ATRUL","unkwn","keyed","key","nscopealt","nscope","compile","parent","current","body","id","depth","bracket","comment","parentheses","quote","first","second","code","tail","trail","peak","counter","context","atrule","pseudo","caret","format","insert","invert","length","eof","eol","char","chars","child","out","children","flat","selector","result","charCodeAt","replace","trim","charAt","delimited","substring","select","proxy","join","supports","vendor","property","isolate","selectors","split","l","i","scope","j","k","level","indexOf","input","third","index","hash","cache","animation","test","content","value","match","group","declare","list","items","isNaN","parseFloat","Array","padding","element","elements","size","parents","at","next","call","stylis","type","minify","output","use","plugin","set","name","constructor","ns"],"mappings":"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","sourcesContent":["/*\n *          __        ___\n *    _____/ /___  __/ (_)____\n *   / ___/ __/ / / / / / ___/\n *  (__  ) /_/ /_/ / / (__  )\n * /____/\\__/\\__, /_/_/____/\n *          /____/\n *\n * light - weight css preprocessor @licence MIT\n */\n(function (factory) {/* eslint-disable */\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? (module['exports'] = factory(null)) :\n\t\ttypeof define === 'function' && define['amd'] ? define(factory(null)) :\n\t\t\t(window['stylis'] = factory(null))\n}(/** @param {*=} options */function factory (options) {/* eslint-disable */\n\n\t'use strict'\n\n\t/**\n\t * Notes\n\t *\n\t * The ['<method name>'] pattern is used to support closure compiler\n\t * the jsdoc signatures are also used to the same effect\n\t *\n\t * ----\n\t *\n\t * int + int + int === n4 [faster]\n\t *\n\t * vs\n\t *\n\t * int === n1 && int === n2 && int === n3\n\t *\n\t * ----\n\t *\n\t * switch (int) { case ints...} [faster]\n\t *\n\t * vs\n\t *\n\t * if (int == 1 && int === 2 ...)\n\t *\n\t * ----\n\t *\n\t * The (first*n1 + second*n2 + third*n3) format used in the property parser\n\t * is a simple way to hash the sequence of characters\n\t * taking into account the index they occur in\n\t * since any number of 3 character sequences could produce duplicates.\n\t *\n\t * On the other hand sequences that are directly tied to the index of the character\n\t * resolve a far more accurate measure, it's also faster\n\t * to evaluate one condition in a switch statement\n\t * than three in an if statement regardless of the added math.\n\t *\n\t * This allows the vendor prefixer to be both small and fast.\n\t */\n\n\tvar nullptn = /^\\0+/g /* matches leading null characters */\n\tvar formatptn = /[\\0\\r\\f]/g /* matches new line, null and formfeed characters */\n\tvar colonptn = /: */g /* splits animation rules */\n\tvar cursorptn = /zoo|gra/ /* assert cursor varient */\n\tvar transformptn = /([,: ])(transform)/g /* vendor prefix transform, older webkit */\n\tvar animationptn = /,+\\s*(?![^(]*[)])/g /* splits multiple shorthand notation animations */\n\tvar propertiesptn = / +\\s*(?![^(]*[)])/g /* animation properties */\n\tvar elementptn = / *[\\0] */g /* selector elements */\n\tvar selectorptn = /,\\r+?/g /* splits selectors */\n\tvar andptn = /([\\t\\r\\n ])*\\f?&/g /* match & */\n\tvar escapeptn = /:global\\(((?:[^\\(\\)\\[\\]]*|\\[.*\\]|\\([^\\(\\)]*\\))*)\\)/g /* matches :global(.*) */\n\tvar invalidptn = /\\W+/g /* removes invalid characters from keyframes */\n\tvar keyframeptn = /@(k\\w+)\\s*(\\S*)\\s*/ /* matches @keyframes $1 */\n\tvar plcholdrptn = /::(place)/g /* match ::placeholder varient */\n\tvar readonlyptn = /:(read-only)/g /* match :read-only varient */\n\tvar beforeptn = /\\s+(?=[{\\];=:>])/g /* matches \\s before ] ; = : */\n\tvar afterptn = /([[}=:>])\\s+/g /* matches \\s after characters [ } = : */\n\tvar tailptn = /(\\{[^{]+?);(?=\\})/g /* matches tail semi-colons ;} */\n\tvar whiteptn = /\\s{2,}/g /* matches repeating whitespace */\n\tvar pseudoptn = /([^\\(])(:+) */g /* pseudo element */\n\tvar writingptn = /[svh]\\w+-[tblr]{2}/ /* match writing mode property values */\n\tvar gradientptn = /([\\w-]+t\\()/g /* match *gradient property */\n\tvar supportsptn = /\\(\\s*(.*)\\s*\\)/g /* match supports (groups) */\n\tvar propertyptn = /([\\s\\S]*?);/g /* match properties leading semicolon */\n\tvar selfptn = /-self|flex-/g /* match flex- and -self in align-self: flex-*; */\n\tvar pseudofmt = /[^]*?(:[rp][el]a[\\w-]+)[^]*/ /* extrats :readonly or :placholder from selector */\n\tvar trimptn = /[ \\t]+$/ /* match tail whitspace */\n\tvar dimensionptn = /stretch|:\\s*\\w+\\-(?:conte|avail)/ /* match max/min/fit-content, fill-available */\n\tvar imgsrcptn = /([^-])(image-set\\()/\n\n\t/* vendors */\n\tvar webkit = '-webkit-'\n\tvar moz = '-moz-'\n\tvar ms = '-ms-'\n\n\t/* character codes */\n\tvar SEMICOLON = 59 /* ; */\n\tvar CLOSEBRACES = 125 /* } */\n\tvar OPENBRACES = 123 /* { */\n\tvar OPENPARENTHESES = 40 /* ( */\n\tvar CLOSEPARENTHESES = 41 /* ) */\n\tvar OPENBRACKET = 91 /* [ */\n\tvar CLOSEBRACKET = 93 /* ] */\n\tvar NEWLINE = 10 /* \\n */\n\tvar CARRIAGE = 13 /* \\r */\n\tvar TAB = 9 /* \\t */\n\tvar AT = 64 /* @ */\n\tvar SPACE = 32 /*   */\n\tvar AND = 38 /* & */\n\tvar DASH = 45 /* - */\n\tvar UNDERSCORE = 95 /* _ */\n\tvar STAR = 42 /* * */\n\tvar COMMA = 44 /* , */\n\tvar COLON = 58 /* : */\n\tvar SINGLEQUOTE = 39 /* ' */\n\tvar DOUBLEQUOTE = 34 /* \" */\n\tvar FOWARDSLASH = 47 /* / */\n\tvar GREATERTHAN = 62 /* > */\n\tvar PLUS = 43 /* + */\n\tvar TILDE = 126 /* ~ */\n\tvar NULL = 0 /* \\0 */\n\tvar FORMFEED = 12 /* \\f */\n\tvar VERTICALTAB = 11 /* \\v */\n\n\t/* special identifiers */\n\tvar KEYFRAME = 107 /* k */\n\tvar MEDIA = 109 /* m */\n\tvar SUPPORTS = 115 /* s */\n\tvar PLACEHOLDER = 112 /* p */\n\tvar READONLY = 111 /* o */\n\tvar IMPORT = 105 /* <at>i */\n\tvar CHARSET = 99 /* <at>c */\n\tvar DOCUMENT = 100 /* <at>d */\n\tvar PAGE = 112 /* <at>p */\n\n\tvar column = 1 /* current column */\n\tvar line = 1 /* current line numebr */\n\tvar pattern = 0 /* :pattern */\n\n\tvar cascade = 1 /* #id h1 h2 vs h1#id h2#id  */\n\tvar prefix = 1 /* vendor prefix */\n\tvar escape = 1 /* escape :global() pattern */\n\tvar compress = 0 /* compress output */\n\tvar semicolon = 0 /* no/semicolon option */\n\tvar preserve = 0 /* preserve empty selectors */\n\n\t/* empty reference */\n\tvar array = []\n\n\t/* plugins */\n\tvar plugins = []\n\tvar plugged = 0\n\tvar should = null\n\n\t/* plugin context */\n\tvar POSTS = -2\n\tvar PREPS = -1\n\tvar UNKWN = 0\n\tvar PROPS = 1\n\tvar BLCKS = 2\n\tvar ATRUL = 3\n\n\t/* plugin newline context */\n\tvar unkwn = 0\n\n\t/* keyframe animation */\n\tvar keyed = 1\n\tvar key = ''\n\n\t/* selector namespace */\n\tvar nscopealt = ''\n\tvar nscope = ''\n\n\t/**\n\t * Compile\n\t *\n\t * @param {Array<string>} parent\n\t * @param {Array<string>} current\n\t * @param {string} body\n\t * @param {number} id\n\t * @param {number} depth\n\t * @return {string}\n\t */\n\tfunction compile (parent, current, body, id, depth) {\n\t\tvar bracket = 0 /* brackets [] */\n\t\tvar comment = 0 /* comments /* // or /* */\n\t\tvar parentheses = 0 /* functions () */\n\t\tvar quote = 0 /* quotes '', \"\" */\n\n\t\tvar first = 0 /* first character code */\n\t\tvar second = 0 /* second character code */\n\t\tvar code = 0 /* current character code */\n\t\tvar tail = 0 /* previous character code */\n\t\tvar trail = 0 /* character before previous code */\n\t\tvar peak = 0 /* previous non-whitespace code */\n\n\t\tvar counter = 0 /* count sequence termination */\n\t\tvar context = 0 /* track current context */\n\t\tvar atrule = 0 /* track @at-rule context */\n\t\tvar pseudo = 0 /* track pseudo token index */\n\t\tvar caret = 0 /* current character index */\n\t\tvar format = 0 /* control character formating context */\n\t\tvar insert = 0 /* auto semicolon insertion */\n\t\tvar invert = 0 /* inverted selector pattern */\n\t\tvar length = 0 /* generic length address */\n\t\tvar eof = body.length /* end of file(length) */\n\t\tvar eol = eof - 1 /* end of file(characters) */\n\n\t\tvar char = '' /* current character */\n\t\tvar chars = '' /* current buffer of characters */\n\t\tvar child = '' /* next buffer of characters */\n\t\tvar out = '' /* compiled body */\n\t\tvar children = '' /* compiled children */\n\t\tvar flat = '' /* compiled leafs */\n\t\tvar selector /* generic selector address */\n\t\tvar result /* generic address */\n\n\t\t// ...build body\n\t\twhile (caret < eof) {\n\t\t\tcode = body.charCodeAt(caret)\n\n\t\t\t// eof varient\n\t\t\tif (caret === eol) {\n\t\t\t\t// last character + noop context, add synthetic padding for noop context to terminate\n\t\t\t\tif (comment + quote + parentheses + bracket !== 0) {\n\t\t\t\t\tif (comment !== 0) {\n\t\t\t\t\t\tcode = comment === FOWARDSLASH ? NEWLINE : FOWARDSLASH\n\t\t\t\t\t}\n\n\t\t\t\t\tquote = parentheses = bracket = 0\n\t\t\t\t\teof++\n\t\t\t\t\teol++\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (comment + quote + parentheses + bracket === 0) {\n\t\t\t\t// eof varient\n\t\t\t\tif (caret === eol) {\n\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\tchars = chars.replace(formatptn, '')\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chars.trim().length > 0) {\n\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\t\tcase NEWLINE: {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tchars += body.charAt(caret)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcode = SEMICOLON\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// auto semicolon insertion\n\t\t\t\tif (insert === 1) {\n\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t// false flags\n\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\tcase SINGLEQUOTE:\n\t\t\t\t\t\tcase OPENPARENTHESES:\n\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// valid\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\t\tlength = caret\n\t\t\t\t\t\t\tfirst = code\n\t\t\t\t\t\t\tcaret--\n\t\t\t\t\t\t\tcode = SEMICOLON\n\n\t\t\t\t\t\t\twhile (length < eof) {\n\t\t\t\t\t\t\t\tswitch (body.charCodeAt(length++)) {\n\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\t\t\t\tcase SEMICOLON: {\n\t\t\t\t\t\t\t\t\t\t++caret\n\t\t\t\t\t\t\t\t\t\tcode = first\n\t\t\t\t\t\t\t\t\t\tlength = eof\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\t\t\t\t\t\t++caret\n\t\t\t\t\t\t\t\t\t\t\tcode = first\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\t\t\t\t\tlength = eof\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// token varient\n\t\t\t\tswitch (code) {\n\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\tchars = chars.trim()\n\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\t\t\t\t\t\tcounter = 1\n\t\t\t\t\t\tlength = ++caret\n\n\t\t\t\t\t\twhile (caret < eof) {\n\t\t\t\t\t\t\tswitch (code = body.charCodeAt(caret)) {\n\t\t\t\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\t\t\t\tcounter++\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\t\t\t\t\tcounter--\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\t\t\tswitch (second = body.charCodeAt(caret + 1)) {\n\t\t\t\t\t\t\t\t\t\t// /*, //\n\t\t\t\t\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\t\t\t\t\tcaret = delimited(second, caret, eol, body)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// given \"[\" === 91 & \"]\" === 93 hence forth 91 + 1 + 1 === 93\n\t\t\t\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\t\t\t\tcode++\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// given \"(\" === 40 & \")\" === 41 hence forth 40 + 1 === 41\n\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\tcode++\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// quote tail delimiter is identical to the head delimiter hence noop,\n\t\t\t\t\t\t\t\t// fallthrough clauses have been shifted to the correct tail delimiter\n\t\t\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\t\t\tcase SINGLEQUOTE: {\n\t\t\t\t\t\t\t\t\twhile (caret++ < eol) {\n\t\t\t\t\t\t\t\t\t\tif (body.charCodeAt(caret) === code) {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (counter === 0) {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcaret++\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchild = body.substring(length, caret)\n\n\t\t\t\t\t\tif (first === NULL) {\n\t\t\t\t\t\t\tfirst = (chars = chars.replace(nullptn, '').trim()).charCodeAt(0)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch (first) {\n\t\t\t\t\t\t\t// @at-rule\n\t\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\t\t\t\tchars = chars.replace(formatptn, '')\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsecond = chars.charCodeAt(1)\n\n\t\t\t\t\t\t\t\tswitch (second) {\n\t\t\t\t\t\t\t\t\tcase DOCUMENT:\n\t\t\t\t\t\t\t\t\tcase MEDIA:\n\t\t\t\t\t\t\t\t\tcase SUPPORTS:\n\t\t\t\t\t\t\t\t\tcase DASH: {\n\t\t\t\t\t\t\t\t\t\tselector = current\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\tselector = array\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tchild = compile(current, selector, child, second, depth+1)\n\t\t\t\t\t\t\t\tlength = child.length\n\n\t\t\t\t\t\t\t\t// preserve empty @at-rule\n\t\t\t\t\t\t\t\tif (preserve > 0 && length === 0) {\n\t\t\t\t\t\t\t\t\tlength = chars.length\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// execute plugins, @at-rule context\n\t\t\t\t\t\t\t\tif (plugged > 0) {\n\t\t\t\t\t\t\t\t\tselector = select(array, chars, invert)\n\t\t\t\t\t\t\t\t\tresult = proxy(ATRUL, child, selector, current, line, column, length, second, depth, id)\n\t\t\t\t\t\t\t\t\tchars = selector.join('')\n\n\t\t\t\t\t\t\t\t\tif (result !== void 0) {\n\t\t\t\t\t\t\t\t\t\tif ((length = (child = result.trim()).length) === 0) {\n\t\t\t\t\t\t\t\t\t\t\tsecond = 0\n\t\t\t\t\t\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (length > 0) {\n\t\t\t\t\t\t\t\t\tswitch (second) {\n\t\t\t\t\t\t\t\t\t\tcase SUPPORTS: {\n\t\t\t\t\t\t\t\t\t\t\tchars = chars.replace(supportsptn, supports)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcase DOCUMENT:\n\t\t\t\t\t\t\t\t\t\tcase MEDIA:\n\t\t\t\t\t\t\t\t\t\tcase DASH: {\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + '{' + child + '}'\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcase KEYFRAME: {\n\t\t\t\t\t\t\t\t\t\t\tchars = chars.replace(keyframeptn, '$1 $2' + (keyed > 0 ? key : ''))\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + '{' + child + '}'\n\n\t\t\t\t\t\t\t\t\t\t\tif (prefix === 1 || (prefix === 2 && vendor('@'+child, 3))) {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = '@' + webkit + child + '@' + child\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = '@' + child\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + child\n\n\t\t\t\t\t\t\t\t\t\t\tif (id === PAGE) {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = (out += child, '')\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// selector\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tchild = compile(current, select(current, chars, invert), child, id, depth+1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchildren += child\n\n\t\t\t\t\t\t// reset\n\t\t\t\t\t\tcontext = 0\n\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\tformat = 0\n\t\t\t\t\t\tinvert = 0\n\t\t\t\t\t\tatrule = 0\n\t\t\t\t\t\tchars = ''\n\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\tcode = body.charCodeAt(++caret)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\tcase SEMICOLON: {\n\t\t\t\t\t\tchars = (format > 0 ? chars.replace(formatptn, '') : chars).trim()\n\n\t\t\t\t\t\tif ((length = chars.length) > 1) {\n\t\t\t\t\t\t\t// monkey-patch missing colon\n\t\t\t\t\t\t\tif (pseudo === 0) {\n\t\t\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\n\t\t\t\t\t\t\t\t// first character is a letter or dash, buffer has a space character\n\t\t\t\t\t\t\t\tif ((first === DASH || first > 96 && first < 123)) {\n\t\t\t\t\t\t\t\t\tlength = (chars = chars.replace(' ', ':')).length\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// execute plugins, property context\n\t\t\t\t\t\t\tif (plugged > 0) {\n\t\t\t\t\t\t\t\tif ((result = proxy(PROPS, chars, current, parent, line, column, out.length, id, depth, id)) !== void 0) {\n\t\t\t\t\t\t\t\t\tif ((length = (chars = result.trim()).length) === 0) {\n\t\t\t\t\t\t\t\t\t\tchars = '\\0\\0'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\t\t\t\t\t\t\tsecond = chars.charCodeAt(1)\n\n\t\t\t\t\t\t\tswitch (first) {\n\t\t\t\t\t\t\t\tcase NULL: {\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\t\t\tif (second === IMPORT || second === CHARSET) {\n\t\t\t\t\t\t\t\t\t\tflat += chars + body.charAt(caret)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\tif (chars.charCodeAt(length-1) === COLON) {\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tout += property(chars, first, second, chars.charCodeAt(2))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset\n\t\t\t\t\t\tcontext = 0\n\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\tformat = 0\n\t\t\t\t\t\tinvert = 0\n\t\t\t\t\t\tchars = ''\n\t\t\t\t\t\tcode = body.charCodeAt(++caret)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// parse characters\n\t\t\tswitch (code) {\n\t\t\t\tcase CARRIAGE:\n\t\t\t\tcase NEWLINE: {\n\t\t\t\t\t// auto insert semicolon\n\t\t\t\t\tif (comment + quote + parentheses + bracket + semicolon === 0) {\n\t\t\t\t\t\t// valid non-whitespace characters that\n\t\t\t\t\t\t// may precede a newline\n\t\t\t\t\t\tswitch (peak) {\n\t\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\t\tcase SINGLEQUOTE:\n\t\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\t\tcase AT:\n\t\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\t\tcase FOWARDSLASH:\n\t\t\t\t\t\t\tcase DASH:\n\t\t\t\t\t\t\tcase COLON:\n\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t// current buffer has a colon\n\t\t\t\t\t\t\t\tif (pseudo > 0) {\n\t\t\t\t\t\t\t\t\tinsert = 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// terminate line comment\n\t\t\t\t\tif (comment === FOWARDSLASH) {\n\t\t\t\t\t\tcomment = 0\n\t\t\t\t\t} else if (cascade + context === 0 && id !== KEYFRAME && chars.length > 0) {\n\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\tchars += '\\0'\n\t\t\t\t\t}\n\n\t\t\t\t\t// execute plugins, newline context\n\t\t\t\t\tif (plugged * unkwn > 0) {\n\t\t\t\t\t\tproxy(UNKWN, chars, current, parent, line, column, out.length, id, depth, id)\n\t\t\t\t\t}\n\n\t\t\t\t\t// next line, reset column position\n\t\t\t\t\tcolumn = 1\n\t\t\t\t\tline++\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase SEMICOLON:\n\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\tif (comment + quote + parentheses + bracket === 0) {\n\t\t\t\t\t\tcolumn++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\t// increment column position\n\t\t\t\t\tcolumn++\n\n\t\t\t\t\t// current character\n\t\t\t\t\tchar = body.charAt(caret)\n\n\t\t\t\t\t// remove comments, escape functions, strings, attributes and prepare selectors\n\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\tif (quote + bracket + comment === 0) {\n\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\t\tcase COLON:\n\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\t\t\t\tchar = ''\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\tif (code !== SPACE) {\n\t\t\t\t\t\t\t\t\t\t\tchar = ' '\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// escape breaking control characters\n\t\t\t\t\t\tcase NULL: {\n\t\t\t\t\t\t\tchar = '\\\\0'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase FORMFEED: {\n\t\t\t\t\t\t\tchar = '\\\\f'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase VERTICALTAB: {\n\t\t\t\t\t\t\tchar = '\\\\v'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// &\n\t\t\t\t\t\tcase AND: {\n\t\t\t\t\t\t\t// inverted selector pattern i.e html &\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0 && cascade > 0) {\n\t\t\t\t\t\t\t\tinvert = 1\n\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\tchar = '\\f' + char\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ::p<l>aceholder, l\n\t\t\t\t\t\t// :read-on<l>y, l\n\t\t\t\t\t\tcase 108: {\n\t\t\t\t\t\t\tif (quote + comment + bracket + pattern === 0 && pseudo > 0) {\n\t\t\t\t\t\t\t\tswitch (caret - pseudo) {\n\t\t\t\t\t\t\t\t\t// ::placeholder\n\t\t\t\t\t\t\t\t\tcase 2: {\n\t\t\t\t\t\t\t\t\t\tif (tail === PLACEHOLDER && body.charCodeAt(caret-3) === COLON) {\n\t\t\t\t\t\t\t\t\t\t\tpattern = tail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// :read-only\n\t\t\t\t\t\t\t\t\tcase 8: {\n\t\t\t\t\t\t\t\t\t\tif (trail === READONLY) {\n\t\t\t\t\t\t\t\t\t\t\tpattern = trail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// :<pattern>\n\t\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tpseudo = caret\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// selectors\n\t\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\t\tif (comment + parentheses + quote + bracket === 0) {\n\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\tchar += '\\r'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// quotes\n\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\tcase SINGLEQUOTE: {\n\t\t\t\t\t\t\tif (comment === 0) {\n\t\t\t\t\t\t\t\tquote = quote === code ? 0 : (quote === 0 ? code : quote)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// attributes\n\t\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\t\tif (quote + comment + parentheses === 0) {\n\t\t\t\t\t\t\t\tbracket++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase CLOSEBRACKET: {\n\t\t\t\t\t\t\tif (quote + comment + parentheses === 0) {\n\t\t\t\t\t\t\t\tbracket--\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// functions\n\t\t\t\t\t\tcase CLOSEPARENTHESES: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tparentheses--\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\tswitch (tail*2 + trail*3) {\n\t\t\t\t\t\t\t\t\t\t// :matches\n\t\t\t\t\t\t\t\t\t\tcase 533: {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// :global, :not, :nth-child etc...\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tcounter = 0\n\t\t\t\t\t\t\t\t\t\t\tcontext = 1\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tparentheses++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\tif (comment + parentheses + quote + bracket + pseudo + atrule === 0) {\n\t\t\t\t\t\t\t\tatrule = 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// block/line comments\n\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\tif (quote + bracket + parentheses > 0) {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tswitch (comment) {\n\t\t\t\t\t\t\t\t// initialize line/block comment context\n\t\t\t\t\t\t\t\tcase 0: {\n\t\t\t\t\t\t\t\t\tswitch (code*2 + body.charCodeAt(caret+1)*3) {\n\t\t\t\t\t\t\t\t\t\t// //\n\t\t\t\t\t\t\t\t\t\tcase 235: {\n\t\t\t\t\t\t\t\t\t\t\tcomment = FOWARDSLASH\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// /*\n\t\t\t\t\t\t\t\t\t\tcase 220: {\n\t\t\t\t\t\t\t\t\t\t\tlength = caret\n\t\t\t\t\t\t\t\t\t\t\tcomment = STAR\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// end block comment context\n\t\t\t\t\t\t\t\tcase STAR: {\n\t\t\t\t\t\t\t\t\tif (code === FOWARDSLASH && tail === STAR && length + 2 !== caret) {\n\t\t\t\t\t\t\t\t\t\t// /*<!> ... */, !\n\t\t\t\t\t\t\t\t\t\tif (body.charCodeAt(length+2) === 33) {\n\t\t\t\t\t\t\t\t\t\t\tout += body.substring(length, caret+1)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tchar = ''\n\t\t\t\t\t\t\t\t\t\tcomment = 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// ignore comment blocks\n\t\t\t\t\tif (comment === 0) {\n\t\t\t\t\t\t// aggressive isolation mode, divide each individual selector\n\t\t\t\t\t\t// including selectors in :not function but excluding selectors in :global function\n\t\t\t\t\t\tif (cascade + quote + bracket + atrule === 0 && id !== KEYFRAME && code !== SEMICOLON) {\n\t\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\t\t// outside of an isolated context i.e nth-child(<...>)\n\t\t\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\t\t\tcase CARRIAGE: {\n\t\t\t\t\t\t\t\t\t\t\t\tchar = char + '\\0'\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t\tchar = '\\0' + char + (code === COMMA ? '' : '\\0')\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// within an isolated context, sleep untill it's terminated\n\t\t\t\t\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\t\t\t\t// :globa<l>(\n\t\t\t\t\t\t\t\t\t\t\t\tif (pseudo + 7 === caret && tail === 108) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tcontext = ++counter\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase CLOSEPARENTHESES: {\n\t\t\t\t\t\t\t\t\t\t\t\tif ((context = --counter) === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t\t\t\t\tchar += '\\0'\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\t\tcase NULL:\n\t\t\t\t\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\t\t\tcase FORMFEED:\n\t\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\t\tcase CARRIAGE: {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t// ignore in isolated contexts\n\t\t\t\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t\t\t\tchar += '\\0'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// concat buffer of characters\n\t\t\t\t\t\tchars += char\n\n\t\t\t\t\t\t// previous non-whitespace character code\n\t\t\t\t\t\tif (code !== SPACE && code !== TAB) {\n\t\t\t\t\t\t\tpeak = code\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// tail character codes\n\t\t\ttrail = tail\n\t\t\ttail = code\n\n\t\t\t// visit every character\n\t\t\tcaret++\n\t\t}\n\n\t\tlength = out.length\n\n\t\t// preserve empty selector\n \t\tif (preserve > 0) {\n \t\t\tif (length === 0 && children.length === 0 && (current[0].length === 0) === false) {\n \t\t\t\tif (id !== MEDIA || (current.length === 1 && (cascade > 0 ? nscopealt : nscope) === current[0])) {\n\t\t\t\t\tlength = current.join(',').length + 2\n \t\t\t\t}\n \t\t\t}\n\t\t}\n\n\t\tif (length > 0) {\n\t\t\t// cascade isolation mode?\n\t\t\tselector = cascade === 0 && id !== KEYFRAME ? isolate(current) : current\n\n\t\t\t// execute plugins, block context\n\t\t\tif (plugged > 0) {\n\t\t\t\tresult = proxy(BLCKS, out, selector, parent, line, column, length, id, depth, id)\n\n\t\t\t\tif (result !== void 0 && (out = result).length === 0) {\n\t\t\t\t\treturn flat + out + children\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout = selector.join(',') + '{' + out + '}'\n\n\t\t\tif (prefix*pattern !== 0) {\n\t\t\t\tif (prefix === 2 && !vendor(out, 2))\n\t\t\t\t\tpattern = 0\n\n\t\t\t\tswitch (pattern) {\n\t\t\t\t\t// ::read-only\n\t\t\t\t\tcase READONLY: {\n\t\t\t\t\t\tout = out.replace(readonlyptn, ':'+moz+'$1')+out\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// ::placeholder\n\t\t\t\t\tcase PLACEHOLDER: {\n\t\t\t\t\t\tout = (\n\t\t\t\t\t\t\tout.replace(plcholdrptn, '::' + webkit + 'input-$1') +\n\t\t\t\t\t\t\tout.replace(plcholdrptn, '::' + moz + '$1') +\n\t\t\t\t\t\t\tout.replace(plcholdrptn, ':' + ms + 'input-$1') + out\n\t\t\t\t\t\t)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpattern = 0\n\t\t\t}\n\t\t}\n\n\t\treturn flat + out + children\n\t}\n\n\t/**\n\t * Select\n\t *\n\t * @param {Array<string>} parent\n\t * @param {string} current\n\t * @param {number} invert\n\t * @return {Array<string>}\n\t */\n\tfunction select (parent, current, invert) {\n\t\tvar selectors = current.trim().split(selectorptn)\n\t\tvar out = selectors\n\n\t\tvar length = selectors.length\n\t\tvar l = parent.length\n\n\t\tswitch (l) {\n\t\t\t// 0-1 parent selectors\n\t\t\tcase 0:\n\t\t\tcase 1: {\n\t\t\t\tfor (var i = 0, selector = l === 0 ? '' : parent[0] + ' '; i < length; ++i) {\n\t\t\t\t\tout[i] = scope(selector, out[i], invert, l).trim()\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// >2 parent selectors, nested\n\t\t\tdefault: {\n\t\t\t\tfor (var i = 0, j = 0, out = []; i < length; ++i) {\n\t\t\t\t\tfor (var k = 0; k < l; ++k) {\n\t\t\t\t\t\tout[j++] = scope(parent[k] + ' ', selectors[i], invert, l).trim()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Scope\n\t *\n\t * @param {string} parent\n\t * @param {string} current\n\t * @param {number} invert\n\t * @param {number} level\n\t * @return {string}\n\t */\n\tfunction scope (parent, current, invert, level) {\n\t\tvar selector = current\n\t\tvar code = selector.charCodeAt(0)\n\n\t\t// trim leading whitespace\n\t\tif (code < 33) {\n\t\t\tcode = (selector = selector.trim()).charCodeAt(0)\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// &\n\t\t\tcase AND: {\n\t\t\t\tswitch (cascade + level) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\tcase 1: {\n\t\t\t\t\t\tif (parent.trim().length === 0) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\treturn selector.replace(andptn, '$1'+parent.trim())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// :\n\t\t\tcase COLON: {\n\t\t\t\tswitch (selector.charCodeAt(1)) {\n\t\t\t\t\t// g in :global\n\t\t\t\t\tcase 103: {\n\t\t\t\t\t\tif (escape > 0 && cascade > 0) {\n\t\t\t\t\t\t\treturn selector.replace(escapeptn, '$1').replace(andptn, '$1'+nscope)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\t// :hover\n\t\t\t\t\t\treturn parent.trim() + selector.replace(andptn, '$1'+parent.trim())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// html &\n\t\t\t\tif (invert*cascade > 0 && selector.indexOf('\\f') > 0) {\n\t\t\t\t\treturn selector.replace(andptn, (parent.charCodeAt(0) === COLON ? '' : '$1')+parent.trim())\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn parent + selector\n\t}\n\n\t/**\n\t * Property\n\t *\n\t * @param {string} input\n\t * @param {number} first\n\t * @param {number} second\n\t * @param {number} third\n\t * @return {string}\n\t */\n\tfunction property (input, first, second, third) {\n\t\tvar index = 0\n\t\tvar out = input + ';'\n\t\tvar hash = (first*2) + (second*3) + (third*4)\n\t\tvar cache\n\n\t\t// animation: a, n, i characters\n\t\tif (hash === 944) {\n\t\t\treturn animation(out)\n\t\t} else if (prefix === 0 || (prefix === 2 && !vendor(out, 1))) {\n\t\t\treturn out\n\t\t}\n\n\t\t// vendor prefix\n\t\tswitch (hash) {\n\t\t\t// text-decoration/text-size-adjust/text-shadow/text-align/text-transform: t, e, x\n\t\t\tcase 1015: {\n\t\t\t\t// text-shadow/text-align/text-transform, a\n\t\t\t\treturn out.charCodeAt(10) === 97 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// filter/fill f, i, l\n\t\t\tcase 951: {\n\t\t\t\t// filter, t\n\t\t\t\treturn out.charCodeAt(3) === 116 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// color/column, c, o, l\n\t\t\tcase 963: {\n\t\t\t\t// column, n\n\t\t\t\treturn out.charCodeAt(5) === 110 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// box-decoration-break, b, o, x\n\t\t\tcase 1009: {\n\t\t\t\tif (out.charCodeAt(4) !== 100) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// mask, m, a, s\n\t\t\t// clip-path, c, l, i\n\t\t\tcase 969:\n\t\t\tcase 942: {\n\t\t\t\treturn webkit + out + out\n\t\t\t}\n\t\t\t// appearance: a, p, p\n\t\t\tcase 978: {\n\t\t\t\treturn webkit + out + moz + out + out\n\t\t\t}\n\t\t\t// hyphens: h, y, p\n\t\t\t// user-select: u, s, e\n\t\t\tcase 1019:\n\t\t\tcase 983: {\n\t\t\t\treturn webkit + out + moz + out + ms + out + out\n\t\t\t}\n\t\t\t// background/backface-visibility, b, a, c\n\t\t\tcase 883: {\n\t\t\t\t// backface-visibility, -\n\t\t\t\tif (out.charCodeAt(8) === DASH) {\n\t\t\t\t\treturn webkit + out + out\n\t\t\t\t}\n\n\t\t\t\t// image-set(...)\n\t\t\t\tif (out.indexOf('image-set(', 11) > 0) {\n\t\t\t\t\treturn out.replace(imgsrcptn, '$1'+webkit+'$2') + out\n\t\t\t\t}\n\n\t\t\t\treturn out\n\t\t\t}\n\t\t\t// flex: f, l, e\n\t\t\tcase 932: {\n\t\t\t\tif (out.charCodeAt(4) === DASH) {\n\t\t\t\t\tswitch (out.charCodeAt(5)) {\n\t\t\t\t\t\t// flex-grow, g\n\t\t\t\t\t\tcase 103: {\n\t\t\t\t\t\t\treturn webkit + 'box-' + out.replace('-grow', '') + webkit + out + ms + out.replace('grow', 'positive') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// flex-shrink, s\n\t\t\t\t\t\tcase 115: {\n\t\t\t\t\t\t\treturn webkit + out + ms + out.replace('shrink', 'negative') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// flex-basis, b\n\t\t\t\t\t\tcase 98: {\n\t\t\t\t\t\t\treturn webkit + out + ms + out.replace('basis', 'preferred-size') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn webkit + out + ms + out + out\n\t\t\t}\n\t\t\t// order: o, r, d\n\t\t\tcase 964: {\n\t\t\t\treturn webkit + out + ms + 'flex' + '-' + out + out\n\t\t\t}\n\t\t\t// justify-items/justify-content, j, u, s\n\t\t\tcase 1023: {\n\t\t\t\t// justify-content, c\n\t\t\t\tif (out.charCodeAt(8) !== 99) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t\tcache = out.substring(out.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')\n\t\t\t\treturn webkit + 'box-pack' + cache + webkit + out + ms + 'flex-pack' + cache + out\n\t\t\t}\n\t\t\t// cursor, c, u, r\n\t\t\tcase 1005: {\n\t\t\t\treturn cursorptn.test(out) ? out.replace(colonptn, ':' + webkit) + out.replace(colonptn, ':' + moz) + out : out\n\t\t\t}\n\t\t\t// writing-mode, w, r, i\n\t\t\tcase 1000: {\n\t\t\t\tcache = out.substring(13).trim()\n\t\t\t\tindex = cache.indexOf('-') + 1\n\n\t\t\t\tswitch (cache.charCodeAt(0)+cache.charCodeAt(index)) {\n\t\t\t\t\t// vertical-lr\n\t\t\t\t\tcase 226: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'tb')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// vertical-rl\n\t\t\t\t\tcase 232: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'tb-rl')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// horizontal-tb\n\t\t\t\t\tcase 220: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'lr')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\treturn out\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn webkit + out + ms + cache + out\n\t\t\t}\n\t\t\t// position: sticky\n\t\t\tcase 1017: {\n\t\t\t\tif (out.indexOf('sticky', 9) === -1) {\n\t\t\t\t\treturn out\n\t\t\t\t}\n\t\t\t}\n\t\t\t// display(flex/inline-flex/inline-box): d, i, s\n\t\t\tcase 975: {\n\t\t\t\tindex = (out = input).length - 10\n\t\t\t\tcache = (out.charCodeAt(index) === 33 ? out.substring(0, index) : out).substring(input.indexOf(':', 7) + 1).trim()\n\n\t\t\t\tswitch (hash = cache.charCodeAt(0) + (cache.charCodeAt(7)|0)) {\n\t\t\t\t\t// inline-\n\t\t\t\t\tcase 203: {\n\t\t\t\t\t\t// inline-box\n\t\t\t\t\t\tif (cache.charCodeAt(8) < 111) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// inline-box/sticky\n\t\t\t\t\tcase 115: {\n\t\t\t\t\t\tout = out.replace(cache, webkit+cache)+';'+out\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// inline-flex\n\t\t\t\t\t// flex\n\t\t\t\t\tcase 207:\n\t\t\t\t\tcase 102: {\n\t\t\t\t\t\tout = (\n\t\t\t\t\t\t\tout.replace(cache, webkit+(hash > 102 ? 'inline-' : '')+'box')+';'+\n\t\t\t\t\t\t\tout.replace(cache, webkit+cache)+';'+\n\t\t\t\t\t\t\tout.replace(cache, ms+cache+'box')+';'+\n\t\t\t\t\t\t\tout\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn out + ';'\n\t\t\t}\n\t\t\t// align-items, align-center, align-self: a, l, i, -\n\t\t\tcase 938: {\n\t\t\t\tif (out.charCodeAt(5) === DASH) {\n\t\t\t\t\tswitch (out.charCodeAt(6)) {\n\t\t\t\t\t\t// align-items, i\n\t\t\t\t\t\tcase 105: {\n\t\t\t\t\t\t\tcache = out.replace('-items', '')\n\t\t\t\t\t\t\treturn webkit + out + webkit + 'box-' + cache + ms + 'flex-' + cache + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// align-self, s\n\t\t\t\t\t\tcase 115: {\n\t\t\t\t\t\t\treturn webkit + out + ms + 'flex-item-' + out.replace(selfptn, '') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// align-content\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\treturn webkit + out + ms + 'flex-line-pack' + out.replace('align-content', '').replace(selfptn, '') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// min/max\n\t\t\tcase 973:\n\t\t\tcase 989: {\n\t\t\t\t// min-/max- height/width/block-size/inline-size\n\t\t\t\tif (out.charCodeAt(3) !== DASH || out.charCodeAt(4) === 122) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// height/width: min-content / width: max-content\n\t\t\tcase 931:\n\t\t\tcase 953: {\n\t\t\t\tif (dimensionptn.test(input) === true) {\n\t\t\t\t\t// stretch\n\t\t\t\t\tif ((cache = input.substring(input.indexOf(':') + 1)).charCodeAt(0) === 115)\n\t\t\t\t\t\treturn property(input.replace('stretch', 'fill-available'), first, second, third).replace(':fill-available', ':stretch')\n\t\t\t\t\telse\n\t\t\t\t\t\treturn out.replace(cache, webkit + cache) + out.replace(cache, moz + cache.replace('fill-', '')) + out\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// transform, transition: t, r, a\n\t\t\tcase 962: {\n\t\t\t\tout = webkit + out + (out.charCodeAt(5) === 102 ? ms + out : '') + out\n\n\t\t\t\t// transitions\n\t\t\t\tif (second + third === 211 && out.charCodeAt(13) === 105 && out.indexOf('transform', 10) > 0) {\n\t\t\t\t\treturn out.substring(0, out.indexOf(';', 27) + 1).replace(transformptn, '$1' + webkit + '$2') + out\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Vendor\n\t *\n\t * @param {string} content\n\t * @param {number} context\n\t * @return {boolean}\n\t */\n\tfunction vendor (content, context) {\n\t\tvar index = content.indexOf(context === 1 ? ':' : '{')\n\t\tvar key = content.substring(0, context !== 3 ? index : 10)\n\t\tvar value = content.substring(index + 1, content.length - 1)\n\n\t\treturn should(context !== 2 ? key : key.replace(pseudofmt, '$1'), value, context)\n\t}\n\n\t/**\n\t * Supports\n\t *\n\t * @param {string} match\n\t * @param {string} group\n\t * @return {string}\n\t */\n\tfunction supports (match, group) {\n\t\tvar out = property(group, group.charCodeAt(0), group.charCodeAt(1), group.charCodeAt(2))\n\n\t\treturn out !== group+';' ? out.replace(propertyptn, ' or ($1)').substring(4) : '('+group+')'\n\t}\n\n\t/**\n\t * Animation\n\t *\n\t * @param {string} input\n\t * @return {string}\n\t */\n\tfunction animation (input) {\n\t\tvar length = input.length\n\t\tvar index = input.indexOf(':', 9) + 1\n\t\tvar declare = input.substring(0, index).trim()\n\t\tvar out = input.substring(index, length-1).trim()\n\n\t\tswitch (input.charCodeAt(9)*keyed) {\n\t\t\tcase 0: {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// animation-*, -\n\t\t\tcase DASH: {\n\t\t\t\t// animation-name, n\n\t\t\t\tif (input.charCodeAt(10) !== 110) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// animation/animation-name\n\t\t\tdefault: {\n\t\t\t\t// split in case of multiple animations\n\t\t\t\tvar list = out.split((out = '', animationptn))\n\n\t\t\t\tfor (var i = 0, index = 0, length = list.length; i < length; index = 0, ++i) {\n\t\t\t\t\tvar value = list[i]\n\t\t\t\t\tvar items = value.split(propertiesptn)\n\n\t\t\t\t\twhile (value = items[index]) {\n\t\t\t\t\t\tvar peak = value.charCodeAt(0)\n\n\t\t\t\t\t\tif (keyed === 1 && (\n\t\t\t\t\t\t\t// letters\n\t\t\t\t\t\t\t(peak > AT && peak < 90) || (peak > 96 && peak < 123) || peak === UNDERSCORE ||\n\t\t\t\t\t\t\t// dash but not in sequence i.e --\n\t\t\t\t\t\t\t(peak === DASH && value.charCodeAt(1) !== DASH)\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t// not a number/function\n\t\t\t\t\t\t\tswitch (isNaN(parseFloat(value)) + (value.indexOf('(') !== -1)) {\n\t\t\t\t\t\t\t\tcase 1: {\n\t\t\t\t\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\t\t\t\t\t// not a valid reserved keyword\n\t\t\t\t\t\t\t\t\t\tcase 'infinite': case 'alternate': case 'backwards': case 'running':\n\t\t\t\t\t\t\t\t\t\tcase 'normal': case 'forwards': case 'both': case 'none': case 'linear':\n\t\t\t\t\t\t\t\t\t\tcase 'ease': case 'ease-in': case 'ease-out': case 'ease-in-out':\n\t\t\t\t\t\t\t\t\t\tcase 'paused': case 'reverse': case 'alternate-reverse': case 'inherit':\n\t\t\t\t\t\t\t\t\t\tcase 'initial': case 'unset': case 'step-start': case 'step-end': {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tvalue += key\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titems[index++] = value\n\t\t\t\t\t}\n\n\t\t\t\t\tout += (i === 0 ? '' : ',') + items.join(' ')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tout = declare + out + ';'\n\n\t\tif (prefix === 1 || (prefix === 2 && vendor(out, 1)))\n\t\t\treturn webkit + out + out\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Isolate\n\t *\n\t * @param {Array<string>} current\n\t */\n\tfunction isolate (current) {\n\t\tfor (var i = 0, length = current.length, selector = Array(length), padding, element; i < length; ++i) {\n\t\t\t// split individual elements in a selector i.e h1 h2 === [h1, h2]\n\t\t\tvar elements = current[i].split(elementptn)\n\t\t\tvar out = ''\n\n\t\t\tfor (var j = 0, size = 0, tail = 0, code = 0, l = elements.length; j < l; ++j) {\n\t\t\t\t// empty element\n\t\t\t\tif ((size = (element = elements[j]).length) === 0 && l > 1) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\ttail = out.charCodeAt(out.length-1)\n\t\t\t\tcode = element.charCodeAt(0)\n\t\t\t\tpadding = ''\n\n\t\t\t\tif (j !== 0) {\n\t\t\t\t\t// determine if we need padding\n\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\tcase OPENPARENTHESES:  {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tpadding = ' '\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch (code) {\n\t\t\t\t\tcase AND: {\n\t\t\t\t\t\telement = padding + nscopealt\n\t\t\t\t\t}\n\t\t\t\t\tcase TILDE:\n\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\tcase PLUS:\n\t\t\t\t\tcase SPACE:\n\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\telement = padding + element + nscopealt\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\tswitch (element.charCodeAt(1)*2 + element.charCodeAt(2)*3) {\n\t\t\t\t\t\t\t// :global\n\t\t\t\t\t\t\tcase 530: {\n\t\t\t\t\t\t\t\tif (escape > 0) {\n\t\t\t\t\t\t\t\t\telement = padding + element.substring(8, size - 1)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// :hover, :nth-child(), ...\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tif (j < 1 || elements[j-1].length < 1) {\n\t\t\t\t\t\t\t\t\telement = padding + nscopealt + element\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\tpadding = ''\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (size > 1 && element.indexOf(':') > 0) {\n\t\t\t\t\t\t\telement = padding + element.replace(pseudoptn, '$1' + nscopealt + '$2')\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telement = padding + element + nscopealt\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tout += element\n\t\t\t}\n\n\t\t\tselector[i] = out.replace(formatptn, '').trim()\n\t\t}\n\n\t\treturn selector\n\t}\n\n\t/**\n\t * Proxy\n\t *\n\t * @param {number} context\n\t * @param {string} content\n\t * @param {Array<string>} selectors\n\t * @param {Array<string>} parents\n\t * @param {number} line\n\t * @param {number} column\n\t * @param {number} length\n\t * @param {number} id\n\t * @param {number} depth\n\t * @param {number} at\n\t * @return {(string|void|*)}\n\t */\n\tfunction proxy (context, content, selectors, parents, line, column, length, id, depth, at) {\n\t\tfor (var i = 0, out = content, next; i < plugged; ++i) {\n\t\t\tswitch (next = plugins[i].call(stylis, context, out, selectors, parents, line, column, length, id, depth, at)) {\n\t\t\t\tcase void 0:\n\t\t\t\tcase false:\n\t\t\t\tcase true:\n\t\t\t\tcase null: {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\tout = next\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (out !== content) {\n\t\t  return out\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} code\n\t * @param {number} index\n\t * @param {number} length\n\t * @param {string} body\n\t * @return {number}\n\t */\n\tfunction delimited (code, index, length, body) {\n\t\tfor (var i = index + 1; i < length; ++i) {\n\t\t\tswitch (body.charCodeAt(i)) {\n\t\t\t\t// /*\n\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\tif (code === STAR) {\n\t\t\t\t\t\tif (body.charCodeAt(i - 1) === STAR &&  index + 2 !== i) {\n\t\t\t\t\t\t\treturn i + 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t// //\n\t\t\t\tcase NEWLINE: {\n\t\t\t\t\tif (code === FOWARDSLASH) {\n\t\t\t\t\t\treturn i + 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn i\n\t}\n\n\t/**\n\t * @param {number} type\n\t * @param {number} index\n\t * @param {number} length\n\t * @param {number} find\n\t * @param {string} body\n\t * @return {number}\n\t */\n\tfunction match (type, index, length, body) {\n\t\tfor (var i = index + 1; i < length; ++i) {\n\t\t\tswitch (body.charCodeAt(i)) {\n\t\t\t\tcase type: {\n\t\t\t\t\treturn i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn i\n\t}\n\n\t/**\n\t * Minify\n\t *\n\t * @param {(string|*)} output\n\t * @return {string}\n\t */\n\tfunction minify (output) {\n\t\treturn output\n\t\t\t.replace(formatptn, '')\n\t\t\t.replace(beforeptn, '')\n\t\t\t.replace(afterptn, '$1')\n\t\t\t.replace(tailptn, '$1')\n\t\t\t.replace(whiteptn, ' ')\n\t}\n\n\t/**\n\t * Use\n\t *\n\t * @param {(Array<function(...?)>|function(...?)|number|void)?} plugin\n\t */\n\tfunction use (plugin) {\n\t\tswitch (plugin) {\n\t\t\tcase void 0:\n\t\t\tcase null: {\n\t\t\t\tplugged = plugins.length = 0\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tif (typeof plugin === 'function') {\n\t\t\t\t\tplugins[plugged++] = plugin\n\t\t\t\t}\telse if (typeof plugin === 'object') {\n\t\t\t\t\tfor (var i = 0, length = plugin.length; i < length; ++i) {\n\t\t\t\t\t\tuse(plugin[i])\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunkwn = !!plugin|0\n\t\t\t\t}\n\t\t\t}\n \t\t}\n\n \t\treturn use\n\t}\n\n\t/**\n\t * Set\n\t *\n\t * @param {*} options\n\t */\n\tfunction set (options) {\n\t\tfor (var name in options) {\n\t\t\tvar value = options[name]\n\t\t\tswitch (name) {\n\t\t\t\tcase 'keyframe': keyed = value|0; break\n\t\t\t\tcase 'global': escape = value|0; break\n\t\t\t\tcase 'cascade': cascade = value|0; break\n\t\t\t\tcase 'compress': compress = value|0; break\n\t\t\t\tcase 'semicolon': semicolon = value|0; break\n\t\t\t\tcase 'preserve': preserve = value|0; break\n\t\t\t\tcase 'prefix':\n\t\t\t\t\tshould = null\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tprefix = 0\n\t\t\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\t\t\tprefix = 1\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprefix = 2\n\t\t\t\t\t\tshould = value\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn set\n\t}\n\n\t/**\n\t * Stylis\n\t *\n\t * @param {string} selector\n\t * @param {string} input\n\t * @return {*}\n\t */\n\tfunction stylis (selector, input) {\n\t\tif (this !== void 0 && this.constructor === stylis) {\n\t\t\treturn factory(selector)\n\t\t}\n\n\t\t// setup\n\t\tvar ns = selector\n\t\tvar code = ns.charCodeAt(0)\n\n\t\t// trim leading whitespace\n\t\tif (code < 33) {\n\t\t\tcode = (ns = ns.trim()).charCodeAt(0)\n\t\t}\n\n\t\t// keyframe/animation namespace\n\t\tif (keyed > 0) {\n\t\t\tkey = ns.replace(invalidptn, code === OPENBRACKET ? '' : '-')\n\t\t}\n\n\t\t// reset, used to assert if a plugin is moneky-patching the return value\n\t\tcode = 1\n\n\t\t// cascade/isolate\n\t\tif (cascade === 1) {\n\t\t\tnscope = ns\n\t\t} else {\n\t\t\tnscopealt = ns\n\t\t}\n\n\t\tvar selectors = [nscope]\n\t\tvar result\n\n\t\t// execute plugins, pre-process context\n\t\tif (plugged > 0) {\n\t\t\tresult = proxy(PREPS, input, selectors, selectors, line, column, 0, 0, 0, 0)\n\n\t\t\tif (result !== void 0 && typeof result === 'string') {\n\t\t\t\tinput = result\n\t\t\t}\n\t\t}\n\n\t\t// build\n\t\tvar output = compile(array, selectors, input, 0, 0)\n\n\t\t// execute plugins, post-process context\n\t\tif (plugged > 0) {\n\t\t\tresult = proxy(POSTS, output, selectors, selectors, line, column, output.length, 0, 0, 0)\n\n\t\t\t// bypass minification\n\t\t\tif (result !== void 0 && typeof(output = result) !== 'string') {\n\t\t\t\tcode = 0\n\t\t\t}\n\t\t}\n\n\t\t// reset\n\t\tkey = ''\n\t\tnscope = ''\n\t\tnscopealt = ''\n\t\tpattern = 0\n\t\tline = 1\n\t\tcolumn = 1\n\n\t\treturn compress*code === 0 ? output : minify(output)\n\t}\n\n\tstylis['use'] = use\n\tstylis['set'] = set\n\n\tif (options !== void 0) {\n\t\tset(options)\n\t}\n\n\treturn stylis\n}));\n"]},"metadata":{},"sourceType":"script"}