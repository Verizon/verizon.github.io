"use strict";

var _chai = require("chai");

var _config = _interopRequireWildcard(require("./config"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-env mocha */
describe('config', function () {
  describe('BASE_CONF', function () {
    it('should be an object', function () {
      (0, _chai.expect)(_config.BASE_CONF).to.be.an('object');
    });
  });
  describe('DIMENSION_NAMES', function () {
    it('should be an array', function () {
      (0, _chai.expect)(_config.DIMENSION_NAMES).to.be.an('array');
    });
  });
  describe('config()', function () {
    it('should be a function', function () {
      (0, _chai.expect)(_config["default"]).to.be.an('function');
    });
  });
});